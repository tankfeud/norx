nimTitle	math	norx/math.html	module norx/math		0
nim	lerp	norx/math.html#lerp.t,untyped,untyped,untyped	template lerp(a, b, t: untyped): untyped		3
nim	initRandom	norx/math.html#initRandom,orxU32	proc initRandom(u32Seed: orxU32)		10
nim	getRandomFloat	norx/math.html#getRandomFloat,orxFLOAT,orxFLOAT	proc getRandomFloat(fMin: orxFLOAT; fMax: orxFLOAT): orxFLOAT		15
nim	getSteppedRandomFloat	norx/math.html#getSteppedRandomFloat,orxFLOAT,orxFLOAT,orxFLOAT	proc getSteppedRandomFloat(fMin: orxFLOAT; fMax: orxFLOAT; fStep: orxFLOAT): orxFLOAT		22
nim	getRandomU32	norx/math.html#getRandomU32,orxU32,orxU32	proc getRandomU32(u32Min: orxU32; u32Max: orxU32): orxU32		30
nim	getSteppedRandomU32	norx/math.html#getSteppedRandomU32,orxU32,orxU32,orxU32	proc getSteppedRandomU32(u32Min: orxU32; u32Max: orxU32; u32Step: orxU32): orxU32		37
nim	getRandomS32	norx/math.html#getRandomS32,orxS32,orxS32	proc getRandomS32(s32Min: orxS32; s32Max: orxS32): orxS32		45
nim	getSteppedRandomS32	norx/math.html#getSteppedRandomS32,orxS32,orxS32,orxS32	proc getSteppedRandomS32(s32Min: orxS32; s32Max: orxS32; s32Step: orxS32): orxS32		52
nim	getRandomU64	norx/math.html#getRandomU64,orxU64,orxU64	proc getRandomU64(u64Min: orxU64; u64Max: orxU64): orxU64		60
nim	getSteppedRandomU64	norx/math.html#getSteppedRandomU64,orxU64,orxU64,orxU64	proc getSteppedRandomU64(u64Min: orxU64; u64Max: orxU64; u64Step: orxU64): orxU64		67
nim	getRandomS64	norx/math.html#getRandomS64,orxS64,orxS64	proc getRandomS64(s64Min: orxS64; s64Max: orxS64): orxS64		75
nim	getSteppedRandomS64	norx/math.html#getSteppedRandomS64,orxS64,orxS64,orxS64	proc getSteppedRandomS64(s64Min: orxS64; s64Max: orxS64; s64Step: orxS64): orxS64		82
nim	getRandomSeeds	norx/math.html#getRandomSeeds,array[,orxU32]	proc getRandomSeeds(au32Seeds: array[4, orxU32])		90
nim	setRandomSeeds	norx/math.html#setRandomSeeds,array[,orxU32]	proc setRandomSeeds(au32Seeds: array[4, orxU32])		95
nim	getBitCount	norx/math.html#getBitCount,orxU32	proc getBitCount(u32Value: orxU32): orxU32		100
nim	getTrailingZeroCount	norx/math.html#getTrailingZeroCount,orxU32	proc getTrailingZeroCount(u32Value: orxU32): orxU32		107
nim	getTrailingZeroCount64	norx/math.html#getTrailingZeroCount64,orxU64	proc getTrailingZeroCount64(u64Value: orxU64): orxU32		123
nim	isPowerOfTwo	norx/math.html#isPowerOfTwo,orxU32	proc isPowerOfTwo(u32Value: orxU32): orxBOOL		145
nim	getNextPowerOfTwo	norx/math.html#getNextPowerOfTwo,orxU32	proc getNextPowerOfTwo(u32Value: orxU32): orxU32		155
nim	smoothStep	norx/math.html#smoothStep,orxFLOAT,orxFLOAT,orxFLOAT	proc smoothStep(fMin: orxFLOAT; fMax: orxFLOAT; fValue: orxFLOAT): orxFLOAT		176
nim	smootherStep	norx/math.html#smootherStep,orxFLOAT,orxFLOAT,orxFLOAT	proc smootherStep(fMin: orxFLOAT; fMax: orxFLOAT; fValue: orxFLOAT): orxFLOAT		194
nim	orxMATH_KF_SQRT_2	norx/math.html#orxMATH_KF_SQRT_2	const orxMATH_KF_SQRT_2		215
nim	orxMATH_KF_EPSILON	norx/math.html#orxMATH_KF_EPSILON	const orxMATH_KF_EPSILON		216
nim	orxMATH_KF_TINY_EPSILON	norx/math.html#orxMATH_KF_TINY_EPSILON	const orxMATH_KF_TINY_EPSILON		217
nim	orxMATH_KF_2_PI	norx/math.html#orxMATH_KF_2_PI	const orxMATH_KF_2_PI		218
nim	orxMATH_KF_PI	norx/math.html#orxMATH_KF_PI	const orxMATH_KF_PI		219
nim	orxMATH_KF_PI_BY_2	norx/math.html#orxMATH_KF_PI_BY_2	const orxMATH_KF_PI_BY_2		220
nim	orxMATH_KF_PI_BY_4	norx/math.html#orxMATH_KF_PI_BY_4	const orxMATH_KF_PI_BY_4		221
nim	orxMATH_KF_DEG_TO_RAD	norx/math.html#orxMATH_KF_DEG_TO_RAD	const orxMATH_KF_DEG_TO_RAD		224
nim	orxMATH_KF_RAD_TO_DEG	norx/math.html#orxMATH_KF_RAD_TO_DEG	const orxMATH_KF_RAD_TO_DEG		225
nim	round	norx/math.html#round,orxFLOAT	proc round(fOp: orxFLOAT): orxFLOAT		228
