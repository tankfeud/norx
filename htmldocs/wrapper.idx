nimTitle	wrapper	wrapper.html	module src/wrapper		0
nim	enum_orxSEEK_OFFSET_WHENCE_t_520095056	wrapper.html#enum_orxSEEK_OFFSET_WHENCE_t_520095056	enum enum_orxSEEK_OFFSET_WHENCE_t_520095056		16
nim	enum_orxCOLORSPACE_t_520095060	wrapper.html#enum_orxCOLORSPACE_t_520095060	enum enum_orxCOLORSPACE_t_520095060		21
nim	enum_orxSTATUS_t_520095064	wrapper.html#enum_orxSTATUS_t_520095064	enum enum_orxSTATUS_t_520095064		25
nim	enum_orxMODULE_ID_t_520095072	wrapper.html#enum_orxMODULE_ID_t_520095072	enum enum_orxMODULE_ID_t_520095072		28
nim	MODULE_ID_USER_DEFINED	wrapper.html#MODULE_ID_USER_DEFINED	const MODULE_ID_USER_DEFINED		50
nim	enum_orxDEBUG_LEVEL_t_520095084	wrapper.html#enum_orxDEBUG_LEVEL_t_520095084	enum enum_orxDEBUG_LEVEL_t_520095084		56
nim	enum_orxMEMORY_TYPE_t_520095090	wrapper.html#enum_orxMEMORY_TYPE_t_520095090	enum enum_orxMEMORY_TYPE_t_520095090		69
nim	enum_orxSYSTEM_EVENT_t_520095098	wrapper.html#enum_orxSYSTEM_EVENT_t_520095098	enum enum_orxSYSTEM_EVENT_t_520095098		75
nim	enum_orxCLOCK_MODIFIER_t_520095113	wrapper.html#enum_orxCLOCK_MODIFIER_t_520095113	enum enum_orxCLOCK_MODIFIER_t_520095113		86
nim	enum_orxCLOCK_PRIORITY_t_520095117	wrapper.html#enum_orxCLOCK_PRIORITY_t_520095117	enum enum_orxCLOCK_PRIORITY_t_520095117		91
nim	enum_orxCLOCK_EVENT_t_520095125	wrapper.html#enum_orxCLOCK_EVENT_t_520095125	enum enum_orxCLOCK_EVENT_t_520095125		97
nim	enum_orxSTRUCTURE_ID_t_520095149	wrapper.html#enum_orxSTRUCTURE_ID_t_520095149	enum enum_orxSTRUCTURE_ID_t_520095149		101
nim	STRUCTURE_ID_ANIM	wrapper.html#STRUCTURE_ID_ANIM	const STRUCTURE_ID_ANIM		114
nim	enum_orxSTRUCTURE_STORAGE_TYPE_t_520095153	wrapper.html#enum_orxSTRUCTURE_STORAGE_TYPE_t_520095153	enum enum_orxSTRUCTURE_STORAGE_TYPE_t_520095153		120
nim	enum_orxANIM_EVENT_t_520095165	wrapper.html#enum_orxANIM_EVENT_t_520095165	enum enum_orxANIM_EVENT_t_520095165		124
nim	enum_orxCOMMAND_VAR_TYPE_t_520095183	wrapper.html#enum_orxCOMMAND_VAR_TYPE_t_520095183	enum enum_orxCOMMAND_VAR_TYPE_t_520095183		129
nim	enum_orxCONFIG_EVENT_t_520095197	wrapper.html#enum_orxCONFIG_EVENT_t_520095197	enum enum_orxCONFIG_EVENT_t_520095197		137
nim	enum_orxPLUGIN_FUNCTION_ID_t_520095207	wrapper.html#enum_orxPLUGIN_FUNCTION_ID_t_520095207	enum enum_orxPLUGIN_FUNCTION_ID_t_520095207		141
nim	enum_orxPLUGIN_CORE_ID_t_520095213	wrapper.html#enum_orxPLUGIN_CORE_ID_t_520095213	enum enum_orxPLUGIN_CORE_ID_t_520095213		144
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_DISPLAY_t_520095217	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_DISPLAY_t_520095217	enum enum_orxPLUGIN_FUNCTION_BASE_ID_DISPLAY_t_520095217		151
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK_t_520095221	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK_t_520095221	enum enum_orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK_t_520095221		201
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD_t_520095225	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD_t_520095225	enum enum_orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD_t_520095225		210
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_MOUSE_t_520095229	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_MOUSE_t_520095229	enum enum_orxPLUGIN_FUNCTION_BASE_ID_MOUSE_t_520095229		222
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_PHYSICS_t_520095233	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_PHYSICS_t_520095233	enum enum_orxPLUGIN_FUNCTION_BASE_ID_PHYSICS_t_520095233		235
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_RENDER_t_520095237	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_RENDER_t_520095237	enum enum_orxPLUGIN_FUNCTION_BASE_ID_RENDER_t_520095237		294
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM_t_520095241	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM_t_520095241	enum enum_orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM_t_520095241		302
nim	enum_orxDISPLAY_PRIMITIVE_t_520095277	wrapper.html#enum_orxDISPLAY_PRIMITIVE_t_520095277	enum enum_orxDISPLAY_PRIMITIVE_t_520095277		356
nim	enum_orxDISPLAY_SMOOTHING_t_520095297	wrapper.html#enum_orxDISPLAY_SMOOTHING_t_520095297	enum enum_orxDISPLAY_SMOOTHING_t_520095297		363
nim	enum_orxDISPLAY_BLEND_MODE_t_520095301	wrapper.html#enum_orxDISPLAY_BLEND_MODE_t_520095301	enum enum_orxDISPLAY_BLEND_MODE_t_520095301		368
nim	enum_orxDISPLAY_EVENT_t_520095309	wrapper.html#enum_orxDISPLAY_EVENT_t_520095309	enum enum_orxDISPLAY_EVENT_t_520095309		373
nim	enum_orxTEXTURE_EVENT_t_520095317	wrapper.html#enum_orxTEXTURE_EVENT_t_520095317	enum enum_orxTEXTURE_EVENT_t_520095317		377
nim	enum_orxJOYSTICK_BUTTON_t_520095325	wrapper.html#enum_orxJOYSTICK_BUTTON_t_520095325	enum enum_orxJOYSTICK_BUTTON_t_520095325		381
nim	JOYSTICK_BUTTON_A_2	wrapper.html#JOYSTICK_BUTTON_A_2	const JOYSTICK_BUTTON_A_2		705
nim	enum_orxJOYSTICK_AXIS_t_520095329	wrapper.html#enum_orxJOYSTICK_AXIS_t_520095329	enum enum_orxJOYSTICK_AXIS_t_520095329		711
nim	JOYSTICK_AXIS_LX_2	wrapper.html#JOYSTICK_AXIS_LX_2	const JOYSTICK_AXIS_LX_2		759
nim	enum_orxKEYBOARD_KEY_t_520095333	wrapper.html#enum_orxKEYBOARD_KEY_t_520095333	enum enum_orxKEYBOARD_KEY_t_520095333		765
nim	enum_orxMOUSE_BUTTON_t_520095337	wrapper.html#enum_orxMOUSE_BUTTON_t_520095337	enum enum_orxMOUSE_BUTTON_t_520095337		816
nim	enum_orxMOUSE_AXIS_t_520095341	wrapper.html#enum_orxMOUSE_AXIS_t_520095341	enum enum_orxMOUSE_AXIS_t_520095341		823
nim	enum_orxINPUT_TYPE_t_520095345	wrapper.html#enum_orxINPUT_TYPE_t_520095345	enum enum_orxINPUT_TYPE_t_520095345		827
nim	enum_orxINPUT_MODE_t_520095349	wrapper.html#enum_orxINPUT_MODE_t_520095349	enum enum_orxINPUT_MODE_t_520095349		833
nim	enum_orxINPUT_EVENT_t_520095353	wrapper.html#enum_orxINPUT_EVENT_t_520095353	enum enum_orxINPUT_EVENT_t_520095353		837
nim	enum_orxEVENT_TYPE_t_520095361	wrapper.html#enum_orxEVENT_TYPE_t_520095361	enum enum_orxEVENT_TYPE_t_520095361		842
nim	EVENT_TYPE_FIRST_RESERVED	wrapper.html#EVENT_TYPE_FIRST_RESERVED	const EVENT_TYPE_FIRST_RESERVED		854
nim	enum_orxLOCALE_EVENT_t_520095371	wrapper.html#enum_orxLOCALE_EVENT_t_520095371	enum enum_orxLOCALE_EVENT_t_520095371		860
nim	enum_orxRESOURCE_EVENT_t_520095405	wrapper.html#enum_orxRESOURCE_EVENT_t_520095405	enum enum_orxRESOURCE_EVENT_t_520095405		864
nim	enum_orxSOUNDSYSTEM_STREAM_TYPE_t_520095441	wrapper.html#enum_orxSOUNDSYSTEM_STREAM_TYPE_t_520095441	enum enum_orxSOUNDSYSTEM_STREAM_TYPE_t_520095441		868
nim	enum_orxSOUNDSYSTEM_STATUS_t_520095445	wrapper.html#enum_orxSOUNDSYSTEM_STATUS_t_520095445	enum enum_orxSOUNDSYSTEM_STATUS_t_520095445		876
nim	enum_orxSOUND_FILTER_TYPE_t_520095449	wrapper.html#enum_orxSOUND_FILTER_TYPE_t_520095449	enum enum_orxSOUND_FILTER_TYPE_t_520095449		881
nim	enum_orxSOUND_STATUS_t_520095459	wrapper.html#enum_orxSOUND_STATUS_t_520095459	enum enum_orxSOUND_STATUS_t_520095459		889
nim	enum_orxSOUND_EVENT_t_520095467	wrapper.html#enum_orxSOUND_EVENT_t_520095467	enum enum_orxSOUND_EVENT_t_520095467		893
nim	enum_orxOBJECT_EVENT_t_520095483	wrapper.html#enum_orxOBJECT_EVENT_t_520095483	enum enum_orxOBJECT_EVENT_t_520095483		900
nim	enum_orxFX_TYPE_t_520095489	wrapper.html#enum_orxFX_TYPE_t_520095489	enum enum_orxFX_TYPE_t_520095489		905
nim	FX_TYPE_MAX_NUMBER	wrapper.html#FX_TYPE_MAX_NUMBER	const FX_TYPE_MAX_NUMBER		914
nim	enum_orxFX_CURVE_t_520095493	wrapper.html#enum_orxFX_CURVE_t_520095493	enum enum_orxFX_CURVE_t_520095493		920
nim	FX_CURVE_BEZIER	wrapper.html#FX_CURVE_BEZIER	const FX_CURVE_BEZIER		941
nim	enum_orxFX_EVENT_t_520095503	wrapper.html#enum_orxFX_EVENT_t_520095503	enum enum_orxFX_EVENT_t_520095503		947
nim	enum_orxFRAME_SPACE_t_520095513	wrapper.html#enum_orxFRAME_SPACE_t_520095513	enum enum_orxFRAME_SPACE_t_520095513		951
nim	enum_orxSPAWNER_EVENT_t_520095519	wrapper.html#enum_orxSPAWNER_EVENT_t_520095519	enum enum_orxSPAWNER_EVENT_t_520095519		955
nim	enum_orxTIMELINE_EVENT_t_520095527	wrapper.html#enum_orxTIMELINE_EVENT_t_520095527	enum enum_orxTIMELINE_EVENT_t_520095527		961
nim	enum_orxTRIGGER_EVENT_t_520095537	wrapper.html#enum_orxTRIGGER_EVENT_t_520095537	enum enum_orxTRIGGER_EVENT_t_520095537		967
nim	enum_orxPHYSICS_EVENT_t_520095557	wrapper.html#enum_orxPHYSICS_EVENT_t_520095557	enum enum_orxPHYSICS_EVENT_t_520095557		972
nim	enum_orxSHADER_PARAM_TYPE_t_520095579	wrapper.html#enum_orxSHADER_PARAM_TYPE_t_520095579	enum enum_orxSHADER_PARAM_TYPE_t_520095579		976
nim	enum_orxSHADER_EVENT_t_520095589	wrapper.html#enum_orxSHADER_EVENT_t_520095589	enum enum_orxSHADER_EVENT_t_520095589		981
nim	enum_orxVIEWPORT_EVENT_t_520095601	wrapper.html#enum_orxVIEWPORT_EVENT_t_520095601	enum enum_orxVIEWPORT_EVENT_t_520095601		984
nim	enum_orxRENDER_EVENT_t_520095605	wrapper.html#enum_orxRENDER_EVENT_t_520095605	enum enum_orxRENDER_EVENT_t_520095605		988
nim	struct_orxSPAWNER_t	wrapper.html#struct_orxSPAWNER_t	object struct_orxSPAWNER_t		997
nim	struct_orxSHADER_t	wrapper.html#struct_orxSHADER_t	object struct_orxSHADER_t		1004
nim	struct_orxCAMERA_t	wrapper.html#struct_orxCAMERA_t	object struct_orxCAMERA_t		1011
nim	struct_orxCLOCK_t	wrapper.html#struct_orxCLOCK_t	object struct_orxCLOCK_t		1018
nim	struct_orxOBJECT_t	wrapper.html#struct_orxOBJECT_t	object struct_orxOBJECT_t		1025
nim	inline	wrapper.html#inline	object inline		1032
nim	struct_orxSOUNDSYSTEM_SAMPLE_t	wrapper.html#struct_orxSOUNDSYSTEM_SAMPLE_t	object struct_orxSOUNDSYSTEM_SAMPLE_t		1038
nim	struct_orxSOUND_t	wrapper.html#struct_orxSOUND_t	object struct_orxSOUND_t		1045
nim	struct_orxPHYSICS_BODY_PART_t	wrapper.html#struct_orxPHYSICS_BODY_PART_t	object struct_orxPHYSICS_BODY_PART_t		1052
nim	struct_orxTEXTURE_t	wrapper.html#struct_orxTEXTURE_t	object struct_orxTEXTURE_t		1059
nim	struct_orxTHREAD_SEMAPHORE_t	wrapper.html#struct_orxTHREAD_SEMAPHORE_t	object struct_orxTHREAD_SEMAPHORE_t		1066
nim	struct_orxHASHTABLE_t	wrapper.html#struct_orxHASHTABLE_t	object struct_orxHASHTABLE_t		1073
nim	struct_orxSHADERPOINTER_t	wrapper.html#struct_orxSHADERPOINTER_t	object struct_orxSHADERPOINTER_t		1080
nim	struct_orxFILE_t	wrapper.html#struct_orxFILE_t	object struct_orxFILE_t		1087
nim	struct_orxSOUNDSYSTEM_SOUND_t	wrapper.html#struct_orxSOUNDSYSTEM_SOUND_t	object struct_orxSOUNDSYSTEM_SOUND_t		1094
nim	struct_orxTRIGGER_t	wrapper.html#struct_orxTRIGGER_t	object struct_orxTRIGGER_t		1101
nim	struct_orxFX_t	wrapper.html#struct_orxFX_t	object struct_orxFX_t		1108
nim	struct_orxBODY_JOINT_t	wrapper.html#struct_orxBODY_JOINT_t	object struct_orxBODY_JOINT_t		1115
nim	struct_orxANIMPOINTER_t	wrapper.html#struct_orxANIMPOINTER_t	object struct_orxANIMPOINTER_t		1122
nim	struct_orxANIMSET_LINK_TABLE_t	wrapper.html#struct_orxANIMSET_LINK_TABLE_t	object struct_orxANIMSET_LINK_TABLE_t		1129
nim	mainInit	wrapper.html#mainInit	object mainInit		1136
nim	struct_orxPHYSICS_BODY_t	wrapper.html#struct_orxPHYSICS_BODY_t	object struct_orxPHYSICS_BODY_t		1142
nim	struct_orxBANK_t	wrapper.html#struct_orxBANK_t	object struct_orxBANK_t		1149
nim	struct_orxBITMAP_t	wrapper.html#struct_orxBITMAP_t	object struct_orxBITMAP_t		1156
nim	struct_orxTEXT_t	wrapper.html#struct_orxTEXT_t	object struct_orxTEXT_t		1163
nim	struct_orxBODY_t	wrapper.html#struct_orxBODY_t	object struct_orxBODY_t		1170
nim	struct_orxANIM_t	wrapper.html#struct_orxANIM_t	object struct_orxANIM_t		1177
nim	struct_orxANIMSET_t	wrapper.html#struct_orxANIMSET_t	object struct_orxANIMSET_t		1184
nim	struct_orxGRAPHIC_t	wrapper.html#struct_orxGRAPHIC_t	object struct_orxGRAPHIC_t		1191
nim	struct_orxFXPOINTER_t	wrapper.html#struct_orxFXPOINTER_t	object struct_orxFXPOINTER_t		1198
nim	struct_orxTIMELINE_t	wrapper.html#struct_orxTIMELINE_t	object struct_orxTIMELINE_t		1205
nim	struct_orxFONT_t	wrapper.html#struct_orxFONT_t	object struct_orxFONT_t		1212
nim	struct_orxBODY_PART_t	wrapper.html#struct_orxBODY_PART_t	object struct_orxBODY_PART_t		1219
nim	struct_orxSOUND_SAMPLE_t	wrapper.html#struct_orxSOUND_SAMPLE_t	object struct_orxSOUND_SAMPLE_t		1226
nim	struct_orxPHYSICS_BODY_JOINT_t	wrapper.html#struct_orxPHYSICS_BODY_JOINT_t	object struct_orxPHYSICS_BODY_JOINT_t		1233
nim	dev	wrapper.html#dev	object dev		1240
nim	struct_orxVIEWPORT_t	wrapper.html#struct_orxVIEWPORT_t	object struct_orxVIEWPORT_t		1246
nim	struct_orxSOUNDPOINTER_t	wrapper.html#struct_orxSOUNDPOINTER_t	object struct_orxSOUNDPOINTER_t		1253
nim	struct_orxFRAME_t	wrapper.html#struct_orxFRAME_t	object struct_orxFRAME_t		1260
nim	orxINPUT_TYPE	wrapper.html#orxINPUT_TYPE	type orxINPUT_TYPE		4485
nim	orxTRIGGER_EVENT_PAYLOAD	wrapper.html#orxTRIGGER_EVENT_PAYLOAD	type orxTRIGGER_EVENT_PAYLOAD		4492
nim	orxLINKLIST_NODE	wrapper.html#orxLINKLIST_NODE	type orxLINKLIST_NODE		4499
nim	enum_orxSTRUCTURE_STORAGE_TYPE_t	wrapper.html#enum_orxSTRUCTURE_STORAGE_TYPE_t	type enum_orxSTRUCTURE_STORAGE_TYPE_t		4506
nim	enum_orxANIM_EVENT_t	wrapper.html#enum_orxANIM_EVENT_t	type enum_orxANIM_EVENT_t		4513
nim	orxOBJECT	wrapper.html#orxOBJECT	type orxOBJECT		4520
nim	orxDISPLAY_VERTEX	wrapper.html#orxDISPLAY_VERTEX	type orxDISPLAY_VERTEX		4526
nim	enum_orxTEXTURE_EVENT_t	wrapper.html#enum_orxTEXTURE_EVENT_t	type enum_orxTEXTURE_EVENT_t		4533
nim	orxU64	wrapper.html#orxU64	type orxU64		4540
nim	orxDISPLAY_PRIMITIVE	wrapper.html#orxDISPLAY_PRIMITIVE	type orxDISPLAY_PRIMITIVE		4546
nim	enum_orxFX_CURVE_t	wrapper.html#enum_orxFX_CURVE_t	type enum_orxFX_CURVE_t		4553
nim	enum_orxPLUGIN_FUNCTION_ID_t	wrapper.html#enum_orxPLUGIN_FUNCTION_ID_t	type enum_orxPLUGIN_FUNCTION_ID_t		4560
nim	orxCONFIG_EVENT	wrapper.html#orxCONFIG_EVENT	type orxCONFIG_EVENT		4567
nim	orxRESOURCE_EVENT	wrapper.html#orxRESOURCE_EVENT	type orxRESOURCE_EVENT		4574
nim	orxFX_EVENT_PAYLOAD	wrapper.html#orxFX_EVENT_PAYLOAD	type orxFX_EVENT_PAYLOAD		4581
nim	struct_orxSHADER_EVENT_PAYLOAD_t	wrapper.html#struct_orxSHADER_EVENT_PAYLOAD_t	type struct_orxSHADER_EVENT_PAYLOAD_t		4588
nim	struct_orxDISPLAY_VIDEO_MODE_t	wrapper.html#struct_orxDISPLAY_VIDEO_MODE_t	type struct_orxDISPLAY_VIDEO_MODE_t		4595
nim	orxMODULE_SETUP_FUNCTION	wrapper.html#orxMODULE_SETUP_FUNCTION	type orxMODULE_SETUP_FUNCTION		4602
nim	struct_orxTREE_t	wrapper.html#struct_orxTREE_t	type struct_orxTREE_t		4609
nim	enum_orxCOLORSPACE_t	wrapper.html#enum_orxCOLORSPACE_t	type enum_orxCOLORSPACE_t		4616
nim	enum_orxSTATUS_t	wrapper.html#enum_orxSTATUS_t	type enum_orxSTATUS_t		4623
nim	enum_orxDEBUG_LEVEL_t	wrapper.html#enum_orxDEBUG_LEVEL_t	type enum_orxDEBUG_LEVEL_t		4630
nim	enum_orxSPAWNER_EVENT_t	wrapper.html#enum_orxSPAWNER_EVENT_t	type enum_orxSPAWNER_EVENT_t		4637
nim	struct_orxRENDER_EVENT_PAYLOAD_t	wrapper.html#struct_orxRENDER_EVENT_PAYLOAD_t	type struct_orxRENDER_EVENT_PAYLOAD_t		4644
nim	orxU16	wrapper.html#orxU16	type orxU16		4651
nim	orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD	wrapper.html#orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD	type orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD		4657
nim	orxFRAME	wrapper.html#orxFRAME	type orxFRAME		4664
nim	orxSTATUS	wrapper.html#orxSTATUS	type orxSTATUS		4670
nim	enum_orxSOUNDSYSTEM_STREAM_TYPE_t	wrapper.html#enum_orxSOUNDSYSTEM_STREAM_TYPE_t	type enum_orxSOUNDSYSTEM_STREAM_TYPE_t		4676
nim	struct_orxTRIGGER_EVENT_PAYLOAD_t	wrapper.html#struct_orxTRIGGER_EVENT_PAYLOAD_t	type struct_orxTRIGGER_EVENT_PAYLOAD_t		4683
nim	orxBODY_JOINT_DEF	wrapper.html#orxBODY_JOINT_DEF	type orxBODY_JOINT_DEF		4690
nim	orxDISPLAY_VIDEO_MODE	wrapper.html#orxDISPLAY_VIDEO_MODE	type orxDISPLAY_VIDEO_MODE		4697
nim	orxTRIGGER	wrapper.html#orxTRIGGER	type orxTRIGGER		4704
nim	orxSOUND_SAMPLE	wrapper.html#orxSOUND_SAMPLE	type orxSOUND_SAMPLE		4710
nim	orxS64	wrapper.html#orxS64	type orxS64		4717
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_RENDER_t	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_RENDER_t	type enum_orxPLUGIN_FUNCTION_BASE_ID_RENDER_t		4723
nim	orxSOUND_STREAM_INFO	wrapper.html#orxSOUND_STREAM_INFO	type orxSOUND_STREAM_INFO		4730
nim	orxMODULE_INIT_FUNCTION	wrapper.html#orxMODULE_INIT_FUNCTION	type orxMODULE_INIT_FUNCTION		4737
nim	enum_orxDISPLAY_SMOOTHING_t	wrapper.html#enum_orxDISPLAY_SMOOTHING_t	type enum_orxDISPLAY_SMOOTHING_t		4744
nim	orxINPUT_MODE	wrapper.html#orxINPUT_MODE	type orxINPUT_MODE		4751
nim	orxU8	wrapper.html#orxU8	type orxU8		4758
nim	struct_orxLOCALE_EVENT_PAYLOAD_t	wrapper.html#struct_orxLOCALE_EVENT_PAYLOAD_t	type struct_orxLOCALE_EVENT_PAYLOAD_t		4764
nim	enum_orxMOUSE_BUTTON_t	wrapper.html#enum_orxMOUSE_BUTTON_t	type enum_orxMOUSE_BUTTON_t		4771
nim	orxBITMAP	wrapper.html#orxBITMAP	type orxBITMAP		4778
nim	struct_orxCHARACTER_MAP_t	wrapper.html#struct_orxCHARACTER_MAP_t	type struct_orxCHARACTER_MAP_t		4784
nim	orxSHADERPOINTER	wrapper.html#orxSHADERPOINTER	type orxSHADERPOINTER		4791
nim	orxS16	wrapper.html#orxS16	type orxS16		4798
nim	orxCLOCK_FUNCTION	wrapper.html#orxCLOCK_FUNCTION	type orxCLOCK_FUNCTION		4804
nim	orxPHYSICS_BODY	wrapper.html#orxPHYSICS_BODY	type orxPHYSICS_BODY		4811
nim	orxPHYSICS_BODY_PART	wrapper.html#orxPHYSICS_BODY_PART	type orxPHYSICS_BODY_PART		4818
nim	orxCAMERA	wrapper.html#orxCAMERA	type orxCAMERA		4825
nim	enum_orxOBJECT_EVENT_t	wrapper.html#enum_orxOBJECT_EVENT_t	type enum_orxOBJECT_EVENT_t		4831
nim	orxHANDLE	wrapper.html#orxHANDLE	type orxHANDLE		4838
nim	orxDISPLAY_MESH	wrapper.html#orxDISPLAY_MESH	type orxDISPLAY_MESH		4844
nim	orxCONFIG_CLEAR_FUNCTION	wrapper.html#orxCONFIG_CLEAR_FUNCTION	type orxCONFIG_CLEAR_FUNCTION		4851
nim	orxINPUT_EVENT	wrapper.html#orxINPUT_EVENT	type orxINPUT_EVENT		4858
nim	orxDEBUG_CALLBACK_FUNCTION	wrapper.html#orxDEBUG_CALLBACK_FUNCTION	type orxDEBUG_CALLBACK_FUNCTION		4865
nim	enum_orxFX_EVENT_t	wrapper.html#enum_orxFX_EVENT_t	type enum_orxFX_EVENT_t		4872
nim	orxVIEWPORT	wrapper.html#orxVIEWPORT	type orxVIEWPORT		4879
nim	orxTIMELINE_EVENT	wrapper.html#orxTIMELINE_EVENT	type orxTIMELINE_EVENT		4885
nim	struct_orxEVENT_t	wrapper.html#struct_orxEVENT_t	type struct_orxEVENT_t		4892
nim	orxPLUGIN_FUNCTION_BASE_ID_PHYSICS	wrapper.html#orxPLUGIN_FUNCTION_BASE_ID_PHYSICS	type orxPLUGIN_FUNCTION_BASE_ID_PHYSICS		4899
nim	orxRESOURCE_FUNCTION_SEEK	wrapper.html#orxRESOURCE_FUNCTION_SEEK	type orxRESOURCE_FUNCTION_SEEK		4906
nim	enum_orxDISPLAY_EVENT_t	wrapper.html#enum_orxDISPLAY_EVENT_t	type enum_orxDISPLAY_EVENT_t		4913
nim	enum_orxJOYSTICK_BUTTON_t	wrapper.html#enum_orxJOYSTICK_BUTTON_t	type enum_orxJOYSTICK_BUTTON_t		4920
nim	orxRESOURCE_FUNCTION_LOCATE	wrapper.html#orxRESOURCE_FUNCTION_LOCATE	type orxRESOURCE_FUNCTION_LOCATE		4927
nim	struct_orxRESOURCE_TYPE_INFO_t	wrapper.html#struct_orxRESOURCE_TYPE_INFO_t	type struct_orxRESOURCE_TYPE_INFO_t		4934
nim	orxSHADER_EVENT	wrapper.html#orxSHADER_EVENT	type orxSHADER_EVENT		4941
nim	enum_orxSOUND_EVENT_t	wrapper.html#enum_orxSOUND_EVENT_t	type enum_orxSOUND_EVENT_t		4948
nim	orxMODULE_RUN_FUNCTION	wrapper.html#orxMODULE_RUN_FUNCTION	type orxMODULE_RUN_FUNCTION		4955
nim	orxCLOCK_INFO	wrapper.html#orxCLOCK_INFO	type orxCLOCK_INFO		4962
nim	struct_orxDISPLAY_TRANSFORM_t	wrapper.html#struct_orxDISPLAY_TRANSFORM_t	type struct_orxDISPLAY_TRANSFORM_t		4969
nim	orxSTRUCTURE_STORAGE_TYPE	wrapper.html#orxSTRUCTURE_STORAGE_TYPE	type orxSTRUCTURE_STORAGE_TYPE		4976
nim	orxBODY_PART_DEF	wrapper.html#orxBODY_PART_DEF	type orxBODY_PART_DEF		4983
nim	enum_orxCOMMAND_VAR_TYPE_t	wrapper.html#enum_orxCOMMAND_VAR_TYPE_t	type enum_orxCOMMAND_VAR_TYPE_t		4990
nim	orxBOOL	wrapper.html#orxBOOL	type orxBOOL		4997
nim	orxCOLOR	wrapper.html#orxCOLOR	type orxCOLOR		5003
nim	orxPLUGIN_USER_FUNCTION_INFO	wrapper.html#orxPLUGIN_USER_FUNCTION_INFO	type orxPLUGIN_USER_FUNCTION_INFO		5009
nim	orxTIMELINE	wrapper.html#orxTIMELINE	type orxTIMELINE		5016
nim	orxSOUNDPOINTER	wrapper.html#orxSOUNDPOINTER	type orxSOUNDPOINTER		5022
nim	orxSOUNDSYSTEM_STREAM_TYPE	wrapper.html#orxSOUNDSYSTEM_STREAM_TYPE	type orxSOUNDSYSTEM_STREAM_TYPE		5029
nim	struct_orxSOUND_EVENT_PAYLOAD_t	wrapper.html#struct_orxSOUND_EVENT_PAYLOAD_t	type struct_orxSOUND_EVENT_PAYLOAD_t		5036
nim	orxCOMMAND_VAR_DEF	wrapper.html#orxCOMMAND_VAR_DEF	type orxCOMMAND_VAR_DEF		5043
nim	orxRESOURCE_FUNCTION_OPEN	wrapper.html#orxRESOURCE_FUNCTION_OPEN	type orxRESOURCE_FUNCTION_OPEN		5050
nim	orxLOCALE_EVENT	wrapper.html#orxLOCALE_EVENT	type orxLOCALE_EVENT		5057
nim	orxFX_TYPE	wrapper.html#orxFX_TYPE	type orxFX_TYPE		5064
nim	orxMOUSE_BUTTON	wrapper.html#orxMOUSE_BUTTON	type orxMOUSE_BUTTON		5070
nim	orxANIM_EVENT	wrapper.html#orxANIM_EVENT	type orxANIM_EVENT		5077
nim	orxOBOX	wrapper.html#orxOBOX	type orxOBOX		5084
nim	struct_orxANIM_EVENT_PAYLOAD_t	wrapper.html#struct_orxANIM_EVENT_PAYLOAD_t	type struct_orxANIM_EVENT_PAYLOAD_t		5090
nim	enum_orxEVENT_TYPE_t	wrapper.html#enum_orxEVENT_TYPE_t	type enum_orxEVENT_TYPE_t		5097
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_DISPLAY_t	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_DISPLAY_t	type enum_orxPLUGIN_FUNCTION_BASE_ID_DISPLAY_t		5104
nim	enum_orxJOYSTICK_AXIS_t	wrapper.html#enum_orxJOYSTICK_AXIS_t	type enum_orxJOYSTICK_AXIS_t		5111
nim	orxDEBUG_LEVEL	wrapper.html#orxDEBUG_LEVEL	type orxDEBUG_LEVEL		5118
nim	orxANIMSET_LINK_TABLE	wrapper.html#orxANIMSET_LINK_TABLE	type orxANIMSET_LINK_TABLE		5125
nim	orxPLUGIN_CORE_ID	wrapper.html#orxPLUGIN_CORE_ID	type orxPLUGIN_CORE_ID		5132
nim	orxPHYSICS_BODY_JOINT	wrapper.html#orxPHYSICS_BODY_JOINT	type orxPHYSICS_BODY_JOINT		5139
nim	struct_orxSHADER_PARAM_t	wrapper.html#struct_orxSHADER_PARAM_t	type struct_orxSHADER_PARAM_t		5146
nim	orxFX	wrapper.html#orxFX	type orxFX		5153
nim	enum_orxSYSTEM_EVENT_t	wrapper.html#enum_orxSYSTEM_EVENT_t	type enum_orxSYSTEM_EVENT_t		5159
nim	orxPARAM_INIT_FUNCTION	wrapper.html#orxPARAM_INIT_FUNCTION	type orxPARAM_INIT_FUNCTION		5166
nim	struct_orxSTRUCTURE_t	wrapper.html#struct_orxSTRUCTURE_t	type struct_orxSTRUCTURE_t		5173
nim	struct_orxSYSTEM_EVENT_PAYLOAD_t	wrapper.html#struct_orxSYSTEM_EVENT_PAYLOAD_t	type struct_orxSYSTEM_EVENT_PAYLOAD_t		5180
nim	enum_orxCLOCK_EVENT_t	wrapper.html#enum_orxCLOCK_EVENT_t	type enum_orxCLOCK_EVENT_t		5187
nim	enum_orxRENDER_EVENT_t	wrapper.html#enum_orxRENDER_EVENT_t	type enum_orxRENDER_EVENT_t		5194
nim	struct_orxTREE_NODE_t	wrapper.html#struct_orxTREE_NODE_t	type struct_orxTREE_NODE_t		5201
nim	orxSOUND_STREAM_PACKET	wrapper.html#orxSOUND_STREAM_PACKET	type orxSOUND_STREAM_PACKET		5208
nim	struct_orxINPUT_EVENT_PAYLOAD_t	wrapper.html#struct_orxINPUT_EVENT_PAYLOAD_t	type struct_orxINPUT_EVENT_PAYLOAD_t		5215
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_MOUSE_t	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_MOUSE_t	type enum_orxPLUGIN_FUNCTION_BASE_ID_MOUSE_t		5222
nim	orxANIMSET	wrapper.html#orxANIMSET	type orxANIMSET		5229
nim	orxSOUNDSYSTEM_SOUND	wrapper.html#orxSOUNDSYSTEM_SOUND	type orxSOUNDSYSTEM_SOUND		5235
nim	orxTHREAD_FUNCTION	wrapper.html#orxTHREAD_FUNCTION	type orxTHREAD_FUNCTION		5242
nim	orxSTRINGID	wrapper.html#orxSTRINGID	type orxSTRINGID		5249
nim	enum_orxLOCALE_EVENT_t	wrapper.html#enum_orxLOCALE_EVENT_t	type enum_orxLOCALE_EVENT_t		5255
nim	enum_orxSOUND_STATUS_t	wrapper.html#enum_orxSOUND_STATUS_t	type enum_orxSOUND_STATUS_t		5262
nim	orxSHADER_PARAM	wrapper.html#orxSHADER_PARAM	type orxSHADER_PARAM		5269
nim	orxDISPLAY_TRANSFORM	wrapper.html#orxDISPLAY_TRANSFORM	type orxDISPLAY_TRANSFORM		5276
nim	orxSTRUCTURE	wrapper.html#orxSTRUCTURE	type orxSTRUCTURE		5283
nim	orxSOUND_FILTER_FUNCTION	wrapper.html#orxSOUND_FILTER_FUNCTION	type orxSOUND_FILTER_FUNCTION		5289
nim	struct_orxSOUND_FILTER_DATA_t	wrapper.html#struct_orxSOUND_FILTER_DATA_t	type struct_orxSOUND_FILTER_DATA_t		5296
nim	orxTREE_NODE	wrapper.html#orxTREE_NODE	type orxTREE_NODE		5303
nim	struct_orxFILE_INFO_t	wrapper.html#struct_orxFILE_INFO_t	type struct_orxFILE_INFO_t		5309
nim	orxRESOURCE_FUNCTION_GET_TIME	wrapper.html#orxRESOURCE_FUNCTION_GET_TIME	type orxRESOURCE_FUNCTION_GET_TIME		5316
nim	struct_orxVERSION_t	wrapper.html#struct_orxVERSION_t	type struct_orxVERSION_t		5323
nim	orxJOYSTICK_AXIS	wrapper.html#orxJOYSTICK_AXIS	type orxJOYSTICK_AXIS		5330
nim	enum_orxCLOCK_MODIFIER_t	wrapper.html#enum_orxCLOCK_MODIFIER_t	type enum_orxCLOCK_MODIFIER_t		5337
nim	enum_orxMODULE_ID_t	wrapper.html#enum_orxMODULE_ID_t	type enum_orxMODULE_ID_t		5344
nim	enum_orxFX_TYPE_t	wrapper.html#enum_orxFX_TYPE_t	type enum_orxFX_TYPE_t		5351
nim	orxFX_CURVE_PARAM	wrapper.html#orxFX_CURVE_PARAM	type orxFX_CURVE_PARAM		5358
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK_t	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK_t	type enum_orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK_t		5365
nim	enum_orxFRAME_SPACE_t	wrapper.html#enum_orxFRAME_SPACE_t	type enum_orxFRAME_SPACE_t		5372
nim	orxCONFIG_BOOTSTRAP_FUNCTION	wrapper.html#orxCONFIG_BOOTSTRAP_FUNCTION	type orxCONFIG_BOOTSTRAP_FUNCTION		5379
nim	enum_orxCONFIG_EVENT_t	wrapper.html#enum_orxCONFIG_EVENT_t	type enum_orxCONFIG_EVENT_t		5386
nim	enum_orxTRIGGER_EVENT_t	wrapper.html#enum_orxTRIGGER_EVENT_t	type enum_orxTRIGGER_EVENT_t		5393
nim	enum_orxINPUT_TYPE_t	wrapper.html#enum_orxINPUT_TYPE_t	type enum_orxINPUT_TYPE_t		5400
nim	orxTREE	wrapper.html#orxTREE	type orxTREE		5407
nim	orxRESOURCE_FUNCTION_DELETE	wrapper.html#orxRESOURCE_FUNCTION_DELETE	type orxRESOURCE_FUNCTION_DELETE		5413
nim	enum_orxPHYSICS_EVENT_t	wrapper.html#enum_orxPHYSICS_EVENT_t	type enum_orxPHYSICS_EVENT_t		5420
nim	orxRENDER_EVENT_PAYLOAD	wrapper.html#orxRENDER_EVENT_PAYLOAD	type orxRENDER_EVENT_PAYLOAD		5427
nim	enum_orxSTRUCTURE_ID_t	wrapper.html#enum_orxSTRUCTURE_ID_t	type enum_orxSTRUCTURE_ID_t		5434
nim	orxSHADER_EVENT_PAYLOAD	wrapper.html#orxSHADER_EVENT_PAYLOAD	type orxSHADER_EVENT_PAYLOAD		5441
nim	orxCONFIG_SAVE_FUNCTION	wrapper.html#orxCONFIG_SAVE_FUNCTION	type orxCONFIG_SAVE_FUNCTION		5448
nim	orxCLOCK	wrapper.html#orxCLOCK	type orxCLOCK		5455
nim	struct_orxANIM_CUSTOM_EVENT_t	wrapper.html#struct_orxANIM_CUSTOM_EVENT_t	type struct_orxANIM_CUSTOM_EVENT_t		5461
nim	orxPLUGIN_CORE_FUNCTION	wrapper.html#orxPLUGIN_CORE_FUNCTION	type orxPLUGIN_CORE_FUNCTION		5468
nim	orxTRIGGER_EVENT	wrapper.html#orxTRIGGER_EVENT	type orxTRIGGER_EVENT		5475
nim	struct_orxRESOURCE_EVENT_PAYLOAD_t	wrapper.html#struct_orxRESOURCE_EVENT_PAYLOAD_t	type struct_orxRESOURCE_EVENT_PAYLOAD_t		5482
nim	struct_orxBODY_PART_DEF_t	wrapper.html#struct_orxBODY_PART_DEF_t	type struct_orxBODY_PART_DEF_t		5489
nim	struct_orxCOMMAND_VAR_DEF_t	wrapper.html#struct_orxCOMMAND_VAR_DEF_t	type struct_orxCOMMAND_VAR_DEF_t		5496
nim	struct_orxVECTOR_t	wrapper.html#struct_orxVECTOR_t	type struct_orxVECTOR_t		5503
nim	orxCOMMAND_FUNCTION	wrapper.html#orxCOMMAND_FUNCTION	type orxCOMMAND_FUNCTION		5510
nim	orxRESOURCE_FUNCTION_WRITE	wrapper.html#orxRESOURCE_FUNCTION_WRITE	type orxRESOURCE_FUNCTION_WRITE		5517
nim	orxAABOX	wrapper.html#orxAABOX	type orxAABOX		5524
nim	orxLOCALE_EVENT_PAYLOAD	wrapper.html#orxLOCALE_EVENT_PAYLOAD	type orxLOCALE_EVENT_PAYLOAD		5530
nim	orxBODY_DEF	wrapper.html#orxBODY_DEF	type orxBODY_DEF		5537
nim	orxBODY_JOINT	wrapper.html#orxBODY_JOINT	type orxBODY_JOINT		5543
nim	orxSHADER_PARAM_TYPE	wrapper.html#orxSHADER_PARAM_TYPE	type orxSHADER_PARAM_TYPE		5550
nim	orxBANK	wrapper.html#orxBANK	type orxBANK		5557
nim	orxPLUGIN_FUNCTION_BASE_ID_DISPLAY	wrapper.html#orxPLUGIN_FUNCTION_BASE_ID_DISPLAY	type orxPLUGIN_FUNCTION_BASE_ID_DISPLAY		5563
nim	orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK	wrapper.html#orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK	type orxPLUGIN_FUNCTION_BASE_ID_JOYSTICK		5570
nim	enum_orxDISPLAY_BLEND_MODE_t	wrapper.html#enum_orxDISPLAY_BLEND_MODE_t	type enum_orxDISPLAY_BLEND_MODE_t		5577
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM_t	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM_t	type enum_orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM_t		5584
nim	orxFONT	wrapper.html#orxFONT	type orxFONT		5591
nim	orxGRAPHIC	wrapper.html#orxGRAPHIC	type orxGRAPHIC		5597
nim	struct_orxCOMMAND_VAR_t	wrapper.html#struct_orxCOMMAND_VAR_t	type struct_orxCOMMAND_VAR_t		5603
nim	enum_orxMEMORY_TYPE_t	wrapper.html#enum_orxMEMORY_TYPE_t	type enum_orxMEMORY_TYPE_t		5610
nim	orxDOUBLE	wrapper.html#orxDOUBLE	type orxDOUBLE		5617
nim	orxCHARACTER_GLYPH	wrapper.html#orxCHARACTER_GLYPH	type orxCHARACTER_GLYPH		5623
nim	orxCHARACTER_MAP	wrapper.html#orxCHARACTER_MAP	type orxCHARACTER_MAP		5630
nim	orxINPUT_EVENT_PAYLOAD	wrapper.html#orxINPUT_EVENT_PAYLOAD	type orxINPUT_EVENT_PAYLOAD		5637
nim	enum_orxSOUNDSYSTEM_STATUS_t	wrapper.html#enum_orxSOUNDSYSTEM_STATUS_t	type enum_orxSOUNDSYSTEM_STATUS_t		5644
nim	orxRESOURCE_FUNCTION_TELL	wrapper.html#orxRESOURCE_FUNCTION_TELL	type orxRESOURCE_FUNCTION_TELL		5651
nim	orxJOYSTICK_BUTTON	wrapper.html#orxJOYSTICK_BUTTON	type orxJOYSTICK_BUTTON		5658
nim	orxVIEWPORT_EVENT	wrapper.html#orxVIEWPORT_EVENT	type orxVIEWPORT_EVENT		5665
nim	orxEVENT	wrapper.html#orxEVENT	type orxEVENT		5672
nim	orxSOUND	wrapper.html#orxSOUND	type orxSOUND		5678
nim	orxMODULE_ID	wrapper.html#orxMODULE_ID	type orxMODULE_ID		5684
nim	orxRESOURCE_EVENT_PAYLOAD	wrapper.html#orxRESOURCE_EVENT_PAYLOAD	type orxRESOURCE_EVENT_PAYLOAD		5690
nim	struct_orxPHYSICS_EVENT_PAYLOAD_t	wrapper.html#struct_orxPHYSICS_EVENT_PAYLOAD_t	type struct_orxPHYSICS_EVENT_PAYLOAD_t		5697
nim	orxPLUGIN_FUNCTION	wrapper.html#orxPLUGIN_FUNCTION	type orxPLUGIN_FUNCTION		5704
nim	struct_orxDISPLAY_VERTEX_t	wrapper.html#struct_orxDISPLAY_VERTEX_t	type struct_orxDISPLAY_VERTEX_t		5711
nim	struct_orxAABOX_t	wrapper.html#struct_orxAABOX_t	type struct_orxAABOX_t		5718
nim	struct_orxBODY_JOINT_DEF_t	wrapper.html#struct_orxBODY_JOINT_DEF_t	type struct_orxBODY_JOINT_DEF_t		5725
nim	orxANIM_CUSTOM_EVENT	wrapper.html#orxANIM_CUSTOM_EVENT	type orxANIM_CUSTOM_EVENT		5732
nim	orxCLOCK_EVENT	wrapper.html#orxCLOCK_EVENT	type orxCLOCK_EVENT		5739
nim	orxCLOCK_MODIFIER	wrapper.html#orxCLOCK_MODIFIER	type orxCLOCK_MODIFIER		5746
nim	orxFX_EVENT	wrapper.html#orxFX_EVENT	type orxFX_EVENT		5753
nim	struct_orxCOLOR_t	wrapper.html#struct_orxCOLOR_t	type struct_orxCOLOR_t		5759
nim	orxRESOURCE_FUNCTION_CLOSE	wrapper.html#orxRESOURCE_FUNCTION_CLOSE	type orxRESOURCE_FUNCTION_CLOSE		5766
nim	struct_orxLINKLIST_NODE_t	wrapper.html#struct_orxLINKLIST_NODE_t	type struct_orxLINKLIST_NODE_t		5773
nim	orxSPTR	wrapper.html#orxSPTR	type orxSPTR		5780
nim	enum_orxTIMELINE_EVENT_t	wrapper.html#enum_orxTIMELINE_EVENT_t	type enum_orxTIMELINE_EVENT_t		5786
nim	enum_orxVIEWPORT_EVENT_t	wrapper.html#enum_orxVIEWPORT_EVENT_t	type enum_orxVIEWPORT_EVENT_t		5793
nim	struct_orxCLOCK_INFO_t	wrapper.html#struct_orxCLOCK_INFO_t	type struct_orxCLOCK_INFO_t		5800
nim	orxSTRUCTURE_ID	wrapper.html#orxSTRUCTURE_ID	type orxSTRUCTURE_ID		5807
nim	struct_orxOBOX_t	wrapper.html#struct_orxOBOX_t	type struct_orxOBOX_t		5814
nim	orxSOUNDSYSTEM_STATUS	wrapper.html#orxSOUNDSYSTEM_STATUS	type orxSOUNDSYSTEM_STATUS		5821
nim	orxFRAME_SPACE	wrapper.html#orxFRAME_SPACE	type orxFRAME_SPACE		5828
nim	orxMODULE_EXIT_FUNCTION	wrapper.html#orxMODULE_EXIT_FUNCTION	type orxMODULE_EXIT_FUNCTION		5835
nim	orxANIMPOINTER	wrapper.html#orxANIMPOINTER	type orxANIMPOINTER		5842
nim	orxHASHTABLE	wrapper.html#orxHASHTABLE	type orxHASHTABLE		5849
nim	enum_orxKEYBOARD_KEY_t	wrapper.html#enum_orxKEYBOARD_KEY_t	type enum_orxKEYBOARD_KEY_t		5855
nim	struct_orxFX_EVENT_PAYLOAD_t	wrapper.html#struct_orxFX_EVENT_PAYLOAD_t	type struct_orxFX_EVENT_PAYLOAD_t		5862
nim	struct_orxSOUND_STREAM_INFO_t	wrapper.html#struct_orxSOUND_STREAM_INFO_t	type struct_orxSOUND_STREAM_INFO_t		5869
nim	orxSYSTEM_EVENT_PAYLOAD	wrapper.html#orxSYSTEM_EVENT_PAYLOAD	type orxSYSTEM_EVENT_PAYLOAD		5876
nim	orxSOUND_EVENT	wrapper.html#orxSOUND_EVENT	type orxSOUND_EVENT		5883
nim	struct_orxCHARACTER_GLYPH_t	wrapper.html#struct_orxCHARACTER_GLYPH_t	type struct_orxCHARACTER_GLYPH_t		5890
nim	orxRESOURCE_TYPE_INFO	wrapper.html#orxRESOURCE_TYPE_INFO	type orxRESOURCE_TYPE_INFO		5897
nim	orxPARAM	wrapper.html#orxPARAM	type orxPARAM		5904
nim	enum_orxINPUT_MODE_t	wrapper.html#enum_orxINPUT_MODE_t	type enum_orxINPUT_MODE_t		5910
nim	orxSYSTEM_EVENT	wrapper.html#orxSYSTEM_EVENT	type orxSYSTEM_EVENT		5917
nim	orxRESOURCE_FUNCTION_GET_SIZE	wrapper.html#orxRESOURCE_FUNCTION_GET_SIZE	type orxRESOURCE_FUNCTION_GET_SIZE		5924
nim	struct_orxLINKLIST_t	wrapper.html#struct_orxLINKLIST_t	type struct_orxLINKLIST_t		5931
nim	orxSOUND_FILTER_DATA	wrapper.html#orxSOUND_FILTER_DATA	type orxSOUND_FILTER_DATA		5938
nim	orxOBJECT_EVENT	wrapper.html#orxOBJECT_EVENT	type orxOBJECT_EVENT		5945
nim	enum_orxSOUND_FILTER_TYPE_t	wrapper.html#enum_orxSOUND_FILTER_TYPE_t	type enum_orxSOUND_FILTER_TYPE_t		5952
nim	orxDISPLAY_SMOOTHING	wrapper.html#orxDISPLAY_SMOOTHING	type orxDISPLAY_SMOOTHING		5959
nim	orxCOMMAND_VAR_TYPE	wrapper.html#orxCOMMAND_VAR_TYPE	type orxCOMMAND_VAR_TYPE		5966
nim	orxKEYBOARD_KEY	wrapper.html#orxKEYBOARD_KEY	type orxKEYBOARD_KEY		5973
nim	orxPHYSICS_EVENT	wrapper.html#orxPHYSICS_EVENT	type orxPHYSICS_EVENT		5980
nim	struct_orxRGBA_t	wrapper.html#struct_orxRGBA_t	type struct_orxRGBA_t		5987
nim	orxPLUGIN_FUNCTION_ID	wrapper.html#orxPLUGIN_FUNCTION_ID	type orxPLUGIN_FUNCTION_ID		5994
nim	orxS32	wrapper.html#orxS32	type orxS32		6001
nim	orxFILE	wrapper.html#orxFILE	type orxFILE		6007
nim	orxSHADER	wrapper.html#orxSHADER	type orxSHADER		6013
nim	struct_orxBODY_DEF_t	wrapper.html#struct_orxBODY_DEF_t	type struct_orxBODY_DEF_t		6019
nim	orxSEEK_OFFSET_WHENCE	wrapper.html#orxSEEK_OFFSET_WHENCE	type orxSEEK_OFFSET_WHENCE		6026
nim	orxTEXTURE	wrapper.html#orxTEXTURE	type orxTEXTURE		6033
nim	enum_orxMOUSE_AXIS_t	wrapper.html#enum_orxMOUSE_AXIS_t	type enum_orxMOUSE_AXIS_t		6039
nim	enum_orxRESOURCE_EVENT_t	wrapper.html#enum_orxRESOURCE_EVENT_t	type enum_orxRESOURCE_EVENT_t		6046
nim	struct_orxDISPLAY_EVENT_PAYLOAD_t	wrapper.html#struct_orxDISPLAY_EVENT_PAYLOAD_t	type struct_orxDISPLAY_EVENT_PAYLOAD_t		6053
nim	orxRGBA	wrapper.html#orxRGBA	type orxRGBA		6060
nim	orxSOUND_EVENT_PAYLOAD	wrapper.html#orxSOUND_EVENT_PAYLOAD	type orxSOUND_EVENT_PAYLOAD		6066
nim	orxDISPLAY_BLEND_MODE	wrapper.html#orxDISPLAY_BLEND_MODE	type orxDISPLAY_BLEND_MODE		6073
nim	orxS8	wrapper.html#orxS8	type orxS8		6080
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD_t	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD_t	type enum_orxPLUGIN_FUNCTION_BASE_ID_KEYBOARD_t		6086
nim	struct_orxPLUGIN_USER_FUNCTION_INFO_t	wrapper.html#struct_orxPLUGIN_USER_FUNCTION_INFO_t	type struct_orxPLUGIN_USER_FUNCTION_INFO_t		6093
nim	orxANIM_EVENT_PAYLOAD	wrapper.html#orxANIM_EVENT_PAYLOAD	type orxANIM_EVENT_PAYLOAD		6100
nim	orxPLUGIN_INIT_FUNCTION	wrapper.html#orxPLUGIN_INIT_FUNCTION	type orxPLUGIN_INIT_FUNCTION		6107
nim	orxTHREAD_SEMAPHORE	wrapper.html#orxTHREAD_SEMAPHORE	type orxTHREAD_SEMAPHORE		6114
nim	orxTEXT	wrapper.html#orxTEXT	type orxTEXT		6121
nim	orxBODY_PART	wrapper.html#orxBODY_PART	type orxBODY_PART		6127
nim	struct_orxTIMELINE_EVENT_PAYLOAD_t	wrapper.html#struct_orxTIMELINE_EVENT_PAYLOAD_t	type struct_orxTIMELINE_EVENT_PAYLOAD_t		6133
nim	orxDISPLAY_EVENT	wrapper.html#orxDISPLAY_EVENT	type orxDISPLAY_EVENT		6140
nim	orxVECTOR	wrapper.html#orxVECTOR	type orxVECTOR		6147
nim	orxFX_CURVE	wrapper.html#orxFX_CURVE	type orxFX_CURVE		6153
nim	struct_orxDISPLAY_MESH_t	wrapper.html#struct_orxDISPLAY_MESH_t	type struct_orxDISPLAY_MESH_t		6159
nim	orxRENDER_EVENT	wrapper.html#orxRENDER_EVENT	type orxRENDER_EVENT		6166
nim	orxCOMMAND_VAR	wrapper.html#orxCOMMAND_VAR	type orxCOMMAND_VAR		6173
nim	struct_orxPARAM_t	wrapper.html#struct_orxPARAM_t	type struct_orxPARAM_t		6180
nim	enum_orxPLUGIN_FUNCTION_BASE_ID_PHYSICS_t	wrapper.html#enum_orxPLUGIN_FUNCTION_BASE_ID_PHYSICS_t	type enum_orxPLUGIN_FUNCTION_BASE_ID_PHYSICS_t		6187
nim	struct_orxFX_CURVE_PARAM_t	wrapper.html#struct_orxFX_CURVE_PARAM_t	type struct_orxFX_CURVE_PARAM_t		6194
nim	enum_orxCLOCK_PRIORITY_t	wrapper.html#enum_orxCLOCK_PRIORITY_t	type enum_orxCLOCK_PRIORITY_t		6201
nim	orxMOUSE_AXIS	wrapper.html#orxMOUSE_AXIS	type orxMOUSE_AXIS		6208
nim	orxCHAR	wrapper.html#orxCHAR	type orxCHAR		6215
nim	orxVERSION	wrapper.html#orxVERSION	type orxVERSION		6221
nim	orxUPTR	wrapper.html#orxUPTR	type orxUPTR		6227
nim	orxEVENT_TYPE	wrapper.html#orxEVENT_TYPE	type orxEVENT_TYPE		6233
nim	orxSOUNDSYSTEM_SAMPLE	wrapper.html#orxSOUNDSYSTEM_SAMPLE	type orxSOUNDSYSTEM_SAMPLE		6240
nim	orxSPAWNER_EVENT	wrapper.html#orxSPAWNER_EVENT	type orxSPAWNER_EVENT		6247
nim	orxTIMELINE_EVENT_PAYLOAD	wrapper.html#orxTIMELINE_EVENT_PAYLOAD	type orxTIMELINE_EVENT_PAYLOAD		6254
nim	orxFXPOINTER	wrapper.html#orxFXPOINTER	type orxFXPOINTER		6261
nim	orxMEMORY_TYPE	wrapper.html#orxMEMORY_TYPE	type orxMEMORY_TYPE		6267
nim	orxPLUGIN_FUNCTION_BASE_ID_MOUSE	wrapper.html#orxPLUGIN_FUNCTION_BASE_ID_MOUSE	type orxPLUGIN_FUNCTION_BASE_ID_MOUSE		6274
nim	orxLINKLIST	wrapper.html#orxLINKLIST	type orxLINKLIST		6281
nim	orxRESOURCE_FUNCTION_READ	wrapper.html#orxRESOURCE_FUNCTION_READ	type orxRESOURCE_FUNCTION_READ		6287
nim	enum_orxSEEK_OFFSET_WHENCE_t	wrapper.html#enum_orxSEEK_OFFSET_WHENCE_t	type enum_orxSEEK_OFFSET_WHENCE_t		6294
nim	orxEVENT_HANDLER	wrapper.html#orxEVENT_HANDLER	type orxEVENT_HANDLER		6301
nim	struct_orxPLUGIN_CORE_FUNCTION_t	wrapper.html#struct_orxPLUGIN_CORE_FUNCTION_t	type struct_orxPLUGIN_CORE_FUNCTION_t		6308
nim	enum_orxPLUGIN_CORE_ID_t	wrapper.html#enum_orxPLUGIN_CORE_ID_t	type enum_orxPLUGIN_CORE_ID_t		6315
nim	orxCLOCK_PRIORITY	wrapper.html#orxCLOCK_PRIORITY	type orxCLOCK_PRIORITY		6322
nim	orxANIM	wrapper.html#orxANIM	type orxANIM		6329
nim	orxBODY	wrapper.html#orxBODY	type orxBODY		6335
nim	orxPHYSICS_EVENT_PAYLOAD	wrapper.html#orxPHYSICS_EVENT_PAYLOAD	type orxPHYSICS_EVENT_PAYLOAD		6341
nim	orxPLUGIN_FUNCTION_BASE_ID_RENDER	wrapper.html#orxPLUGIN_FUNCTION_BASE_ID_RENDER	type orxPLUGIN_FUNCTION_BASE_ID_RENDER		6348
nim	orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM	wrapper.html#orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM	type orxPLUGIN_FUNCTION_BASE_ID_SOUNDSYSTEM		6355
nim	enum_orxDISPLAY_PRIMITIVE_t	wrapper.html#enum_orxDISPLAY_PRIMITIVE_t	type enum_orxDISPLAY_PRIMITIVE_t		6362
nim	orxDISPLAY_EVENT_PAYLOAD	wrapper.html#orxDISPLAY_EVENT_PAYLOAD	type orxDISPLAY_EVENT_PAYLOAD		6369
nim	enum_orxINPUT_EVENT_t	wrapper.html#enum_orxINPUT_EVENT_t	type enum_orxINPUT_EVENT_t		6376
nim	orxSOUND_STATUS	wrapper.html#orxSOUND_STATUS	type orxSOUND_STATUS		6383
nim	orxSTRUCTURE_UPDATE_FUNCTION	wrapper.html#orxSTRUCTURE_UPDATE_FUNCTION	type orxSTRUCTURE_UPDATE_FUNCTION		6390
nim	struct_orxSOUND_STREAM_PACKET_t	wrapper.html#struct_orxSOUND_STREAM_PACKET_t	type struct_orxSOUND_STREAM_PACKET_t		6397
nim	orxFILE_INFO	wrapper.html#orxFILE_INFO	type orxFILE_INFO		6404
nim	orxFLOAT	wrapper.html#orxFLOAT	type orxFLOAT		6410
nim	enum_orxSHADER_EVENT_t	wrapper.html#enum_orxSHADER_EVENT_t	type enum_orxSHADER_EVENT_t		6416
nim	enum_orxSHADER_PARAM_TYPE_t	wrapper.html#enum_orxSHADER_PARAM_TYPE_t	type enum_orxSHADER_PARAM_TYPE_t		6423
nim	orxCOLORSPACE	wrapper.html#orxCOLORSPACE	type orxCOLORSPACE		6430
nim	orxSPAWNER	wrapper.html#orxSPAWNER	type orxSPAWNER		6437
nim	orxTEXTURE_EVENT	wrapper.html#orxTEXTURE_EVENT	type orxTEXTURE_EVENT		6443
nim	orxRESOURCE_OP_FUNCTION	wrapper.html#orxRESOURCE_OP_FUNCTION	type orxRESOURCE_OP_FUNCTION		6450
nim	orxSOUND_FILTER_TYPE	wrapper.html#orxSOUND_FILTER_TYPE	type orxSOUND_FILTER_TYPE		6457
nim	orxENUM	wrapper.html#orxENUM	type orxENUM		6464
nim	orxU32	wrapper.html#orxU32	type orxU32		6470
nim	INLINE	wrapper.html#INLINE_2	type INLINE		6477
nim	NULL	wrapper.html#NULL	const NULL		6490
nim	ANSI_KZ_COLOR_RESET	wrapper.html#ANSI_KZ_COLOR_RESET	const ANSI_KZ_COLOR_RESET		6499
nim	ANSI_KZ_COLOR_BOLD_ON	wrapper.html#ANSI_KZ_COLOR_BOLD_ON	const ANSI_KZ_COLOR_BOLD_ON		6509
nim	ANSI_KZ_COLOR_ITALICS_ON	wrapper.html#ANSI_KZ_COLOR_ITALICS_ON	const ANSI_KZ_COLOR_ITALICS_ON		6519
nim	ANSI_KZ_COLOR_UNDERLINE_ON	wrapper.html#ANSI_KZ_COLOR_UNDERLINE_ON	const ANSI_KZ_COLOR_UNDERLINE_ON		6529
nim	ANSI_KZ_COLOR_BLINK_ON	wrapper.html#ANSI_KZ_COLOR_BLINK_ON	const ANSI_KZ_COLOR_BLINK_ON		6539
nim	ANSI_KZ_COLOR_INVERSE_ON	wrapper.html#ANSI_KZ_COLOR_INVERSE_ON	const ANSI_KZ_COLOR_INVERSE_ON		6549
nim	ANSI_KZ_COLOR_STRIKETHROUGH_ON	wrapper.html#ANSI_KZ_COLOR_STRIKETHROUGH_ON	const ANSI_KZ_COLOR_STRIKETHROUGH_ON		6559
nim	ANSI_KZ_COLOR_BOLD_OFF	wrapper.html#ANSI_KZ_COLOR_BOLD_OFF	const ANSI_KZ_COLOR_BOLD_OFF		6569
nim	ANSI_KZ_COLOR_ITALICS_OFF	wrapper.html#ANSI_KZ_COLOR_ITALICS_OFF	const ANSI_KZ_COLOR_ITALICS_OFF		6579
nim	ANSI_KZ_COLOR_UNDERLINE_OFF	wrapper.html#ANSI_KZ_COLOR_UNDERLINE_OFF	const ANSI_KZ_COLOR_UNDERLINE_OFF		6589
nim	ANSI_KZ_COLOR_BLINK_OFF	wrapper.html#ANSI_KZ_COLOR_BLINK_OFF	const ANSI_KZ_COLOR_BLINK_OFF		6599
nim	ANSI_KZ_COLOR_INVERSE_OFF	wrapper.html#ANSI_KZ_COLOR_INVERSE_OFF	const ANSI_KZ_COLOR_INVERSE_OFF		6609
nim	ANSI_KZ_COLOR_STRIKETHROUGH_OFF	wrapper.html#ANSI_KZ_COLOR_STRIKETHROUGH_OFF	const ANSI_KZ_COLOR_STRIKETHROUGH_OFF		6619
nim	ANSI_KZ_COLOR_FG_BLACK	wrapper.html#ANSI_KZ_COLOR_FG_BLACK	const ANSI_KZ_COLOR_FG_BLACK		6629
nim	ANSI_KZ_COLOR_FG_RED	wrapper.html#ANSI_KZ_COLOR_FG_RED	const ANSI_KZ_COLOR_FG_RED		6639
nim	ANSI_KZ_COLOR_FG_GREEN	wrapper.html#ANSI_KZ_COLOR_FG_GREEN	const ANSI_KZ_COLOR_FG_GREEN		6649
nim	ANSI_KZ_COLOR_FG_YELLOW	wrapper.html#ANSI_KZ_COLOR_FG_YELLOW	const ANSI_KZ_COLOR_FG_YELLOW		6659
nim	ANSI_KZ_COLOR_FG_BLUE	wrapper.html#ANSI_KZ_COLOR_FG_BLUE	const ANSI_KZ_COLOR_FG_BLUE		6669
nim	ANSI_KZ_COLOR_FG_MAGENTA	wrapper.html#ANSI_KZ_COLOR_FG_MAGENTA	const ANSI_KZ_COLOR_FG_MAGENTA		6679
nim	ANSI_KZ_COLOR_FG_CYAN	wrapper.html#ANSI_KZ_COLOR_FG_CYAN	const ANSI_KZ_COLOR_FG_CYAN		6689
nim	ANSI_KZ_COLOR_FG_WHITE	wrapper.html#ANSI_KZ_COLOR_FG_WHITE	const ANSI_KZ_COLOR_FG_WHITE		6699
nim	ANSI_KZ_COLOR_FG_DEFAULT	wrapper.html#ANSI_KZ_COLOR_FG_DEFAULT	const ANSI_KZ_COLOR_FG_DEFAULT		6709
nim	ANSI_KZ_COLOR_BG_BLACK	wrapper.html#ANSI_KZ_COLOR_BG_BLACK	const ANSI_KZ_COLOR_BG_BLACK		6719
nim	ANSI_KZ_COLOR_BG_RED	wrapper.html#ANSI_KZ_COLOR_BG_RED	const ANSI_KZ_COLOR_BG_RED		6729
nim	ANSI_KZ_COLOR_BG_GREEN	wrapper.html#ANSI_KZ_COLOR_BG_GREEN	const ANSI_KZ_COLOR_BG_GREEN		6739
nim	ANSI_KZ_COLOR_BG_YELLOW	wrapper.html#ANSI_KZ_COLOR_BG_YELLOW	const ANSI_KZ_COLOR_BG_YELLOW		6749
nim	ANSI_KZ_COLOR_BG_BLUE	wrapper.html#ANSI_KZ_COLOR_BG_BLUE	const ANSI_KZ_COLOR_BG_BLUE		6759
nim	ANSI_KZ_COLOR_BG_MAGENTA	wrapper.html#ANSI_KZ_COLOR_BG_MAGENTA	const ANSI_KZ_COLOR_BG_MAGENTA		6769
nim	ANSI_KZ_COLOR_BG_CYAN	wrapper.html#ANSI_KZ_COLOR_BG_CYAN	const ANSI_KZ_COLOR_BG_CYAN		6779
nim	ANSI_KZ_COLOR_BG_WHITE	wrapper.html#ANSI_KZ_COLOR_BG_WHITE	const ANSI_KZ_COLOR_BG_WHITE		6789
nim	ANSI_KZ_COLOR_BG_DEFAULT	wrapper.html#ANSI_KZ_COLOR_BG_DEFAULT	const ANSI_KZ_COLOR_BG_DEFAULT		6799
nim	ENUM_NONE	wrapper.html#ENUM_NONE	const ENUM_NONE		6809
nim	CHAR_ASCII_NUMBER	wrapper.html#CHAR_ASCII_NUMBER	const CHAR_ASCII_NUMBER		6818
nim	compiler_orxVERSION_MAJOR_private	wrapper.html#compiler_orxVERSION_MAJOR_private	const compiler_orxVERSION_MAJOR_private		6828
nim	compiler_orxVERSION_MINOR_private	wrapper.html#compiler_orxVERSION_MINOR_private	const compiler_orxVERSION_MINOR_private		6838
nim	compiler_orxVERSION_RELEASE_private	wrapper.html#compiler_orxVERSION_RELEASE_private	type compiler_orxVERSION_RELEASE_private		6848
nim	compiler_orxVERSION_BUILD_private	wrapper.html#compiler_orxVERSION_BUILD_private	const compiler_orxVERSION_BUILD_private		6862
nim	compiler_orxVERSION_MASK_MAJOR_private	wrapper.html#compiler_orxVERSION_MASK_MAJOR_private	const compiler_orxVERSION_MASK_MAJOR_private		6872
nim	compiler_orxVERSION_SHIFT_MAJOR_private	wrapper.html#compiler_orxVERSION_SHIFT_MAJOR_private	const compiler_orxVERSION_SHIFT_MAJOR_private		6882
nim	compiler_orxVERSION_MASK_MINOR_private	wrapper.html#compiler_orxVERSION_MASK_MINOR_private	const compiler_orxVERSION_MASK_MINOR_private		6892
nim	compiler_orxVERSION_SHIFT_MINOR_private	wrapper.html#compiler_orxVERSION_SHIFT_MINOR_private	const compiler_orxVERSION_SHIFT_MINOR_private		6902
nim	compiler_orxVERSION_MASK_BUILD_private	wrapper.html#compiler_orxVERSION_MASK_BUILD_private	const compiler_orxVERSION_MASK_BUILD_private		6912
nim	compiler_orxVERSION_SHIFT_BUILD_private	wrapper.html#compiler_orxVERSION_SHIFT_BUILD_private	const compiler_orxVERSION_SHIFT_BUILD_private		6922
nim	DEBUG_KU32_STATIC_FLAG_NONE	wrapper.html#DEBUG_KU32_STATIC_FLAG_NONE	const DEBUG_KU32_STATIC_FLAG_NONE		6932
nim	DEBUG_KU32_STATIC_FLAG_TIMESTAMP	wrapper.html#DEBUG_KU32_STATIC_FLAG_TIMESTAMP	const DEBUG_KU32_STATIC_FLAG_TIMESTAMP		6942
nim	DEBUG_KU32_STATIC_FLAG_FULL_TIMESTAMP	wrapper.html#DEBUG_KU32_STATIC_FLAG_FULL_TIMESTAMP	const DEBUG_KU32_STATIC_FLAG_FULL_TIMESTAMP		6952
nim	DEBUG_KU32_STATIC_FLAG_TYPE	wrapper.html#DEBUG_KU32_STATIC_FLAG_TYPE	const DEBUG_KU32_STATIC_FLAG_TYPE		6962
nim	DEBUG_KU32_STATIC_FLAG_TAGGED	wrapper.html#DEBUG_KU32_STATIC_FLAG_TAGGED	const DEBUG_KU32_STATIC_FLAG_TAGGED		6972
nim	DEBUG_KU32_STATIC_FLAG_FILE	wrapper.html#DEBUG_KU32_STATIC_FLAG_FILE	const DEBUG_KU32_STATIC_FLAG_FILE		6982
nim	DEBUG_KU32_STATIC_FLAG_TERMINAL	wrapper.html#DEBUG_KU32_STATIC_FLAG_TERMINAL	const DEBUG_KU32_STATIC_FLAG_TERMINAL		6992
nim	DEBUG_KU32_STATIC_FLAG_CONSOLE	wrapper.html#DEBUG_KU32_STATIC_FLAG_CONSOLE	const DEBUG_KU32_STATIC_FLAG_CONSOLE		7002
nim	DEBUG_KU32_STATIC_FLAG_CALLBACK	wrapper.html#DEBUG_KU32_STATIC_FLAG_CALLBACK	const DEBUG_KU32_STATIC_FLAG_CALLBACK		7012
nim	DEBUG_KU32_STATIC_MASK_DEFAULT	wrapper.html#DEBUG_KU32_STATIC_MASK_DEFAULT	const DEBUG_KU32_STATIC_MASK_DEFAULT		7022
nim	DEBUG_KU32_STATIC_MASK_DEBUG	wrapper.html#DEBUG_KU32_STATIC_MASK_DEBUG	const DEBUG_KU32_STATIC_MASK_DEBUG		7032
nim	DEBUG_KU32_STATIC_MASK_USER_ALL	wrapper.html#DEBUG_KU32_STATIC_MASK_USER_ALL	const DEBUG_KU32_STATIC_MASK_USER_ALL		7042
nim	DEBUG_KZ_DEFAULT_DEBUG_FILE	wrapper.html#DEBUG_KZ_DEFAULT_DEBUG_FILE	const DEBUG_KZ_DEFAULT_DEBUG_FILE		7052
nim	DEBUG_KZ_DEFAULT_LOG_FILE	wrapper.html#DEBUG_KZ_DEFAULT_LOG_FILE	const DEBUG_KZ_DEFAULT_LOG_FILE		7062
nim	DEBUG_KZ_DEFAULT_LOG_SUFFIX	wrapper.html#DEBUG_KZ_DEFAULT_LOG_SUFFIX	const DEBUG_KZ_DEFAULT_LOG_SUFFIX		7072
nim	DEBUG_KZ_DEFAULT_DEBUG_SUFFIX	wrapper.html#DEBUG_KZ_DEFAULT_DEBUG_SUFFIX	const DEBUG_KZ_DEFAULT_DEBUG_SUFFIX		7082
nim	DEBUG_KS32_BUFFER_OUTPUT_SIZE	wrapper.html#DEBUG_KS32_BUFFER_OUTPUT_SIZE	const DEBUG_KS32_BUFFER_OUTPUT_SIZE		7092
nim	hash	wrapper.html#hash,cstring	proc hash(internal_zString: cstring): orxSTRINGID_520095047		7100
nim	CLOCK_KU32_CLOCK_BANK_SIZE	wrapper.html#CLOCK_KU32_CLOCK_BANK_SIZE	const CLOCK_KU32_CLOCK_BANK_SIZE		7108
nim	CLOCK_KU32_TIMER_BANK_SIZE	wrapper.html#CLOCK_KU32_TIMER_BANK_SIZE	const CLOCK_KU32_TIMER_BANK_SIZE		7118
nim	CLOCK_KU32_FUNCTION_BANK_SIZE	wrapper.html#CLOCK_KU32_FUNCTION_BANK_SIZE	const CLOCK_KU32_FUNCTION_BANK_SIZE		7128
nim	CLOCK_KZ_CONFIG_FREQUENCY	wrapper.html#CLOCK_KZ_CONFIG_FREQUENCY	const CLOCK_KZ_CONFIG_FREQUENCY		7138
nim	CLOCK_KZ_CONFIG_MODIFIER_LIST	wrapper.html#CLOCK_KZ_CONFIG_MODIFIER_LIST	const CLOCK_KZ_CONFIG_MODIFIER_LIST		7148
nim	CLOCK_KZ_CORE	wrapper.html#CLOCK_KZ_CORE	const CLOCK_KZ_CORE		7158
nim	STRUCTURE_GUID_MAGIC_TAG_DELETED	wrapper.html#STRUCTURE_GUID_MAGIC_TAG_DELETED	const STRUCTURE_GUID_MAGIC_TAG_DELETED		7168
nim	STRUCTURE_GUID_MASK_STRUCTURE_ID	wrapper.html#STRUCTURE_GUID_MASK_STRUCTURE_ID	const STRUCTURE_GUID_MASK_STRUCTURE_ID		7178
nim	STRUCTURE_GUID_SHIFT_STRUCTURE_ID	wrapper.html#STRUCTURE_GUID_SHIFT_STRUCTURE_ID	const STRUCTURE_GUID_SHIFT_STRUCTURE_ID		7188
nim	STRUCTURE_GUID_MASK_ITEM_ID	wrapper.html#STRUCTURE_GUID_MASK_ITEM_ID	const STRUCTURE_GUID_MASK_ITEM_ID		7198
nim	STRUCTURE_GUID_SHIFT_ITEM_ID	wrapper.html#STRUCTURE_GUID_SHIFT_ITEM_ID	const STRUCTURE_GUID_SHIFT_ITEM_ID		7208
nim	STRUCTURE_GUID_MASK_INSTANCE_ID	wrapper.html#STRUCTURE_GUID_MASK_INSTANCE_ID	const STRUCTURE_GUID_MASK_INSTANCE_ID		7218
nim	STRUCTURE_GUID_SHIFT_INSTANCE_ID	wrapper.html#STRUCTURE_GUID_SHIFT_INSTANCE_ID	const STRUCTURE_GUID_SHIFT_INSTANCE_ID		7228
nim	ANIM_KU32_FLAG_NONE	wrapper.html#ANIM_KU32_FLAG_NONE	const ANIM_KU32_FLAG_NONE		7238
nim	ANIM_KU32_FLAG_2D	wrapper.html#ANIM_KU32_FLAG_2D	const ANIM_KU32_FLAG_2D		7248
nim	ANIM_KU32_MASK_USER_ALL	wrapper.html#ANIM_KU32_MASK_USER_ALL	const ANIM_KU32_MASK_USER_ALL		7258
nim	ANIM_KU32_MASK_ALL	wrapper.html#ANIM_KU32_MASK_ALL	const ANIM_KU32_MASK_ALL		7268
nim	ANIM_KU32_KEY_MAX_NUMBER	wrapper.html#ANIM_KU32_KEY_MAX_NUMBER	const ANIM_KU32_KEY_MAX_NUMBER		7278
nim	ANIM_KU32_EVENT_MAX_NUMBER	wrapper.html#ANIM_KU32_EVENT_MAX_NUMBER	const ANIM_KU32_EVENT_MAX_NUMBER		7288
nim	ANIMSET_KU32_FLAG_NONE	wrapper.html#ANIMSET_KU32_FLAG_NONE	const ANIMSET_KU32_FLAG_NONE		7298
nim	ANIMSET_KU32_FLAG_REFERENCE_LOCK	wrapper.html#ANIMSET_KU32_FLAG_REFERENCE_LOCK	const ANIMSET_KU32_FLAG_REFERENCE_LOCK		7308
nim	ANIMSET_KU32_FLAG_LINK_STATIC	wrapper.html#ANIMSET_KU32_FLAG_LINK_STATIC	const ANIMSET_KU32_FLAG_LINK_STATIC		7318
nim	ANIMSET_KU32_LINK_FLAG_NONE	wrapper.html#ANIMSET_KU32_LINK_FLAG_NONE	const ANIMSET_KU32_LINK_FLAG_NONE		7328
nim	ANIMSET_KU32_LINK_FLAG_LOOP_COUNT	wrapper.html#ANIMSET_KU32_LINK_FLAG_LOOP_COUNT	const ANIMSET_KU32_LINK_FLAG_LOOP_COUNT		7338
nim	ANIMSET_KU32_LINK_FLAG_PRIORITY	wrapper.html#ANIMSET_KU32_LINK_FLAG_PRIORITY	const ANIMSET_KU32_LINK_FLAG_PRIORITY		7348
nim	ANIMSET_KU32_LINK_FLAG_IMMEDIATE_CUT	wrapper.html#ANIMSET_KU32_LINK_FLAG_IMMEDIATE_CUT	const ANIMSET_KU32_LINK_FLAG_IMMEDIATE_CUT		7358
nim	ANIMSET_KU32_LINK_FLAG_CLEAR_TARGET	wrapper.html#ANIMSET_KU32_LINK_FLAG_CLEAR_TARGET	const ANIMSET_KU32_LINK_FLAG_CLEAR_TARGET		7368
nim	ANIMSET_KU32_MAX_ANIM_NUMBER	wrapper.html#ANIMSET_KU32_MAX_ANIM_NUMBER	const ANIMSET_KU32_MAX_ANIM_NUMBER		7378
nim	CONFIG_KZ_RESOURCE_GROUP	wrapper.html#CONFIG_KZ_RESOURCE_GROUP	const CONFIG_KZ_RESOURCE_GROUP		7388
nim	PLUGIN_KU32_FLAG_CORE_ID	wrapper.html#PLUGIN_KU32_FLAG_CORE_ID	const PLUGIN_KU32_FLAG_CORE_ID		7398
nim	PLUGIN_KU32_MASK_PLUGIN_ID	wrapper.html#PLUGIN_KU32_MASK_PLUGIN_ID	const PLUGIN_KU32_MASK_PLUGIN_ID		7408
nim	PLUGIN_KU32_SHIFT_PLUGIN_ID	wrapper.html#PLUGIN_KU32_SHIFT_PLUGIN_ID	const PLUGIN_KU32_SHIFT_PLUGIN_ID		7418
nim	PLUGIN_KU32_MASK_FUNCTION_ID	wrapper.html#PLUGIN_KU32_MASK_FUNCTION_ID	const PLUGIN_KU32_MASK_FUNCTION_ID		7428
nim	PLUGIN_KU32_FUNCTION_ARG_SIZE	wrapper.html#PLUGIN_KU32_FUNCTION_ARG_SIZE	const PLUGIN_KU32_FUNCTION_ARG_SIZE		7438
nim	BANK_KU32_FLAG_NONE	wrapper.html#BANK_KU32_FLAG_NONE	const BANK_KU32_FLAG_NONE		7448
nim	BANK_KU32_FLAG_NOT_EXPANDABLE	wrapper.html#BANK_KU32_FLAG_NOT_EXPANDABLE	const BANK_KU32_FLAG_NOT_EXPANDABLE		7458
nim	HASHTABLE_KU32_FLAG_NONE	wrapper.html#HASHTABLE_KU32_FLAG_NONE	const HASHTABLE_KU32_FLAG_NONE		7468
nim	HASHTABLE_KU32_FLAG_NOT_EXPANDABLE	wrapper.html#HASHTABLE_KU32_FLAG_NOT_EXPANDABLE	const HASHTABLE_KU32_FLAG_NOT_EXPANDABLE		7478
nim	DISPLAY_KZ_CONFIG_SECTION	wrapper.html#DISPLAY_KZ_CONFIG_SECTION	const DISPLAY_KZ_CONFIG_SECTION		7488
nim	DISPLAY_KZ_CONFIG_WIDTH	wrapper.html#DISPLAY_KZ_CONFIG_WIDTH	const DISPLAY_KZ_CONFIG_WIDTH		7498
nim	DISPLAY_KZ_CONFIG_HEIGHT	wrapper.html#DISPLAY_KZ_CONFIG_HEIGHT	const DISPLAY_KZ_CONFIG_HEIGHT		7508
nim	DISPLAY_KZ_CONFIG_DEPTH	wrapper.html#DISPLAY_KZ_CONFIG_DEPTH	const DISPLAY_KZ_CONFIG_DEPTH		7518
nim	DISPLAY_KZ_CONFIG_POSITION	wrapper.html#DISPLAY_KZ_CONFIG_POSITION	const DISPLAY_KZ_CONFIG_POSITION		7528
nim	DISPLAY_KZ_CONFIG_REFRESH_RATE	wrapper.html#DISPLAY_KZ_CONFIG_REFRESH_RATE	const DISPLAY_KZ_CONFIG_REFRESH_RATE		7538
nim	DISPLAY_KZ_CONFIG_FULLSCREEN	wrapper.html#DISPLAY_KZ_CONFIG_FULLSCREEN	const DISPLAY_KZ_CONFIG_FULLSCREEN		7548
nim	DISPLAY_KZ_CONFIG_ALLOW_RESIZE	wrapper.html#DISPLAY_KZ_CONFIG_ALLOW_RESIZE	const DISPLAY_KZ_CONFIG_ALLOW_RESIZE		7558
nim	DISPLAY_KZ_CONFIG_DECORATION	wrapper.html#DISPLAY_KZ_CONFIG_DECORATION	const DISPLAY_KZ_CONFIG_DECORATION		7568
nim	DISPLAY_KZ_CONFIG_TITLE	wrapper.html#DISPLAY_KZ_CONFIG_TITLE	const DISPLAY_KZ_CONFIG_TITLE		7578
nim	DISPLAY_KZ_CONFIG_SMOOTH	wrapper.html#DISPLAY_KZ_CONFIG_SMOOTH	const DISPLAY_KZ_CONFIG_SMOOTH		7588
nim	DISPLAY_KZ_CONFIG_VSYNC	wrapper.html#DISPLAY_KZ_CONFIG_VSYNC	const DISPLAY_KZ_CONFIG_VSYNC		7598
nim	DISPLAY_KZ_CONFIG_DEPTHBUFFER	wrapper.html#DISPLAY_KZ_CONFIG_DEPTHBUFFER	const DISPLAY_KZ_CONFIG_DEPTHBUFFER		7608
nim	DISPLAY_KZ_CONFIG_SHADER_VERSION	wrapper.html#DISPLAY_KZ_CONFIG_SHADER_VERSION	const DISPLAY_KZ_CONFIG_SHADER_VERSION		7618
nim	DISPLAY_KZ_CONFIG_SHADER_EXTENSION_LIST	wrapper.html#DISPLAY_KZ_CONFIG_SHADER_EXTENSION_LIST	const DISPLAY_KZ_CONFIG_SHADER_EXTENSION_LIST		7628
nim	DISPLAY_KZ_CONFIG_MONITOR	wrapper.html#DISPLAY_KZ_CONFIG_MONITOR	const DISPLAY_KZ_CONFIG_MONITOR		7638
nim	DISPLAY_KZ_CONFIG_CURSOR	wrapper.html#DISPLAY_KZ_CONFIG_CURSOR	const DISPLAY_KZ_CONFIG_CURSOR		7648
nim	DISPLAY_KZ_CONFIG_ICON_LIST	wrapper.html#DISPLAY_KZ_CONFIG_ICON_LIST	const DISPLAY_KZ_CONFIG_ICON_LIST		7658
nim	DISPLAY_KZ_CONFIG_FRAMEBUFFER_SIZE	wrapper.html#DISPLAY_KZ_CONFIG_FRAMEBUFFER_SIZE	const DISPLAY_KZ_CONFIG_FRAMEBUFFER_SIZE		7668
nim	DISPLAY_KZ_CONFIG_CONTENT_SCALE	wrapper.html#DISPLAY_KZ_CONFIG_CONTENT_SCALE	const DISPLAY_KZ_CONFIG_CONTENT_SCALE		7678
nim	DISPLAY_KZ_CONFIG_TEXTURE_UNIT_NUMBER	wrapper.html#DISPLAY_KZ_CONFIG_TEXTURE_UNIT_NUMBER	const DISPLAY_KZ_CONFIG_TEXTURE_UNIT_NUMBER		7688
nim	DISPLAY_KZ_CONFIG_DRAW_BUFFER_NUMBER	wrapper.html#DISPLAY_KZ_CONFIG_DRAW_BUFFER_NUMBER	const DISPLAY_KZ_CONFIG_DRAW_BUFFER_NUMBER		7698
nim	DISPLAY_KZ_CONFIG_MAX_TEXTURE_SIZE	wrapper.html#DISPLAY_KZ_CONFIG_MAX_TEXTURE_SIZE	const DISPLAY_KZ_CONFIG_MAX_TEXTURE_SIZE		7708
nim	DISPLAY_KZ_CONFIG_DEBUG_OUTPUT	wrapper.html#DISPLAY_KZ_CONFIG_DEBUG_OUTPUT	const DISPLAY_KZ_CONFIG_DEBUG_OUTPUT		7718
nim	COLOR_KZ_CONFIG_SECTION	wrapper.html#COLOR_KZ_CONFIG_SECTION	const COLOR_KZ_CONFIG_SECTION		7728
nim	DISPLAY_KZ_SHADER_SUFFIX_TOP	wrapper.html#DISPLAY_KZ_SHADER_SUFFIX_TOP	const DISPLAY_KZ_SHADER_SUFFIX_TOP		7738
nim	DISPLAY_KZ_SHADER_SUFFIX_LEFT	wrapper.html#DISPLAY_KZ_SHADER_SUFFIX_LEFT	const DISPLAY_KZ_SHADER_SUFFIX_LEFT		7748
nim	DISPLAY_KZ_SHADER_SUFFIX_BOTTOM	wrapper.html#DISPLAY_KZ_SHADER_SUFFIX_BOTTOM	const DISPLAY_KZ_SHADER_SUFFIX_BOTTOM		7758
nim	DISPLAY_KZ_SHADER_SUFFIX_RIGHT	wrapper.html#DISPLAY_KZ_SHADER_SUFFIX_RIGHT	const DISPLAY_KZ_SHADER_SUFFIX_RIGHT		7768
nim	TEXTURE_KZ_RESOURCE_GROUP	wrapper.html#TEXTURE_KZ_RESOURCE_GROUP	const TEXTURE_KZ_RESOURCE_GROUP		7778
nim	TEXTURE_KZ_LOCALE_GROUP	wrapper.html#TEXTURE_KZ_LOCALE_GROUP	const TEXTURE_KZ_LOCALE_GROUP		7788
nim	TEXTURE_KZ_SCREEN	wrapper.html#TEXTURE_KZ_SCREEN	const TEXTURE_KZ_SCREEN		7798
nim	TEXTURE_KZ_PIXEL	wrapper.html#TEXTURE_KZ_PIXEL	const TEXTURE_KZ_PIXEL		7808
nim	TEXTURE_KZ_TRANSPARENT	wrapper.html#TEXTURE_KZ_TRANSPARENT	const TEXTURE_KZ_TRANSPARENT		7818
nim	TEXTURE_KZ_LOGO_NAME	wrapper.html#TEXTURE_KZ_LOGO_NAME	const TEXTURE_KZ_LOGO_NAME		7828
nim	FONT_KZ_DEFAULT_FONT_NAME	wrapper.html#FONT_KZ_DEFAULT_FONT_NAME	const FONT_KZ_DEFAULT_FONT_NAME		7838
nim	JOYSTICK_KU32_MIN_ID	wrapper.html#JOYSTICK_KU32_MIN_ID	const JOYSTICK_KU32_MIN_ID		7848
nim	MOUSE_KZ_CONFIG_SECTION	wrapper.html#MOUSE_KZ_CONFIG_SECTION	const MOUSE_KZ_CONFIG_SECTION		7858
nim	MOUSE_KZ_CONFIG_SHOW_CURSOR	wrapper.html#MOUSE_KZ_CONFIG_SHOW_CURSOR	const MOUSE_KZ_CONFIG_SHOW_CURSOR		7868
nim	MOUSE_KZ_CONFIG_GRAB	wrapper.html#MOUSE_KZ_CONFIG_GRAB	const MOUSE_KZ_CONFIG_GRAB		7878
nim	INPUT_KZ_CONFIG_SECTION	wrapper.html#INPUT_KZ_CONFIG_SECTION	const INPUT_KZ_CONFIG_SECTION		7888
nim	INPUT_KZ_CONFIG_DEFAULT_THRESHOLD	wrapper.html#INPUT_KZ_CONFIG_DEFAULT_THRESHOLD	const INPUT_KZ_CONFIG_DEFAULT_THRESHOLD		7898
nim	INPUT_KZ_CONFIG_DEFAULT_MULTIPLIER	wrapper.html#INPUT_KZ_CONFIG_DEFAULT_MULTIPLIER	const INPUT_KZ_CONFIG_DEFAULT_MULTIPLIER		7908
nim	INPUT_KZ_CONFIG_COMBINE_LIST	wrapper.html#INPUT_KZ_CONFIG_COMBINE_LIST	const INPUT_KZ_CONFIG_COMBINE_LIST		7918
nim	INPUT_KZ_CONFIG_JOYSTICK_ID_LIST	wrapper.html#INPUT_KZ_CONFIG_JOYSTICK_ID_LIST	const INPUT_KZ_CONFIG_JOYSTICK_ID_LIST		7928
nim	INPUT_KU32_BINDING_NUMBER	wrapper.html#INPUT_KU32_BINDING_NUMBER	const INPUT_KU32_BINDING_NUMBER		7938
nim	INPUT_KZ_INTERNAL_SET_PREFIX	wrapper.html#INPUT_KZ_INTERNAL_SET_PREFIX	const INPUT_KZ_INTERNAL_SET_PREFIX		7948
nim	INPUT_KU32_FLAG_TYPE_NONE	wrapper.html#INPUT_KU32_FLAG_TYPE_NONE	const INPUT_KU32_FLAG_TYPE_NONE		7958
nim	INPUT_KU32_MASK_TYPE_ALL	wrapper.html#INPUT_KU32_MASK_TYPE_ALL	const INPUT_KU32_MASK_TYPE_ALL		7968
nim	CONSOLE_KZ_INPUT_SET	wrapper.html#CONSOLE_KZ_INPUT_SET	const CONSOLE_KZ_INPUT_SET		7978
nim	CONSOLE_KZ_INPUT_TOGGLE	wrapper.html#CONSOLE_KZ_INPUT_TOGGLE	const CONSOLE_KZ_INPUT_TOGGLE		7988
nim	CONSOLE_KZ_INPUT_AUTOCOMPLETE	wrapper.html#CONSOLE_KZ_INPUT_AUTOCOMPLETE	const CONSOLE_KZ_INPUT_AUTOCOMPLETE		7998
nim	CONSOLE_KZ_INPUT_DELETE	wrapper.html#CONSOLE_KZ_INPUT_DELETE	const CONSOLE_KZ_INPUT_DELETE		8008
nim	CONSOLE_KZ_INPUT_DELETE_AFTER	wrapper.html#CONSOLE_KZ_INPUT_DELETE_AFTER	const CONSOLE_KZ_INPUT_DELETE_AFTER		8018
nim	CONSOLE_KZ_INPUT_TOGGLE_MODE	wrapper.html#CONSOLE_KZ_INPUT_TOGGLE_MODE	const CONSOLE_KZ_INPUT_TOGGLE_MODE		8028
nim	CONSOLE_KZ_INPUT_ENTER	wrapper.html#CONSOLE_KZ_INPUT_ENTER	const CONSOLE_KZ_INPUT_ENTER		8038
nim	CONSOLE_KZ_INPUT_PREVIOUS	wrapper.html#CONSOLE_KZ_INPUT_PREVIOUS	const CONSOLE_KZ_INPUT_PREVIOUS		8048
nim	CONSOLE_KZ_INPUT_NEXT	wrapper.html#CONSOLE_KZ_INPUT_NEXT	const CONSOLE_KZ_INPUT_NEXT		8058
nim	CONSOLE_KZ_INPUT_LEFT	wrapper.html#CONSOLE_KZ_INPUT_LEFT	const CONSOLE_KZ_INPUT_LEFT		8068
nim	CONSOLE_KZ_INPUT_RIGHT	wrapper.html#CONSOLE_KZ_INPUT_RIGHT	const CONSOLE_KZ_INPUT_RIGHT		8078
nim	CONSOLE_KZ_INPUT_START	wrapper.html#CONSOLE_KZ_INPUT_START	const CONSOLE_KZ_INPUT_START		8088
nim	CONSOLE_KZ_INPUT_END	wrapper.html#CONSOLE_KZ_INPUT_END	const CONSOLE_KZ_INPUT_END		8098
nim	CONSOLE_KZ_INPUT_PASTE	wrapper.html#CONSOLE_KZ_INPUT_PASTE	const CONSOLE_KZ_INPUT_PASTE		8108
nim	CONSOLE_KZ_INPUT_SCROLL_DOWN	wrapper.html#CONSOLE_KZ_INPUT_SCROLL_DOWN	const CONSOLE_KZ_INPUT_SCROLL_DOWN		8118
nim	CONSOLE_KZ_INPUT_SCROLL_UP	wrapper.html#CONSOLE_KZ_INPUT_SCROLL_UP	const CONSOLE_KZ_INPUT_SCROLL_UP		8128
nim	CONSOLE_KZ_CONFIG_HISTORY_FILE_EXTENSION	wrapper.html#CONSOLE_KZ_CONFIG_HISTORY_FILE_EXTENSION	const CONSOLE_KZ_CONFIG_HISTORY_FILE_EXTENSION		8138
nim	EVENT_KU32_FLAG_ID_NONE	wrapper.html#EVENT_KU32_FLAG_ID_NONE	const EVENT_KU32_FLAG_ID_NONE		8148
nim	EVENT_KU32_MASK_ID_ALL	wrapper.html#EVENT_KU32_MASK_ID_ALL	const EVENT_KU32_MASK_ID_ALL		8158
nim	RESOURCE_KZ_DEFAULT_STORAGE	wrapper.html#RESOURCE_KZ_DEFAULT_STORAGE	const RESOURCE_KZ_DEFAULT_STORAGE		8168
nim	RESOURCE_KZ_TYPE_TAG_FILE	wrapper.html#RESOURCE_KZ_TYPE_TAG_FILE	const RESOURCE_KZ_TYPE_TAG_FILE		8178
nim	RESOURCE_KZ_TYPE_TAG_MEMORY	wrapper.html#RESOURCE_KZ_TYPE_TAG_MEMORY	const RESOURCE_KZ_TYPE_TAG_MEMORY		8188
nim	THREAD_KU32_MAIN_THREAD_ID	wrapper.html#THREAD_KU32_MAIN_THREAD_ID	const THREAD_KU32_MAIN_THREAD_ID		8198
nim	THREAD_KU32_MAX_THREAD_NUMBER	wrapper.html#THREAD_KU32_MAX_THREAD_NUMBER	const THREAD_KU32_MAX_THREAD_NUMBER		8208
nim	THREAD_KU32_FLAG_NONE	wrapper.html#THREAD_KU32_FLAG_NONE	const THREAD_KU32_FLAG_NONE		8218
nim	FPS_KZ_CLOCK_NAME	wrapper.html#FPS_KZ_CLOCK_NAME	const FPS_KZ_CLOCK_NAME		8228
nim	PROFILER_KU32_HISTORY_LENGTH	wrapper.html#PROFILER_KU32_HISTORY_LENGTH	const PROFILER_KU32_HISTORY_LENGTH		8238
nim	PROFILER_KS32_MARKER_ID_NONE	wrapper.html#PROFILER_KS32_MARKER_ID_NONE	const PROFILER_KS32_MARKER_ID_NONE		8248
nim	GRAPHIC_KU32_FLAG_NONE	wrapper.html#GRAPHIC_KU32_FLAG_NONE	const GRAPHIC_KU32_FLAG_NONE		8258
nim	GRAPHIC_KU32_FLAG_2D	wrapper.html#GRAPHIC_KU32_FLAG_2D	const GRAPHIC_KU32_FLAG_2D		8268
nim	GRAPHIC_KU32_FLAG_TEXT	wrapper.html#GRAPHIC_KU32_FLAG_TEXT	const GRAPHIC_KU32_FLAG_TEXT		8278
nim	GRAPHIC_KU32_MASK_TYPE	wrapper.html#GRAPHIC_KU32_MASK_TYPE	const GRAPHIC_KU32_MASK_TYPE		8288
nim	GRAPHIC_KU32_FLAG_FLIP_X	wrapper.html#GRAPHIC_KU32_FLAG_FLIP_X	const GRAPHIC_KU32_FLAG_FLIP_X		8298
nim	GRAPHIC_KU32_FLAG_FLIP_Y	wrapper.html#GRAPHIC_KU32_FLAG_FLIP_Y	const GRAPHIC_KU32_FLAG_FLIP_Y		8308
nim	GRAPHIC_KU32_MASK_FLIP_BOTH	wrapper.html#GRAPHIC_KU32_MASK_FLIP_BOTH	const GRAPHIC_KU32_MASK_FLIP_BOTH		8318
nim	GRAPHIC_KU32_FLAG_ALIGN_CENTER	wrapper.html#GRAPHIC_KU32_FLAG_ALIGN_CENTER	const GRAPHIC_KU32_FLAG_ALIGN_CENTER		8328
nim	GRAPHIC_KU32_FLAG_ALIGN_LEFT	wrapper.html#GRAPHIC_KU32_FLAG_ALIGN_LEFT	const GRAPHIC_KU32_FLAG_ALIGN_LEFT		8338
nim	GRAPHIC_KU32_FLAG_ALIGN_RIGHT	wrapper.html#GRAPHIC_KU32_FLAG_ALIGN_RIGHT	const GRAPHIC_KU32_FLAG_ALIGN_RIGHT		8348
nim	GRAPHIC_KU32_FLAG_ALIGN_TOP	wrapper.html#GRAPHIC_KU32_FLAG_ALIGN_TOP	const GRAPHIC_KU32_FLAG_ALIGN_TOP		8358
nim	GRAPHIC_KU32_FLAG_ALIGN_BOTTOM	wrapper.html#GRAPHIC_KU32_FLAG_ALIGN_BOTTOM	const GRAPHIC_KU32_FLAG_ALIGN_BOTTOM		8368
nim	GRAPHIC_KU32_FLAG_ALIGN_TRUNCATE	wrapper.html#GRAPHIC_KU32_FLAG_ALIGN_TRUNCATE	const GRAPHIC_KU32_FLAG_ALIGN_TRUNCATE		8378
nim	GRAPHIC_KU32_FLAG_ALIGN_ROUND	wrapper.html#GRAPHIC_KU32_FLAG_ALIGN_ROUND	const GRAPHIC_KU32_FLAG_ALIGN_ROUND		8388
nim	GRAPHIC_KU32_MASK_ALIGN	wrapper.html#GRAPHIC_KU32_MASK_ALIGN	const GRAPHIC_KU32_MASK_ALIGN		8398
nim	GRAPHIC_KU32_MASK_USER_ALL	wrapper.html#GRAPHIC_KU32_MASK_USER_ALL	const GRAPHIC_KU32_MASK_USER_ALL		8408
nim	GRAPHIC_KZ_CONFIG_TEXTURE_NAME	wrapper.html#GRAPHIC_KZ_CONFIG_TEXTURE_NAME	const GRAPHIC_KZ_CONFIG_TEXTURE_NAME		8418
nim	GRAPHIC_KZ_CONFIG_TEXTURE_ORIGIN	wrapper.html#GRAPHIC_KZ_CONFIG_TEXTURE_ORIGIN	const GRAPHIC_KZ_CONFIG_TEXTURE_ORIGIN		8428
nim	GRAPHIC_KZ_CONFIG_TEXTURE_SIZE	wrapper.html#GRAPHIC_KZ_CONFIG_TEXTURE_SIZE	const GRAPHIC_KZ_CONFIG_TEXTURE_SIZE		8438
nim	GRAPHIC_KZ_CONFIG_TEXT_NAME	wrapper.html#GRAPHIC_KZ_CONFIG_TEXT_NAME	const GRAPHIC_KZ_CONFIG_TEXT_NAME		8448
nim	GRAPHIC_KZ_CONFIG_PIVOT	wrapper.html#GRAPHIC_KZ_CONFIG_PIVOT	const GRAPHIC_KZ_CONFIG_PIVOT		8458
nim	GRAPHIC_KZ_CONFIG_COLOR	wrapper.html#GRAPHIC_KZ_CONFIG_COLOR	const GRAPHIC_KZ_CONFIG_COLOR		8468
nim	GRAPHIC_KZ_CONFIG_ALPHA	wrapper.html#GRAPHIC_KZ_CONFIG_ALPHA	const GRAPHIC_KZ_CONFIG_ALPHA		8478
nim	GRAPHIC_KZ_CONFIG_RGB	wrapper.html#GRAPHIC_KZ_CONFIG_RGB	const GRAPHIC_KZ_CONFIG_RGB		8488
nim	GRAPHIC_KZ_CONFIG_HSL	wrapper.html#GRAPHIC_KZ_CONFIG_HSL	const GRAPHIC_KZ_CONFIG_HSL		8498
nim	GRAPHIC_KZ_CONFIG_HSV	wrapper.html#GRAPHIC_KZ_CONFIG_HSV	const GRAPHIC_KZ_CONFIG_HSV		8508
nim	GRAPHIC_KZ_CONFIG_FLIP	wrapper.html#GRAPHIC_KZ_CONFIG_FLIP	const GRAPHIC_KZ_CONFIG_FLIP		8518
nim	GRAPHIC_KZ_CONFIG_REPEAT	wrapper.html#GRAPHIC_KZ_CONFIG_REPEAT	const GRAPHIC_KZ_CONFIG_REPEAT		8528
nim	GRAPHIC_KZ_CONFIG_SMOOTHING	wrapper.html#GRAPHIC_KZ_CONFIG_SMOOTHING	const GRAPHIC_KZ_CONFIG_SMOOTHING		8538
nim	GRAPHIC_KZ_CONFIG_BLEND_MODE	wrapper.html#GRAPHIC_KZ_CONFIG_BLEND_MODE	const GRAPHIC_KZ_CONFIG_BLEND_MODE		8548
nim	GRAPHIC_KZ_CONFIG_STASIS	wrapper.html#GRAPHIC_KZ_CONFIG_STASIS	const GRAPHIC_KZ_CONFIG_STASIS		8558
nim	GRAPHIC_KZ_CONFIG_KEEP_IN_CACHE	wrapper.html#GRAPHIC_KZ_CONFIG_KEEP_IN_CACHE	const GRAPHIC_KZ_CONFIG_KEEP_IN_CACHE		8568
nim	SCREENSHOT_KZ_DEFAULT_DIRECTORY_NAME	wrapper.html#SCREENSHOT_KZ_DEFAULT_DIRECTORY_NAME	const SCREENSHOT_KZ_DEFAULT_DIRECTORY_NAME		8578
nim	SCREENSHOT_KZ_DEFAULT_BASE_NAME	wrapper.html#SCREENSHOT_KZ_DEFAULT_BASE_NAME	const SCREENSHOT_KZ_DEFAULT_BASE_NAME		8588
nim	SCREENSHOT_KZ_DEFAULT_EXTENSION	wrapper.html#SCREENSHOT_KZ_DEFAULT_EXTENSION	const SCREENSHOT_KZ_DEFAULT_EXTENSION		8598
nim	SCREENSHOT_KU32_DEFAULT_DIGITS	wrapper.html#SCREENSHOT_KU32_DEFAULT_DIGITS	const SCREENSHOT_KU32_DEFAULT_DIGITS		8608
nim	TEXT_KZ_LOCALE_GROUP	wrapper.html#TEXT_KZ_LOCALE_GROUP	const TEXT_KZ_LOCALE_GROUP		8618
nim	FILE_KU32_FLAG_INFO_NORMAL	wrapper.html#FILE_KU32_FLAG_INFO_NORMAL	const FILE_KU32_FLAG_INFO_NORMAL		8628
nim	FILE_KU32_FLAG_INFO_READONLY	wrapper.html#FILE_KU32_FLAG_INFO_READONLY	const FILE_KU32_FLAG_INFO_READONLY		8638
nim	FILE_KU32_FLAG_INFO_HIDDEN	wrapper.html#FILE_KU32_FLAG_INFO_HIDDEN	const FILE_KU32_FLAG_INFO_HIDDEN		8648
nim	FILE_KU32_FLAG_INFO_DIRECTORY	wrapper.html#FILE_KU32_FLAG_INFO_DIRECTORY	const FILE_KU32_FLAG_INFO_DIRECTORY		8658
nim	FILE_KU32_FLAG_OPEN_READ	wrapper.html#FILE_KU32_FLAG_OPEN_READ	const FILE_KU32_FLAG_OPEN_READ		8668
nim	FILE_KU32_FLAG_OPEN_WRITE	wrapper.html#FILE_KU32_FLAG_OPEN_WRITE	const FILE_KU32_FLAG_OPEN_WRITE		8678
nim	FILE_KU32_FLAG_OPEN_APPEND	wrapper.html#FILE_KU32_FLAG_OPEN_APPEND	const FILE_KU32_FLAG_OPEN_APPEND		8688
nim	FILE_KU32_FLAG_OPEN_BINARY	wrapper.html#FILE_KU32_FLAG_OPEN_BINARY	const FILE_KU32_FLAG_OPEN_BINARY		8698
nim	PARAM_KU32_FLAG_NONE	wrapper.html#PARAM_KU32_FLAG_NONE	const PARAM_KU32_FLAG_NONE		8708
nim	PARAM_KU32_FLAG_MULTIPLE_ALLOWED	wrapper.html#PARAM_KU32_FLAG_MULTIPLE_ALLOWED	const PARAM_KU32_FLAG_MULTIPLE_ALLOWED		8718
nim	PARAM_KU32_FLAG_STOP_ON_ERROR	wrapper.html#PARAM_KU32_FLAG_STOP_ON_ERROR	const PARAM_KU32_FLAG_STOP_ON_ERROR		8728
nim	SOUNDSYSTEM_KZ_CONFIG_SECTION	wrapper.html#SOUNDSYSTEM_KZ_CONFIG_SECTION	const SOUNDSYSTEM_KZ_CONFIG_SECTION		8738
nim	SOUNDSYSTEM_KZ_CONFIG_RATIO	wrapper.html#SOUNDSYSTEM_KZ_CONFIG_RATIO	const SOUNDSYSTEM_KZ_CONFIG_RATIO		8748
nim	SOUNDSYSTEM_KZ_CONFIG_MUTE_IN_BACKGROUND	wrapper.html#SOUNDSYSTEM_KZ_CONFIG_MUTE_IN_BACKGROUND	const SOUNDSYSTEM_KZ_CONFIG_MUTE_IN_BACKGROUND		8758
nim	SOUNDSYSTEM_KZ_CONFIG_LISTENERS	wrapper.html#SOUNDSYSTEM_KZ_CONFIG_LISTENERS	const SOUNDSYSTEM_KZ_CONFIG_LISTENERS		8768
nim	SOUND_KZ_RESOURCE_GROUP	wrapper.html#SOUND_KZ_RESOURCE_GROUP	const SOUND_KZ_RESOURCE_GROUP		8778
nim	SOUND_KZ_LOCALE_GROUP	wrapper.html#SOUND_KZ_LOCALE_GROUP	const SOUND_KZ_LOCALE_GROUP		8788
nim	SOUND_KZ_MASTER_BUS	wrapper.html#SOUND_KZ_MASTER_BUS	const SOUND_KZ_MASTER_BUS		8798
nim	OBJECT_KZ_DEFAULT_GROUP	wrapper.html#OBJECT_KZ_DEFAULT_GROUP	const OBJECT_KZ_DEFAULT_GROUP		8808
nim	FX_SLOT_KU32_FLAG_ABSOLUTE	wrapper.html#FX_SLOT_KU32_FLAG_ABSOLUTE	const FX_SLOT_KU32_FLAG_ABSOLUTE		8818
nim	FX_SLOT_KU32_FLAG_STAGGER	wrapper.html#FX_SLOT_KU32_FLAG_STAGGER	const FX_SLOT_KU32_FLAG_STAGGER		8828
nim	FX_SLOT_KU32_FLAG_USE_ROTATION	wrapper.html#FX_SLOT_KU32_FLAG_USE_ROTATION	const FX_SLOT_KU32_FLAG_USE_ROTATION		8838
nim	FX_SLOT_KU32_FLAG_USE_SCALE	wrapper.html#FX_SLOT_KU32_FLAG_USE_SCALE	const FX_SLOT_KU32_FLAG_USE_SCALE		8848
nim	FXPOINTER_KU32_FX_NUMBER	wrapper.html#FXPOINTER_KU32_FX_NUMBER	const FXPOINTER_KU32_FX_NUMBER		8858
nim	FRAME_KU32_FLAG_NONE	wrapper.html#FRAME_KU32_FLAG_NONE	const FRAME_KU32_FLAG_NONE		8868
nim	FRAME_KU32_FLAG_SCROLL_X	wrapper.html#FRAME_KU32_FLAG_SCROLL_X	const FRAME_KU32_FLAG_SCROLL_X		8878
nim	FRAME_KU32_FLAG_SCROLL_Y	wrapper.html#FRAME_KU32_FLAG_SCROLL_Y	const FRAME_KU32_FLAG_SCROLL_Y		8888
nim	FRAME_KU32_MASK_SCROLL_BOTH	wrapper.html#FRAME_KU32_MASK_SCROLL_BOTH	const FRAME_KU32_MASK_SCROLL_BOTH		8898
nim	FRAME_KU32_FLAG_DEPTH_SCALE	wrapper.html#FRAME_KU32_FLAG_DEPTH_SCALE	const FRAME_KU32_FLAG_DEPTH_SCALE		8908
nim	FRAME_KU32_FLAG_FLIP_X	wrapper.html#FRAME_KU32_FLAG_FLIP_X	const FRAME_KU32_FLAG_FLIP_X		8918
nim	FRAME_KU32_FLAG_FLIP_Y	wrapper.html#FRAME_KU32_FLAG_FLIP_Y	const FRAME_KU32_FLAG_FLIP_Y		8928
nim	FRAME_KU32_MASK_FLIP_BOTH	wrapper.html#FRAME_KU32_MASK_FLIP_BOTH	const FRAME_KU32_MASK_FLIP_BOTH		8938
nim	FRAME_KU32_FLAG_IGNORE_NONE	wrapper.html#FRAME_KU32_FLAG_IGNORE_NONE	const FRAME_KU32_FLAG_IGNORE_NONE		8948
nim	FRAME_KU32_FLAG_IGNORE_ROTATION	wrapper.html#FRAME_KU32_FLAG_IGNORE_ROTATION	const FRAME_KU32_FLAG_IGNORE_ROTATION		8958
nim	FRAME_KU32_FLAG_IGNORE_SCALE_X	wrapper.html#FRAME_KU32_FLAG_IGNORE_SCALE_X	const FRAME_KU32_FLAG_IGNORE_SCALE_X		8968
nim	FRAME_KU32_FLAG_IGNORE_SCALE_Y	wrapper.html#FRAME_KU32_FLAG_IGNORE_SCALE_Y	const FRAME_KU32_FLAG_IGNORE_SCALE_Y		8978
nim	FRAME_KU32_FLAG_IGNORE_SCALE_Z	wrapper.html#FRAME_KU32_FLAG_IGNORE_SCALE_Z	const FRAME_KU32_FLAG_IGNORE_SCALE_Z		8988
nim	FRAME_KU32_MASK_IGNORE_SCALE	wrapper.html#FRAME_KU32_MASK_IGNORE_SCALE	const FRAME_KU32_MASK_IGNORE_SCALE		8998
nim	FRAME_KU32_FLAG_IGNORE_POSITION_ROTATION	wrapper.html#FRAME_KU32_FLAG_IGNORE_POSITION_ROTATION	const FRAME_KU32_FLAG_IGNORE_POSITION_ROTATION		9008
nim	FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_X	wrapper.html#FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_X	const FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_X		9018
nim	FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_Y	wrapper.html#FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_Y	const FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_Y		9028
nim	FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_Z	wrapper.html#FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_Z	const FRAME_KU32_FLAG_IGNORE_POSITION_SCALE_Z		9038
nim	FRAME_KU32_MASK_IGNORE_POSITION_SCALE	wrapper.html#FRAME_KU32_MASK_IGNORE_POSITION_SCALE	const FRAME_KU32_MASK_IGNORE_POSITION_SCALE		9048
nim	FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_X	wrapper.html#FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_X	const FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_X		9058
nim	FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_Y	wrapper.html#FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_Y	const FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_Y		9068
nim	FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_Z	wrapper.html#FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_Z	const FRAME_KU32_FLAG_IGNORE_POSITION_POSITION_Z		9078
nim	FRAME_KU32_MASK_IGNORE_POSITION_POSITION	wrapper.html#FRAME_KU32_MASK_IGNORE_POSITION_POSITION	const FRAME_KU32_MASK_IGNORE_POSITION_POSITION		9088
nim	FRAME_KU32_MASK_IGNORE_POSITION	wrapper.html#FRAME_KU32_MASK_IGNORE_POSITION	const FRAME_KU32_MASK_IGNORE_POSITION		9098
nim	FRAME_KU32_MASK_IGNORE_ALL	wrapper.html#FRAME_KU32_MASK_IGNORE_ALL	const FRAME_KU32_MASK_IGNORE_ALL		9108
nim	FRAME_KU32_MASK_USER_ALL	wrapper.html#FRAME_KU32_MASK_USER_ALL	const FRAME_KU32_MASK_USER_ALL		9118
nim	SPAWNER_KU32_FLAG_NONE	wrapper.html#SPAWNER_KU32_FLAG_NONE	const SPAWNER_KU32_FLAG_NONE		9128
nim	SPAWNER_KU32_FLAG_AUTO_DELETE	wrapper.html#SPAWNER_KU32_FLAG_AUTO_DELETE	const SPAWNER_KU32_FLAG_AUTO_DELETE		9138
nim	SPAWNER_KU32_FLAG_AUTO_RESET	wrapper.html#SPAWNER_KU32_FLAG_AUTO_RESET	const SPAWNER_KU32_FLAG_AUTO_RESET		9148
nim	SPAWNER_KU32_FLAG_USE_ALPHA	wrapper.html#SPAWNER_KU32_FLAG_USE_ALPHA	const SPAWNER_KU32_FLAG_USE_ALPHA		9158
nim	SPAWNER_KU32_FLAG_USE_COLOR	wrapper.html#SPAWNER_KU32_FLAG_USE_COLOR	const SPAWNER_KU32_FLAG_USE_COLOR		9168
nim	SPAWNER_KU32_FLAG_USE_ROTATION	wrapper.html#SPAWNER_KU32_FLAG_USE_ROTATION	const SPAWNER_KU32_FLAG_USE_ROTATION		9178
nim	SPAWNER_KU32_FLAG_USE_SCALE	wrapper.html#SPAWNER_KU32_FLAG_USE_SCALE	const SPAWNER_KU32_FLAG_USE_SCALE		9188
nim	SPAWNER_KU32_FLAG_USE_RELATIVE_SPEED_OBJECT	wrapper.html#SPAWNER_KU32_FLAG_USE_RELATIVE_SPEED_OBJECT	const SPAWNER_KU32_FLAG_USE_RELATIVE_SPEED_OBJECT		9198
nim	SPAWNER_KU32_FLAG_USE_RELATIVE_SPEED_SPAWNER	wrapper.html#SPAWNER_KU32_FLAG_USE_RELATIVE_SPEED_SPAWNER	const SPAWNER_KU32_FLAG_USE_RELATIVE_SPEED_SPAWNER		9208
nim	SPAWNER_KU32_MASK_USE_RELATIVE_SPEED	wrapper.html#SPAWNER_KU32_MASK_USE_RELATIVE_SPEED	const SPAWNER_KU32_MASK_USE_RELATIVE_SPEED		9218
nim	SPAWNER_KU32_FLAG_USE_SELF_AS_PARENT	wrapper.html#SPAWNER_KU32_FLAG_USE_SELF_AS_PARENT	const SPAWNER_KU32_FLAG_USE_SELF_AS_PARENT		9228
nim	SPAWNER_KU32_FLAG_CLEAN_ON_DELETE	wrapper.html#SPAWNER_KU32_FLAG_CLEAN_ON_DELETE	const SPAWNER_KU32_FLAG_CLEAN_ON_DELETE		9238
nim	SPAWNER_KU32_FLAG_INTERPOLATE	wrapper.html#SPAWNER_KU32_FLAG_INTERPOLATE	const SPAWNER_KU32_FLAG_INTERPOLATE		9248
nim	SPAWNER_KU32_MASK_USER_ALL	wrapper.html#SPAWNER_KU32_MASK_USER_ALL	const SPAWNER_KU32_MASK_USER_ALL		9258
nim	BODY_DEF_KU32_FLAG_NONE	wrapper.html#BODY_DEF_KU32_FLAG_NONE	const BODY_DEF_KU32_FLAG_NONE		9268
nim	BODY_DEF_KU32_FLAG_2D	wrapper.html#BODY_DEF_KU32_FLAG_2D	const BODY_DEF_KU32_FLAG_2D		9278
nim	BODY_DEF_KU32_FLAG_DYNAMIC	wrapper.html#BODY_DEF_KU32_FLAG_DYNAMIC	const BODY_DEF_KU32_FLAG_DYNAMIC		9288
nim	BODY_DEF_KU32_FLAG_HIGH_SPEED	wrapper.html#BODY_DEF_KU32_FLAG_HIGH_SPEED	const BODY_DEF_KU32_FLAG_HIGH_SPEED		9298
nim	BODY_DEF_KU32_FLAG_FIXED_ROTATION	wrapper.html#BODY_DEF_KU32_FLAG_FIXED_ROTATION	const BODY_DEF_KU32_FLAG_FIXED_ROTATION		9308
nim	BODY_DEF_KU32_FLAG_CAN_MOVE	wrapper.html#BODY_DEF_KU32_FLAG_CAN_MOVE	const BODY_DEF_KU32_FLAG_CAN_MOVE		9318
nim	BODY_DEF_KU32_FLAG_ALLOW_SLEEP	wrapper.html#BODY_DEF_KU32_FLAG_ALLOW_SLEEP	const BODY_DEF_KU32_FLAG_ALLOW_SLEEP		9328
nim	BODY_DEF_KU32_MASK_ALL	wrapper.html#BODY_DEF_KU32_MASK_ALL	const BODY_DEF_KU32_MASK_ALL		9338
nim	BODY_PART_DEF_KU32_FLAG_NONE	wrapper.html#BODY_PART_DEF_KU32_FLAG_NONE	const BODY_PART_DEF_KU32_FLAG_NONE		9348
nim	BODY_PART_DEF_KU32_FLAG_SPHERE	wrapper.html#BODY_PART_DEF_KU32_FLAG_SPHERE	const BODY_PART_DEF_KU32_FLAG_SPHERE		9358
nim	BODY_PART_DEF_KU32_FLAG_BOX	wrapper.html#BODY_PART_DEF_KU32_FLAG_BOX	const BODY_PART_DEF_KU32_FLAG_BOX		9368
nim	BODY_PART_DEF_KU32_FLAG_MESH	wrapper.html#BODY_PART_DEF_KU32_FLAG_MESH	const BODY_PART_DEF_KU32_FLAG_MESH		9378
nim	BODY_PART_DEF_KU32_FLAG_EDGE	wrapper.html#BODY_PART_DEF_KU32_FLAG_EDGE	const BODY_PART_DEF_KU32_FLAG_EDGE		9388
nim	BODY_PART_DEF_KU32_FLAG_CHAIN	wrapper.html#BODY_PART_DEF_KU32_FLAG_CHAIN	const BODY_PART_DEF_KU32_FLAG_CHAIN		9398
nim	BODY_PART_DEF_KU32_MASK_TYPE	wrapper.html#BODY_PART_DEF_KU32_MASK_TYPE	const BODY_PART_DEF_KU32_MASK_TYPE		9408
nim	BODY_PART_DEF_KU32_FLAG_SOLID	wrapper.html#BODY_PART_DEF_KU32_FLAG_SOLID	const BODY_PART_DEF_KU32_FLAG_SOLID		9418
nim	BODY_PART_DEF_KU32_MASK_ALL	wrapper.html#BODY_PART_DEF_KU32_MASK_ALL	const BODY_PART_DEF_KU32_MASK_ALL		9428
nim	BODY_JOINT_DEF_KU32_FLAG_NONE	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_NONE	const BODY_JOINT_DEF_KU32_FLAG_NONE		9438
nim	BODY_JOINT_DEF_KU32_FLAG_REVOLUTE	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_REVOLUTE	const BODY_JOINT_DEF_KU32_FLAG_REVOLUTE		9448
nim	BODY_JOINT_DEF_KU32_FLAG_PRISMATIC	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_PRISMATIC	const BODY_JOINT_DEF_KU32_FLAG_PRISMATIC		9458
nim	BODY_JOINT_DEF_KU32_FLAG_SPRING	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_SPRING	const BODY_JOINT_DEF_KU32_FLAG_SPRING		9468
nim	BODY_JOINT_DEF_KU32_FLAG_ROPE	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_ROPE	const BODY_JOINT_DEF_KU32_FLAG_ROPE		9478
nim	BODY_JOINT_DEF_KU32_FLAG_PULLEY	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_PULLEY	const BODY_JOINT_DEF_KU32_FLAG_PULLEY		9488
nim	BODY_JOINT_DEF_KU32_FLAG_SUSPENSION	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_SUSPENSION	const BODY_JOINT_DEF_KU32_FLAG_SUSPENSION		9498
nim	BODY_JOINT_DEF_KU32_FLAG_WELD	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_WELD	const BODY_JOINT_DEF_KU32_FLAG_WELD		9508
nim	BODY_JOINT_DEF_KU32_FLAG_FRICTION	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_FRICTION	const BODY_JOINT_DEF_KU32_FLAG_FRICTION		9518
nim	BODY_JOINT_DEF_KU32_FLAG_GEAR	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_GEAR	const BODY_JOINT_DEF_KU32_FLAG_GEAR		9528
nim	BODY_JOINT_DEF_KU32_MASK_TYPE	wrapper.html#BODY_JOINT_DEF_KU32_MASK_TYPE	const BODY_JOINT_DEF_KU32_MASK_TYPE		9538
nim	BODY_JOINT_DEF_KU32_FLAG_COLLIDE	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_COLLIDE	const BODY_JOINT_DEF_KU32_FLAG_COLLIDE		9548
nim	BODY_JOINT_DEF_KU32_FLAG_ROTATION_LIMIT	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_ROTATION_LIMIT	const BODY_JOINT_DEF_KU32_FLAG_ROTATION_LIMIT		9558
nim	BODY_JOINT_DEF_KU32_FLAG_MOTOR	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_MOTOR	const BODY_JOINT_DEF_KU32_FLAG_MOTOR		9568
nim	BODY_JOINT_DEF_KU32_FLAG_TRANSLATION_LIMIT	wrapper.html#BODY_JOINT_DEF_KU32_FLAG_TRANSLATION_LIMIT	const BODY_JOINT_DEF_KU32_FLAG_TRANSLATION_LIMIT		9578
nim	BODY_JOINT_DEF_KU32_MASK_ALL	wrapper.html#BODY_JOINT_DEF_KU32_MASK_ALL	const BODY_JOINT_DEF_KU32_MASK_ALL		9588
nim	BODY_PART_DEF_KU32_MESH_VERTEX_NUMBER	wrapper.html#BODY_PART_DEF_KU32_MESH_VERTEX_NUMBER	const BODY_PART_DEF_KU32_MESH_VERTEX_NUMBER		9598
nim	PHYSICS_KZ_CONFIG_SECTION	wrapper.html#PHYSICS_KZ_CONFIG_SECTION	const PHYSICS_KZ_CONFIG_SECTION		9608
nim	PHYSICS_KZ_CONFIG_GRAVITY	wrapper.html#PHYSICS_KZ_CONFIG_GRAVITY	const PHYSICS_KZ_CONFIG_GRAVITY		9618
nim	PHYSICS_KZ_CONFIG_ALLOW_SLEEP	wrapper.html#PHYSICS_KZ_CONFIG_ALLOW_SLEEP	const PHYSICS_KZ_CONFIG_ALLOW_SLEEP		9628
nim	PHYSICS_KZ_CONFIG_ITERATIONS	wrapper.html#PHYSICS_KZ_CONFIG_ITERATIONS	const PHYSICS_KZ_CONFIG_ITERATIONS		9638
nim	PHYSICS_KZ_CONFIG_RATIO	wrapper.html#PHYSICS_KZ_CONFIG_RATIO	const PHYSICS_KZ_CONFIG_RATIO		9648
nim	PHYSICS_KZ_CONFIG_STEP_FREQUENCY	wrapper.html#PHYSICS_KZ_CONFIG_STEP_FREQUENCY	const PHYSICS_KZ_CONFIG_STEP_FREQUENCY		9658
nim	PHYSICS_KZ_CONFIG_SHOW_DEBUG	wrapper.html#PHYSICS_KZ_CONFIG_SHOW_DEBUG	const PHYSICS_KZ_CONFIG_SHOW_DEBUG		9668
nim	PHYSICS_KZ_CONFIG_COLLISION_FLAG_LIST	wrapper.html#PHYSICS_KZ_CONFIG_COLLISION_FLAG_LIST	const PHYSICS_KZ_CONFIG_COLLISION_FLAG_LIST		9678
nim	PHYSICS_KZ_CONFIG_INTERPOLATE	wrapper.html#PHYSICS_KZ_CONFIG_INTERPOLATE	const PHYSICS_KZ_CONFIG_INTERPOLATE		9688
nim	CAMERA_KU32_FLAG_NONE	wrapper.html#CAMERA_KU32_FLAG_NONE	const CAMERA_KU32_FLAG_NONE		9698
nim	CAMERA_KU32_FLAG_2D	wrapper.html#CAMERA_KU32_FLAG_2D	const CAMERA_KU32_FLAG_2D		9708
nim	CAMERA_KU32_MASK_USER_ALL	wrapper.html#CAMERA_KU32_MASK_USER_ALL	const CAMERA_KU32_MASK_USER_ALL		9718
nim	CAMERA_KU32_GROUP_ID_NUMBER	wrapper.html#CAMERA_KU32_GROUP_ID_NUMBER	const CAMERA_KU32_GROUP_ID_NUMBER		9728
nim	SHADERPOINTER_KU32_SHADER_NUMBER	wrapper.html#SHADERPOINTER_KU32_SHADER_NUMBER	const SHADERPOINTER_KU32_SHADER_NUMBER		9738
nim	VIEWPORT_KU32_FLAG_ALIGN_CENTER	wrapper.html#VIEWPORT_KU32_FLAG_ALIGN_CENTER	const VIEWPORT_KU32_FLAG_ALIGN_CENTER		9748
nim	VIEWPORT_KU32_FLAG_ALIGN_LEFT	wrapper.html#VIEWPORT_KU32_FLAG_ALIGN_LEFT	const VIEWPORT_KU32_FLAG_ALIGN_LEFT		9758
nim	VIEWPORT_KU32_FLAG_ALIGN_RIGHT	wrapper.html#VIEWPORT_KU32_FLAG_ALIGN_RIGHT	const VIEWPORT_KU32_FLAG_ALIGN_RIGHT		9768
nim	VIEWPORT_KU32_FLAG_ALIGN_TOP	wrapper.html#VIEWPORT_KU32_FLAG_ALIGN_TOP	const VIEWPORT_KU32_FLAG_ALIGN_TOP		9778
nim	VIEWPORT_KU32_FLAG_ALIGN_BOTTOM	wrapper.html#VIEWPORT_KU32_FLAG_ALIGN_BOTTOM	const VIEWPORT_KU32_FLAG_ALIGN_BOTTOM		9788
nim	VIEWPORT_KU32_FLAG_NO_DEBUG	wrapper.html#VIEWPORT_KU32_FLAG_NO_DEBUG	const VIEWPORT_KU32_FLAG_NO_DEBUG		9798
nim	VIEWPORT_KU32_MAX_TEXTURE_NUMBER	wrapper.html#VIEWPORT_KU32_MAX_TEXTURE_NUMBER	const VIEWPORT_KU32_MAX_TEXTURE_NUMBER		9808
nim	RENDER_KZ_CONFIG_SECTION	wrapper.html#RENDER_KZ_CONFIG_SECTION	const RENDER_KZ_CONFIG_SECTION		9818
nim	RENDER_KZ_CONFIG_SHOW_FPS	wrapper.html#RENDER_KZ_CONFIG_SHOW_FPS	const RENDER_KZ_CONFIG_SHOW_FPS		9828
nim	RENDER_KZ_CONFIG_SHOW_PROFILER	wrapper.html#RENDER_KZ_CONFIG_SHOW_PROFILER	const RENDER_KZ_CONFIG_SHOW_PROFILER		9838
nim	RENDER_KZ_CONFIG_MIN_FREQUENCY	wrapper.html#RENDER_KZ_CONFIG_MIN_FREQUENCY	const RENDER_KZ_CONFIG_MIN_FREQUENCY		9848
nim	RENDER_KZ_CONFIG_PROFILER_ORIENTATION	wrapper.html#RENDER_KZ_CONFIG_PROFILER_ORIENTATION	const RENDER_KZ_CONFIG_PROFILER_ORIENTATION		9858
nim	RENDER_KZ_CONFIG_CONSOLE_COLOR	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_COLOR	const RENDER_KZ_CONFIG_CONSOLE_COLOR		9868
nim	RENDER_KZ_CONFIG_CONSOLE_ALPHA	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_ALPHA	const RENDER_KZ_CONFIG_CONSOLE_ALPHA		9878
nim	RENDER_KZ_CONFIG_CONSOLE_BACKGROUND_COLOR	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_BACKGROUND_COLOR	const RENDER_KZ_CONFIG_CONSOLE_BACKGROUND_COLOR		9888
nim	RENDER_KZ_CONFIG_CONSOLE_BACKGROUND_ALPHA	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_BACKGROUND_ALPHA	const RENDER_KZ_CONFIG_CONSOLE_BACKGROUND_ALPHA		9898
nim	RENDER_KZ_CONFIG_CONSOLE_SEPARATOR_COLOR	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_SEPARATOR_COLOR	const RENDER_KZ_CONFIG_CONSOLE_SEPARATOR_COLOR		9908
nim	RENDER_KZ_CONFIG_CONSOLE_SEPARATOR_ALPHA	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_SEPARATOR_ALPHA	const RENDER_KZ_CONFIG_CONSOLE_SEPARATOR_ALPHA		9918
nim	RENDER_KZ_CONFIG_CONSOLE_INPUT_COLOR	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_INPUT_COLOR	const RENDER_KZ_CONFIG_CONSOLE_INPUT_COLOR		9928
nim	RENDER_KZ_CONFIG_CONSOLE_INPUT_ALPHA	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_INPUT_ALPHA	const RENDER_KZ_CONFIG_CONSOLE_INPUT_ALPHA		9938
nim	RENDER_KZ_CONFIG_CONSOLE_COMPLETION_COLOR	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_COMPLETION_COLOR	const RENDER_KZ_CONFIG_CONSOLE_COMPLETION_COLOR		9948
nim	RENDER_KZ_CONFIG_CONSOLE_COMPLETION_ALPHA	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_COMPLETION_ALPHA	const RENDER_KZ_CONFIG_CONSOLE_COMPLETION_ALPHA		9958
nim	RENDER_KZ_CONFIG_CONSOLE_LOG_COLOR	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_LOG_COLOR	const RENDER_KZ_CONFIG_CONSOLE_LOG_COLOR		9968
nim	RENDER_KZ_CONFIG_CONSOLE_LOG_ALPHA	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_LOG_ALPHA	const RENDER_KZ_CONFIG_CONSOLE_LOG_ALPHA		9978
nim	RENDER_KZ_CONFIG_CONSOLE_FONT_SCALE	wrapper.html#RENDER_KZ_CONFIG_CONSOLE_FONT_SCALE	const RENDER_KZ_CONFIG_CONSOLE_FONT_SCALE		9988
nim	RENDER_KZ_INPUT_SET	wrapper.html#RENDER_KZ_INPUT_SET	const RENDER_KZ_INPUT_SET		9998
nim	RENDER_KZ_INPUT_PROFILER_TOGGLE_HISTORY	wrapper.html#RENDER_KZ_INPUT_PROFILER_TOGGLE_HISTORY	const RENDER_KZ_INPUT_PROFILER_TOGGLE_HISTORY		10008
nim	RENDER_KZ_INPUT_PROFILER_PAUSE	wrapper.html#RENDER_KZ_INPUT_PROFILER_PAUSE	const RENDER_KZ_INPUT_PROFILER_PAUSE		10018
nim	RENDER_KZ_INPUT_PROFILER_PREVIOUS_FRAME	wrapper.html#RENDER_KZ_INPUT_PROFILER_PREVIOUS_FRAME	const RENDER_KZ_INPUT_PROFILER_PREVIOUS_FRAME		10028
nim	RENDER_KZ_INPUT_PROFILER_NEXT_FRAME	wrapper.html#RENDER_KZ_INPUT_PROFILER_NEXT_FRAME	const RENDER_KZ_INPUT_PROFILER_NEXT_FRAME		10038
nim	RENDER_KZ_INPUT_PROFILER_PREVIOUS_DEPTH	wrapper.html#RENDER_KZ_INPUT_PROFILER_PREVIOUS_DEPTH	const RENDER_KZ_INPUT_PROFILER_PREVIOUS_DEPTH		10048
nim	RENDER_KZ_INPUT_PROFILER_NEXT_DEPTH	wrapper.html#RENDER_KZ_INPUT_PROFILER_NEXT_DEPTH	const RENDER_KZ_INPUT_PROFILER_NEXT_DEPTH		10058
nim	RENDER_KZ_INPUT_PROFILER_PREVIOUS_THREAD	wrapper.html#RENDER_KZ_INPUT_PROFILER_PREVIOUS_THREAD	const RENDER_KZ_INPUT_PROFILER_PREVIOUS_THREAD		10068
nim	RENDER_KZ_INPUT_PROFILER_NEXT_THREAD	wrapper.html#RENDER_KZ_INPUT_PROFILER_NEXT_THREAD	const RENDER_KZ_INPUT_PROFILER_NEXT_THREAD		10078
nim	SOUNDPOINTER_KU32_SOUND_NUMBER	wrapper.html#SOUNDPOINTER_KU32_SOUND_NUMBER	const SOUNDPOINTER_KU32_SOUND_NUMBER		10088
nim	orxFLOAT_0	wrapper.html#orxFLOAT_0	var orxFLOAT_0		10096
nim	orxFLOAT_1	wrapper.html#orxFLOAT_1	var orxFLOAT_1		10101
nim	orxFLOAT_MAX	wrapper.html#orxFLOAT_MAX	var orxFLOAT_MAX		10106
nim	orxDOUBLE_0	wrapper.html#orxDOUBLE_0	var orxDOUBLE_0		10111
nim	orxDOUBLE_1	wrapper.html#orxDOUBLE_1	var orxDOUBLE_1		10116
nim	orxDOUBLE_MAX	wrapper.html#orxDOUBLE_MAX	var orxDOUBLE_MAX		10121
nim	orxU64_UNDEFINED	wrapper.html#orxU64_UNDEFINED	var orxU64_UNDEFINED		10127
nim	orxU32_UNDEFINED	wrapper.html#orxU32_UNDEFINED	var orxU32_UNDEFINED		10133
nim	orxU16_UNDEFINED	wrapper.html#orxU16_UNDEFINED	var orxU16_UNDEFINED		10139
nim	orxU8_UNDEFINED	wrapper.html#orxU8_UNDEFINED	var orxU8_UNDEFINED		10145
nim	orxHANDLE_UNDEFINED	wrapper.html#orxHANDLE_UNDEFINED	var orxHANDLE_UNDEFINED		10151
nim	orxSTRINGID_UNDEFINED	wrapper.html#orxSTRINGID_UNDEFINED	var orxSTRINGID_UNDEFINED		10157
nim	orxSTRING_EMPTY	wrapper.html#orxSTRING_EMPTY	var orxSTRING_EMPTY		10163
nim	orxSTRING_TRUE	wrapper.html#orxSTRING_TRUE	var orxSTRING_TRUE		10169
nim	orxSTRING_FALSE	wrapper.html#orxSTRING_FALSE	var orxSTRING_FALSE		10175
nim	orxSTRING_EOL	wrapper.html#orxSTRING_EOL	var orxSTRING_EOL		10181
nim	orxSTRING_DIRECTORY_SEPARATOR	wrapper.html#orxSTRING_DIRECTORY_SEPARATOR	var orxSTRING_DIRECTORY_SEPARATOR		10187
nim	moduleRegister	wrapper.html#moduleRegister,orxMODULE_ID_520095075,cstring,orxMODULE_SETUP_FUNCTION_520095083,orxMODULE_INIT_FUNCTION_520095077,orxMODULE_EXIT_FUNCTION_520095079	proc moduleRegister(internal_eModuleID: orxMODULE_ID_520095075;\n               internal_zModuleName: cstring;\n               internal_pfnSetup: orxMODULE_SETUP_FUNCTION_520095083;\n               internal_pfnInit: orxMODULE_INIT_FUNCTION_520095077;\n               internal_pfnExit: orxMODULE_EXIT_FUNCTION_520095079): void		10193
nim	addDependency	wrapper.html#addDependency,orxMODULE_ID_520095075,orxMODULE_ID_520095075	proc addDependency(internal_eModuleID: orxMODULE_ID_520095075;\n              internal_eDependID: orxMODULE_ID_520095075): void		10204
nim	addOptionalDependency	wrapper.html#addOptionalDependency,orxMODULE_ID_520095075,orxMODULE_ID_520095075	proc addOptionalDependency(internal_eModuleID: orxMODULE_ID_520095075;\n                      internal_eDependID: orxMODULE_ID_520095075): void		10212
nim	moduleInit	wrapper.html#moduleInit,orxMODULE_ID_520095075	proc moduleInit(internal_eModuleID: orxMODULE_ID_520095075): orxSTATUS_520095067		10220
nim	moduleExit	wrapper.html#moduleExit,orxMODULE_ID_520095075	proc moduleExit(internal_eModuleID: orxMODULE_ID_520095075): void		10226
nim	isInitialized	wrapper.html#isInitialized,orxMODULE_ID_520095075	proc isInitialized(internal_eModuleID: orxMODULE_ID_520095075): orxBOOL_520095039		10232
nim	getName	wrapper.html#getName,orxMODULE_ID_520095075	proc getName(internal_eModuleID: orxMODULE_ID_520095075): cstring		10239
nim	internal_orxDebug_Init	wrapper.html#internal_orxDebug_Init	proc internal_orxDebug_Init(): orxSTATUS_520095067		10245
nim	internal_orxDebug_Exit	wrapper.html#internal_orxDebug_Exit	proc internal_orxDebug_Exit(): void		10252
nim	internal_orxDebug_Log	wrapper.html#internal_orxDebug_Log,orxDEBUG_LEVEL_520095087,cstring,cstring,orxU32_520095025,cstring	proc internal_orxDebug_Log(internal_eLevel: orxDEBUG_LEVEL_520095087;\n                      internal_zFunction: cstring; internal_zFile: cstring;\n                      internal_u32Line: orxU32_520095025;\n                      internal_zFormat: cstring): void		10258
nim	internal_orxDebug_EnableLevel	wrapper.html#internal_orxDebug_EnableLevel,orxDEBUG_LEVEL_520095087,orxBOOL_520095039	proc internal_orxDebug_EnableLevel(internal_eLevel: orxDEBUG_LEVEL_520095087;\n                              internal_bEnable: orxBOOL_520095039): void		10268
nim	internal_orxDebug_IsLevelEnabled	wrapper.html#internal_orxDebug_IsLevelEnabled,orxDEBUG_LEVEL_520095087	proc internal_orxDebug_IsLevelEnabled(internal_eLevel: orxDEBUG_LEVEL_520095087): orxBOOL_520095039		10276
nim	internal_orxDebug_SetFlags	wrapper.html#internal_orxDebug_SetFlags,orxU32_520095025,orxU32_520095025	proc internal_orxDebug_SetFlags(internal_u32Add: orxU32_520095025;\n                           internal_u32Remove: orxU32_520095025): void		10283
nim	internal_orxDebug_GetFlags	wrapper.html#internal_orxDebug_GetFlags	proc internal_orxDebug_GetFlags(): orxU32_520095025		10291
nim	internal_orxDebug_Break	wrapper.html#internal_orxDebug_Break	proc internal_orxDebug_Break(): void		10298
nim	internal_orxDebug_SetDebugFile	wrapper.html#internal_orxDebug_SetDebugFile,cstring	proc internal_orxDebug_SetDebugFile(internal_zFileName: cstring): void		10304
nim	internal_orxDebug_SetLogFile	wrapper.html#internal_orxDebug_SetLogFile,cstring	proc internal_orxDebug_SetLogFile(internal_zFileName: cstring): void		10311
nim	internal_orxDebug_SetLogCallback	wrapper.html#internal_orxDebug_SetLogCallback,orxDEBUG_CALLBACK_FUNCTION_520095089	proc internal_orxDebug_SetLogCallback(internal_pfnLogCallback: orxDEBUG_CALLBACK_FUNCTION_520095089): void		10318
nim	memorySetup	wrapper.html#memorySetup	proc memorySetup(): void		10326
nim	memoryInit	wrapper.html#memoryInit	proc memoryInit(): orxSTATUS_520095067		10331
nim	memoryExit	wrapper.html#memoryExit	proc memoryExit(): void		10336
nim	allocate	wrapper.html#allocate,orxU32_520095025,orxMEMORY_TYPE_520095093	proc allocate(internal_u32Size: orxU32_520095025;\n         internal_eMemType: orxMEMORY_TYPE_520095093): pointer		10341
nim	reallocate	wrapper.html#reallocate,pointer,orxU32_520095025,orxMEMORY_TYPE_520095093	proc reallocate(internal_pMem: pointer; internal_u32Size: orxU32_520095025;\n           internal_eMemType: orxMEMORY_TYPE_520095093): pointer		10348
nim	free	wrapper.html#free,pointer	proc free(internal_pMem: pointer): void		10355
nim	getTypeName	wrapper.html#getTypeName,orxMEMORY_TYPE_520095093	proc getTypeName(internal_eMemType: orxMEMORY_TYPE_520095093): cstring		10360
nim	getCacheLineSize	wrapper.html#getCacheLineSize	proc getCacheLineSize(): orxU32_520095025		10366
nim	initRandom	wrapper.html#initRandom,orxU32_520095025	proc initRandom(internal_u32Seed: orxU32_520095025): void		10373
nim	getRandomFloat	wrapper.html#getRandomFloat,orxFLOAT_520095041,orxFLOAT_520095041	proc getRandomFloat(internal_fMin: orxFLOAT_520095041;\n               internal_fMax: orxFLOAT_520095041): orxFLOAT_520095041		10379
nim	getSteppedRandomFloat	wrapper.html#getSteppedRandomFloat,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041	proc getSteppedRandomFloat(internal_fMin: orxFLOAT_520095041;\n                      internal_fMax: orxFLOAT_520095041;\n                      internal_fStep: orxFLOAT_520095041): orxFLOAT_520095041		10387
nim	getRandomU32	wrapper.html#getRandomU32,orxU32_520095025,orxU32_520095025	proc getRandomU32(internal_u32Min: orxU32_520095025;\n             internal_u32Max: orxU32_520095025): orxU32_520095025		10396
nim	getSteppedRandomU32	wrapper.html#getSteppedRandomU32,orxU32_520095025,orxU32_520095025,orxU32_520095025	proc getSteppedRandomU32(internal_u32Min: orxU32_520095025;\n                    internal_u32Max: orxU32_520095025;\n                    internal_u32Step: orxU32_520095025): orxU32_520095025		10402
nim	getRandomS32	wrapper.html#getRandomS32,orxS32_520095033,orxS32_520095033	proc getRandomS32(internal_s32Min: orxS32_520095033;\n             internal_s32Max: orxS32_520095033): orxS32_520095033		10411
nim	getSteppedRandomS32	wrapper.html#getSteppedRandomS32,orxS32_520095033,orxS32_520095033,orxS32_520095033	proc getSteppedRandomS32(internal_s32Min: orxS32_520095033;\n                    internal_s32Max: orxS32_520095033;\n                    internal_s32Step: orxS32_520095033): orxS32_520095033		10417
nim	getRandomU64	wrapper.html#getRandomU64,orxU64_520095023,orxU64_520095023	proc getRandomU64(internal_u64Min: orxU64_520095023;\n             internal_u64Max: orxU64_520095023): orxU64_520095023		10426
nim	getSteppedRandomU64	wrapper.html#getSteppedRandomU64,orxU64_520095023,orxU64_520095023,orxU64_520095023	proc getSteppedRandomU64(internal_u64Min: orxU64_520095023;\n                    internal_u64Max: orxU64_520095023;\n                    internal_u64Step: orxU64_520095023): orxU64_520095023		10432
nim	getRandomS64	wrapper.html#getRandomS64,orxS64_520095031,orxS64_520095031	proc getRandomS64(internal_s64Min: orxS64_520095031;\n             internal_s64Max: orxS64_520095031): orxS64_520095031		10441
nim	getSteppedRandomS64	wrapper.html#getSteppedRandomS64,orxS64_520095031,orxS64_520095031,orxS64_520095031	proc getSteppedRandomS64(internal_s64Min: orxS64_520095031;\n                    internal_s64Max: orxS64_520095031;\n                    internal_s64Step: orxS64_520095031): orxS64_520095031		10447
nim	getRandomSeeds	wrapper.html#getRandomSeeds,array[,orxU32_520095025]	proc getRandomSeeds(internal_au32Seeds: array[4'i64, orxU32_520095025]): void		10456
nim	setRandomSeeds	wrapper.html#setRandomSeeds,array[,orxU32_520095025]	proc setRandomSeeds(internal_au32Seeds: array[4'i64, orxU32_520095025]): void		10463
nim	bezier	wrapper.html#bezier,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,orxFLOAT_520095041	proc bezier(internal_pvRes: ptr orxVECTOR_520095097;\n       internal_pvPoint1: ptr orxVECTOR_520095097;\n       internal_pvPoint2: ptr orxVECTOR_520095097;\n       internal_pvPoint3: ptr orxVECTOR_520095097;\n       internal_pvPoint4: ptr orxVECTOR_520095097;\n       internal_fT: orxFLOAT_520095041): ptr orxVECTOR_520095097		10470
nim	catmullRom	wrapper.html#catmullRom,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,orxFLOAT_520095041	proc catmullRom(internal_pvRes: ptr orxVECTOR_520095097;\n           internal_pvPoint1: ptr orxVECTOR_520095097;\n           internal_pvPoint2: ptr orxVECTOR_520095097;\n           internal_pvPoint3: ptr orxVECTOR_520095097;\n           internal_pvPoint4: ptr orxVECTOR_520095097;\n           internal_fT: orxFLOAT_520095041): ptr orxVECTOR_520095097		10480
nim	orxVECTOR_X	wrapper.html#orxVECTOR_X	var orxVECTOR_X		10491
nim	orxVECTOR_Y	wrapper.html#orxVECTOR_Y	var orxVECTOR_Y		10496
nim	orxVECTOR_Z	wrapper.html#orxVECTOR_Z	var orxVECTOR_Z		10501
nim	orxVECTOR_0	wrapper.html#orxVECTOR_0	var orxVECTOR_0		10506
nim	orxVECTOR_1	wrapper.html#orxVECTOR_1	var orxVECTOR_1		10511
nim	orxVECTOR_ALICE_BLUE	wrapper.html#orxVECTOR_ALICE_BLUE	var orxVECTOR_ALICE_BLUE		10516
nim	orxVECTOR_ANTIQUE_WHITE	wrapper.html#orxVECTOR_ANTIQUE_WHITE	var orxVECTOR_ANTIQUE_WHITE		10522
nim	orxVECTOR_AQUA	wrapper.html#orxVECTOR_AQUA	var orxVECTOR_AQUA		10528
nim	orxVECTOR_AQUAMARINE	wrapper.html#orxVECTOR_AQUAMARINE	var orxVECTOR_AQUAMARINE		10534
nim	orxVECTOR_AZURE	wrapper.html#orxVECTOR_AZURE	var orxVECTOR_AZURE		10540
nim	orxVECTOR_BEIGE	wrapper.html#orxVECTOR_BEIGE	var orxVECTOR_BEIGE		10546
nim	orxVECTOR_BISQUE	wrapper.html#orxVECTOR_BISQUE	var orxVECTOR_BISQUE		10552
nim	orxVECTOR_BLACK	wrapper.html#orxVECTOR_BLACK	var orxVECTOR_BLACK		10558
nim	orxVECTOR_BLANCHED_ALMOND	wrapper.html#orxVECTOR_BLANCHED_ALMOND	var orxVECTOR_BLANCHED_ALMOND		10564
nim	orxVECTOR_BLUE	wrapper.html#orxVECTOR_BLUE	var orxVECTOR_BLUE		10570
nim	orxVECTOR_BLUE_VIOLET	wrapper.html#orxVECTOR_BLUE_VIOLET	var orxVECTOR_BLUE_VIOLET		10576
nim	orxVECTOR_BROWN	wrapper.html#orxVECTOR_BROWN	var orxVECTOR_BROWN		10582
nim	orxVECTOR_BURLY_WOOD	wrapper.html#orxVECTOR_BURLY_WOOD	var orxVECTOR_BURLY_WOOD		10588
nim	orxVECTOR_CADET_BLUE	wrapper.html#orxVECTOR_CADET_BLUE	var orxVECTOR_CADET_BLUE		10594
nim	orxVECTOR_CHARTREUSE	wrapper.html#orxVECTOR_CHARTREUSE	var orxVECTOR_CHARTREUSE		10600
nim	orxVECTOR_CHOCOLATE	wrapper.html#orxVECTOR_CHOCOLATE	var orxVECTOR_CHOCOLATE		10606
nim	orxVECTOR_CORAL	wrapper.html#orxVECTOR_CORAL	var orxVECTOR_CORAL		10612
nim	orxVECTOR_CORNFLOWER_BLUE	wrapper.html#orxVECTOR_CORNFLOWER_BLUE	var orxVECTOR_CORNFLOWER_BLUE		10618
nim	orxVECTOR_CORNSILK	wrapper.html#orxVECTOR_CORNSILK	var orxVECTOR_CORNSILK		10624
nim	orxVECTOR_CRIMSON	wrapper.html#orxVECTOR_CRIMSON	var orxVECTOR_CRIMSON		10630
nim	orxVECTOR_CYAN	wrapper.html#orxVECTOR_CYAN	var orxVECTOR_CYAN		10636
nim	orxVECTOR_DARK_BLUE	wrapper.html#orxVECTOR_DARK_BLUE	var orxVECTOR_DARK_BLUE		10642
nim	orxVECTOR_DARK_CYAN	wrapper.html#orxVECTOR_DARK_CYAN	var orxVECTOR_DARK_CYAN		10648
nim	orxVECTOR_DARK_GOLDEN_ROD	wrapper.html#orxVECTOR_DARK_GOLDEN_ROD	var orxVECTOR_DARK_GOLDEN_ROD		10654
nim	orxVECTOR_DARK_GRAY	wrapper.html#orxVECTOR_DARK_GRAY	var orxVECTOR_DARK_GRAY		10660
nim	orxVECTOR_DARK_GREY	wrapper.html#orxVECTOR_DARK_GREY	var orxVECTOR_DARK_GREY		10666
nim	orxVECTOR_DARK_GREEN	wrapper.html#orxVECTOR_DARK_GREEN	var orxVECTOR_DARK_GREEN		10672
nim	orxVECTOR_DARK_KHAKI	wrapper.html#orxVECTOR_DARK_KHAKI	var orxVECTOR_DARK_KHAKI		10678
nim	orxVECTOR_DARK_MAGENTA	wrapper.html#orxVECTOR_DARK_MAGENTA	var orxVECTOR_DARK_MAGENTA		10684
nim	orxVECTOR_DARK_OLIVE_GREEN	wrapper.html#orxVECTOR_DARK_OLIVE_GREEN	var orxVECTOR_DARK_OLIVE_GREEN		10690
nim	orxVECTOR_DARK_ORANGE	wrapper.html#orxVECTOR_DARK_ORANGE	var orxVECTOR_DARK_ORANGE		10696
nim	orxVECTOR_DARK_ORCHID	wrapper.html#orxVECTOR_DARK_ORCHID	var orxVECTOR_DARK_ORCHID		10702
nim	orxVECTOR_DARK_RED	wrapper.html#orxVECTOR_DARK_RED	var orxVECTOR_DARK_RED		10708
nim	orxVECTOR_DARK_SALMON	wrapper.html#orxVECTOR_DARK_SALMON	var orxVECTOR_DARK_SALMON		10714
nim	orxVECTOR_DARK_SEA_GREEN	wrapper.html#orxVECTOR_DARK_SEA_GREEN	var orxVECTOR_DARK_SEA_GREEN		10720
nim	orxVECTOR_DARK_SLATE_BLUE	wrapper.html#orxVECTOR_DARK_SLATE_BLUE	var orxVECTOR_DARK_SLATE_BLUE		10726
nim	orxVECTOR_DARK_SLATE_GRAY	wrapper.html#orxVECTOR_DARK_SLATE_GRAY	var orxVECTOR_DARK_SLATE_GRAY		10732
nim	orxVECTOR_DARK_SLATE_GREY	wrapper.html#orxVECTOR_DARK_SLATE_GREY	var orxVECTOR_DARK_SLATE_GREY		10738
nim	orxVECTOR_DARK_TURQUOISE	wrapper.html#orxVECTOR_DARK_TURQUOISE	var orxVECTOR_DARK_TURQUOISE		10744
nim	orxVECTOR_DARK_VIOLET	wrapper.html#orxVECTOR_DARK_VIOLET	var orxVECTOR_DARK_VIOLET		10750
nim	orxVECTOR_DEEP_PINK	wrapper.html#orxVECTOR_DEEP_PINK	var orxVECTOR_DEEP_PINK		10756
nim	orxVECTOR_DEEP_SKY_BLUE	wrapper.html#orxVECTOR_DEEP_SKY_BLUE	var orxVECTOR_DEEP_SKY_BLUE		10762
nim	orxVECTOR_DIM_GRAY	wrapper.html#orxVECTOR_DIM_GRAY	var orxVECTOR_DIM_GRAY		10768
nim	orxVECTOR_DIM_GREY	wrapper.html#orxVECTOR_DIM_GREY	var orxVECTOR_DIM_GREY		10774
nim	orxVECTOR_DODGER_BLUE	wrapper.html#orxVECTOR_DODGER_BLUE	var orxVECTOR_DODGER_BLUE		10780
nim	orxVECTOR_FIRE_BRICK	wrapper.html#orxVECTOR_FIRE_BRICK	var orxVECTOR_FIRE_BRICK		10786
nim	orxVECTOR_FLORAL_WHITE	wrapper.html#orxVECTOR_FLORAL_WHITE	var orxVECTOR_FLORAL_WHITE		10792
nim	orxVECTOR_FOREST_GREEN	wrapper.html#orxVECTOR_FOREST_GREEN	var orxVECTOR_FOREST_GREEN		10798
nim	orxVECTOR_FUCHSIA	wrapper.html#orxVECTOR_FUCHSIA	var orxVECTOR_FUCHSIA		10804
nim	orxVECTOR_GAINSBORO	wrapper.html#orxVECTOR_GAINSBORO	var orxVECTOR_GAINSBORO		10810
nim	orxVECTOR_GHOST_WHITE	wrapper.html#orxVECTOR_GHOST_WHITE	var orxVECTOR_GHOST_WHITE		10816
nim	orxVECTOR_GOLD	wrapper.html#orxVECTOR_GOLD	var orxVECTOR_GOLD		10822
nim	orxVECTOR_GOLDEN_ROD	wrapper.html#orxVECTOR_GOLDEN_ROD	var orxVECTOR_GOLDEN_ROD		10828
nim	orxVECTOR_GRAY	wrapper.html#orxVECTOR_GRAY	var orxVECTOR_GRAY		10834
nim	orxVECTOR_GREY	wrapper.html#orxVECTOR_GREY	var orxVECTOR_GREY		10840
nim	orxVECTOR_GREEN	wrapper.html#orxVECTOR_GREEN	var orxVECTOR_GREEN		10846
nim	orxVECTOR_GREEN_YELLOW	wrapper.html#orxVECTOR_GREEN_YELLOW	var orxVECTOR_GREEN_YELLOW		10852
nim	orxVECTOR_HONEY_DEW	wrapper.html#orxVECTOR_HONEY_DEW	var orxVECTOR_HONEY_DEW		10858
nim	orxVECTOR_HOT_PINK	wrapper.html#orxVECTOR_HOT_PINK	var orxVECTOR_HOT_PINK		10864
nim	orxVECTOR_INDIAN_RED	wrapper.html#orxVECTOR_INDIAN_RED	var orxVECTOR_INDIAN_RED		10870
nim	orxVECTOR_INDIGO	wrapper.html#orxVECTOR_INDIGO	var orxVECTOR_INDIGO		10876
nim	orxVECTOR_IVORY	wrapper.html#orxVECTOR_IVORY	var orxVECTOR_IVORY		10882
nim	orxVECTOR_KHAKI	wrapper.html#orxVECTOR_KHAKI	var orxVECTOR_KHAKI		10888
nim	orxVECTOR_LAVENDER	wrapper.html#orxVECTOR_LAVENDER	var orxVECTOR_LAVENDER		10894
nim	orxVECTOR_LAVENDER_BLUSH	wrapper.html#orxVECTOR_LAVENDER_BLUSH	var orxVECTOR_LAVENDER_BLUSH		10900
nim	orxVECTOR_LAWN_GREEN	wrapper.html#orxVECTOR_LAWN_GREEN	var orxVECTOR_LAWN_GREEN		10906
nim	orxVECTOR_LEMON_CHIFFON	wrapper.html#orxVECTOR_LEMON_CHIFFON	var orxVECTOR_LEMON_CHIFFON		10912
nim	orxVECTOR_LIGHT_BLUE	wrapper.html#orxVECTOR_LIGHT_BLUE	var orxVECTOR_LIGHT_BLUE		10918
nim	orxVECTOR_LIGHT_CORAL	wrapper.html#orxVECTOR_LIGHT_CORAL	var orxVECTOR_LIGHT_CORAL		10924
nim	orxVECTOR_LIGHT_CYAN	wrapper.html#orxVECTOR_LIGHT_CYAN	var orxVECTOR_LIGHT_CYAN		10930
nim	orxVECTOR_LIGHT_GOLDEN_ROD_YELLOW	wrapper.html#orxVECTOR_LIGHT_GOLDEN_ROD_YELLOW	var orxVECTOR_LIGHT_GOLDEN_ROD_YELLOW		10936
nim	orxVECTOR_LIGHT_GRAY	wrapper.html#orxVECTOR_LIGHT_GRAY	var orxVECTOR_LIGHT_GRAY		10943
nim	orxVECTOR_LIGHT_GREY	wrapper.html#orxVECTOR_LIGHT_GREY	var orxVECTOR_LIGHT_GREY		10949
nim	orxVECTOR_LIGHT_GREEN	wrapper.html#orxVECTOR_LIGHT_GREEN	var orxVECTOR_LIGHT_GREEN		10955
nim	orxVECTOR_LIGHT_PINK	wrapper.html#orxVECTOR_LIGHT_PINK	var orxVECTOR_LIGHT_PINK		10961
nim	orxVECTOR_LIGHT_SALMON	wrapper.html#orxVECTOR_LIGHT_SALMON	var orxVECTOR_LIGHT_SALMON		10967
nim	orxVECTOR_LIGHT_SEA_GREEN	wrapper.html#orxVECTOR_LIGHT_SEA_GREEN	var orxVECTOR_LIGHT_SEA_GREEN		10973
nim	orxVECTOR_LIGHT_SKY_BLUE	wrapper.html#orxVECTOR_LIGHT_SKY_BLUE	var orxVECTOR_LIGHT_SKY_BLUE		10979
nim	orxVECTOR_LIGHT_SLATE_GRAY	wrapper.html#orxVECTOR_LIGHT_SLATE_GRAY	var orxVECTOR_LIGHT_SLATE_GRAY		10985
nim	orxVECTOR_LIGHT_SLATE_GREY	wrapper.html#orxVECTOR_LIGHT_SLATE_GREY	var orxVECTOR_LIGHT_SLATE_GREY		10991
nim	orxVECTOR_LIGHT_STEEL_BLUE	wrapper.html#orxVECTOR_LIGHT_STEEL_BLUE	var orxVECTOR_LIGHT_STEEL_BLUE		10997
nim	orxVECTOR_LIGHT_YELLOW	wrapper.html#orxVECTOR_LIGHT_YELLOW	var orxVECTOR_LIGHT_YELLOW		11003
nim	orxVECTOR_LIME	wrapper.html#orxVECTOR_LIME	var orxVECTOR_LIME		11009
nim	orxVECTOR_LIME_GREEN	wrapper.html#orxVECTOR_LIME_GREEN	var orxVECTOR_LIME_GREEN		11015
nim	orxVECTOR_LINEN	wrapper.html#orxVECTOR_LINEN	var orxVECTOR_LINEN		11021
nim	orxVECTOR_MAGENTA	wrapper.html#orxVECTOR_MAGENTA	var orxVECTOR_MAGENTA		11027
nim	orxVECTOR_MAROON	wrapper.html#orxVECTOR_MAROON	var orxVECTOR_MAROON		11033
nim	orxVECTOR_MEDIUM_AQUA_MARINE	wrapper.html#orxVECTOR_MEDIUM_AQUA_MARINE	var orxVECTOR_MEDIUM_AQUA_MARINE		11039
nim	orxVECTOR_MEDIUM_BLUE	wrapper.html#orxVECTOR_MEDIUM_BLUE	var orxVECTOR_MEDIUM_BLUE		11045
nim	orxVECTOR_MEDIUM_ORCHID	wrapper.html#orxVECTOR_MEDIUM_ORCHID	var orxVECTOR_MEDIUM_ORCHID		11051
nim	orxVECTOR_MEDIUM_PURPLE	wrapper.html#orxVECTOR_MEDIUM_PURPLE	var orxVECTOR_MEDIUM_PURPLE		11057
nim	orxVECTOR_MEDIUM_SEA_GREEN	wrapper.html#orxVECTOR_MEDIUM_SEA_GREEN	var orxVECTOR_MEDIUM_SEA_GREEN		11063
nim	orxVECTOR_MEDIUM_SLATE_BLUE	wrapper.html#orxVECTOR_MEDIUM_SLATE_BLUE	var orxVECTOR_MEDIUM_SLATE_BLUE		11069
nim	orxVECTOR_MEDIUM_SPRING_GREEN	wrapper.html#orxVECTOR_MEDIUM_SPRING_GREEN	var orxVECTOR_MEDIUM_SPRING_GREEN		11075
nim	orxVECTOR_MEDIUM_TURQUOISE	wrapper.html#orxVECTOR_MEDIUM_TURQUOISE	var orxVECTOR_MEDIUM_TURQUOISE		11081
nim	orxVECTOR_MEDIUM_VIOLET_RED	wrapper.html#orxVECTOR_MEDIUM_VIOLET_RED	var orxVECTOR_MEDIUM_VIOLET_RED		11087
nim	orxVECTOR_MIDNIGHT_BLUE	wrapper.html#orxVECTOR_MIDNIGHT_BLUE	var orxVECTOR_MIDNIGHT_BLUE		11093
nim	orxVECTOR_MINT_CREAM	wrapper.html#orxVECTOR_MINT_CREAM	var orxVECTOR_MINT_CREAM		11099
nim	orxVECTOR_MISTY_ROSE	wrapper.html#orxVECTOR_MISTY_ROSE	var orxVECTOR_MISTY_ROSE		11105
nim	orxVECTOR_MOCCASIN	wrapper.html#orxVECTOR_MOCCASIN	var orxVECTOR_MOCCASIN		11111
nim	orxVECTOR_NAVAJO_WHITE	wrapper.html#orxVECTOR_NAVAJO_WHITE	var orxVECTOR_NAVAJO_WHITE		11117
nim	orxVECTOR_NAVY	wrapper.html#orxVECTOR_NAVY	var orxVECTOR_NAVY		11123
nim	orxVECTOR_OLD_LACE	wrapper.html#orxVECTOR_OLD_LACE	var orxVECTOR_OLD_LACE		11129
nim	orxVECTOR_OLIVE	wrapper.html#orxVECTOR_OLIVE	var orxVECTOR_OLIVE		11135
nim	orxVECTOR_OLIVE_DRAB	wrapper.html#orxVECTOR_OLIVE_DRAB	var orxVECTOR_OLIVE_DRAB		11141
nim	orxVECTOR_ORANGE	wrapper.html#orxVECTOR_ORANGE	var orxVECTOR_ORANGE		11147
nim	orxVECTOR_ORANGE_RED	wrapper.html#orxVECTOR_ORANGE_RED	var orxVECTOR_ORANGE_RED		11153
nim	orxVECTOR_ORCHID	wrapper.html#orxVECTOR_ORCHID	var orxVECTOR_ORCHID		11159
nim	orxVECTOR_PALE_GOLDEN_ROD	wrapper.html#orxVECTOR_PALE_GOLDEN_ROD	var orxVECTOR_PALE_GOLDEN_ROD		11165
nim	orxVECTOR_PALE_GREEN	wrapper.html#orxVECTOR_PALE_GREEN	var orxVECTOR_PALE_GREEN		11171
nim	orxVECTOR_PALE_TURQUOISE	wrapper.html#orxVECTOR_PALE_TURQUOISE	var orxVECTOR_PALE_TURQUOISE		11177
nim	orxVECTOR_PALE_VIOLET_RED	wrapper.html#orxVECTOR_PALE_VIOLET_RED	var orxVECTOR_PALE_VIOLET_RED		11183
nim	orxVECTOR_PAPAYA_WHIP	wrapper.html#orxVECTOR_PAPAYA_WHIP	var orxVECTOR_PAPAYA_WHIP		11189
nim	orxVECTOR_PEACH_PUFF	wrapper.html#orxVECTOR_PEACH_PUFF	var orxVECTOR_PEACH_PUFF		11195
nim	orxVECTOR_PERU	wrapper.html#orxVECTOR_PERU	var orxVECTOR_PERU		11201
nim	orxVECTOR_PINK	wrapper.html#orxVECTOR_PINK	var orxVECTOR_PINK		11207
nim	orxVECTOR_PLUM	wrapper.html#orxVECTOR_PLUM	var orxVECTOR_PLUM		11213
nim	orxVECTOR_POWDER_BLUE	wrapper.html#orxVECTOR_POWDER_BLUE	var orxVECTOR_POWDER_BLUE		11219
nim	orxVECTOR_PURPLE	wrapper.html#orxVECTOR_PURPLE	var orxVECTOR_PURPLE		11225
nim	orxVECTOR_REBECCA_PURPLE	wrapper.html#orxVECTOR_REBECCA_PURPLE	var orxVECTOR_REBECCA_PURPLE		11231
nim	orxVECTOR_RED	wrapper.html#orxVECTOR_RED	var orxVECTOR_RED		11237
nim	orxVECTOR_ROSY_BROWN	wrapper.html#orxVECTOR_ROSY_BROWN	var orxVECTOR_ROSY_BROWN		11243
nim	orxVECTOR_ROYAL_BLUE	wrapper.html#orxVECTOR_ROYAL_BLUE	var orxVECTOR_ROYAL_BLUE		11249
nim	orxVECTOR_SADDLE_BROWN	wrapper.html#orxVECTOR_SADDLE_BROWN	var orxVECTOR_SADDLE_BROWN		11255
nim	orxVECTOR_SALMON	wrapper.html#orxVECTOR_SALMON	var orxVECTOR_SALMON		11261
nim	orxVECTOR_SANDY_BROWN	wrapper.html#orxVECTOR_SANDY_BROWN	var orxVECTOR_SANDY_BROWN		11267
nim	orxVECTOR_SEA_GREEN	wrapper.html#orxVECTOR_SEA_GREEN	var orxVECTOR_SEA_GREEN		11273
nim	orxVECTOR_SEA_SHELL	wrapper.html#orxVECTOR_SEA_SHELL	var orxVECTOR_SEA_SHELL		11279
nim	orxVECTOR_SIENNA	wrapper.html#orxVECTOR_SIENNA	var orxVECTOR_SIENNA		11285
nim	orxVECTOR_SILVER	wrapper.html#orxVECTOR_SILVER	var orxVECTOR_SILVER		11291
nim	orxVECTOR_SKY_BLUE	wrapper.html#orxVECTOR_SKY_BLUE	var orxVECTOR_SKY_BLUE		11297
nim	orxVECTOR_SLATE_BLUE	wrapper.html#orxVECTOR_SLATE_BLUE	var orxVECTOR_SLATE_BLUE		11303
nim	orxVECTOR_SLATE_GRAY	wrapper.html#orxVECTOR_SLATE_GRAY	var orxVECTOR_SLATE_GRAY		11309
nim	orxVECTOR_SLATE_GREY	wrapper.html#orxVECTOR_SLATE_GREY	var orxVECTOR_SLATE_GREY		11315
nim	orxVECTOR_SNOW	wrapper.html#orxVECTOR_SNOW	var orxVECTOR_SNOW		11321
nim	orxVECTOR_SPRING_GREEN	wrapper.html#orxVECTOR_SPRING_GREEN	var orxVECTOR_SPRING_GREEN		11327
nim	orxVECTOR_STEEL_BLUE	wrapper.html#orxVECTOR_STEEL_BLUE	var orxVECTOR_STEEL_BLUE		11333
nim	orxVECTOR_TAN	wrapper.html#orxVECTOR_TAN	var orxVECTOR_TAN		11339
nim	orxVECTOR_TEAL	wrapper.html#orxVECTOR_TEAL	var orxVECTOR_TEAL		11345
nim	orxVECTOR_THISTLE	wrapper.html#orxVECTOR_THISTLE	var orxVECTOR_THISTLE		11351
nim	orxVECTOR_TOMATO	wrapper.html#orxVECTOR_TOMATO	var orxVECTOR_TOMATO		11357
nim	orxVECTOR_TURQUOISE	wrapper.html#orxVECTOR_TURQUOISE	var orxVECTOR_TURQUOISE		11363
nim	orxVECTOR_VIOLET	wrapper.html#orxVECTOR_VIOLET	var orxVECTOR_VIOLET		11369
nim	orxVECTOR_WHEAT	wrapper.html#orxVECTOR_WHEAT	var orxVECTOR_WHEAT		11375
nim	orxVECTOR_WHITE	wrapper.html#orxVECTOR_WHITE	var orxVECTOR_WHITE		11381
nim	orxVECTOR_WHITE_SMOKE	wrapper.html#orxVECTOR_WHITE_SMOKE	var orxVECTOR_WHITE_SMOKE		11387
nim	orxVECTOR_YELLOW	wrapper.html#orxVECTOR_YELLOW	var orxVECTOR_YELLOW		11393
nim	orxVECTOR_YELLOW_GREEN	wrapper.html#orxVECTOR_YELLOW_GREEN	var orxVECTOR_YELLOW_GREEN		11399
nim	systemSetup	wrapper.html#systemSetup	proc systemSetup(): void		11405
nim	systemInit	wrapper.html#systemInit	proc systemInit(): orxSTATUS_520095067		11410
nim	systemExit	wrapper.html#systemExit	proc systemExit(): void		11415
nim	getTime	wrapper.html#getTime	proc getTime(): orxDOUBLE_520095043		11420
nim	getRealTime	wrapper.html#getRealTime	proc getRealTime(): orxU64_520095023		11425
nim	getSystemTime	wrapper.html#getSystemTime	proc getSystemTime(): orxDOUBLE_520095043		11431
nim	delay	wrapper.html#delay,orxFLOAT_520095041	proc delay(internal_fSeconds: orxFLOAT_520095041): void		11438
nim	getVersion	wrapper.html#getVersion,ptr.orxVERSION_520095071	proc getVersion(internal_pstVersion: ptr orxVERSION_520095071): ptr orxVERSION_520095071		11444
nim	getVersionString	wrapper.html#getVersionString	proc getVersionString(): cstring		11450
nim	getVersionFullString	wrapper.html#getVersionFullString	proc getVersionFullString(): cstring		11457
nim	getVersionNumeric	wrapper.html#getVersionNumeric	proc getVersionNumeric(): orxU32_520095025		11464
nim	getClipboard	wrapper.html#getClipboard	proc getClipboard(): cstring		11471
nim	setClipboard	wrapper.html#setClipboard,cstring	proc setClipboard(internal_zValue: cstring): orxSTATUS_520095067		11476
nim	printUTF8Character	wrapper.html#printUTF8Character,cstring,orxU32_520095025,orxU32_520095025	proc printUTF8Character(internal_zDstString: cstring;\n                   internal_u32Size: orxU32_520095025;\n                   internal_u32CharacterCodePoint: orxU32_520095025): orxU32_520095025		11482
nim	getFirstCharacterCodePoint	wrapper.html#getFirstCharacterCodePoint,cstring,ptr.cstring	proc getFirstCharacterCodePoint(internal_zString: cstring;\n                           internal_pzRemaining: ptr cstring): orxU32_520095025		11491
nim	stringSetup	wrapper.html#stringSetup	proc stringSetup(): void		11499
nim	stringInit	wrapper.html#stringInit	proc stringInit(): orxSTATUS_520095067		11504
nim	stringExit	wrapper.html#stringExit	proc stringExit(): void		11509
nim	nHash	wrapper.html#nHash,cstring,orxU32_520095025	proc nHash(internal_zString: cstring; internal_u32CharNumber: orxU32_520095025): orxSTRINGID_520095047		11514
nim	getID	wrapper.html#getID,cstring	proc getID(internal_zString: cstring): orxSTRINGID_520095047		11520
nim	getFromID	wrapper.html#getFromID,orxU64_520095023	proc getFromID(internal_stID: orxSTRINGID_520095047): cstring		11526
nim	store	wrapper.html#store,cstring	proc store(internal_zString: cstring): cstring		11532
nim	clockSetup	wrapper.html#clockSetup	proc clockSetup(): void		11538
nim	clockInit	wrapper.html#clockInit	proc clockInit(): orxSTATUS_520095067		11543
nim	clockExit	wrapper.html#clockExit	proc clockExit(): void		11548
nim	clockUpdate	wrapper.html#clockUpdate	proc clockUpdate(): orxSTATUS_520095067		11553
nim	clockCreate	wrapper.html#clockCreate,orxFLOAT_520095041	proc clockCreate(internal_fTickSize: orxFLOAT_520095041): ptr orxCLOCK_520095130		11558
nim	clockCreateFromConfig	wrapper.html#clockCreateFromConfig,cstring	proc clockCreateFromConfig(internal_zConfigID: cstring): ptr orxCLOCK_520095130		11564
nim	clockDelete	wrapper.html#clockDelete,ptr.struct_orxCLOCK_t	proc clockDelete(internal_pstClock: ptr orxCLOCK_520095130): orxSTATUS_520095067		11571
nim	resync	wrapper.html#resync,ptr.struct_orxCLOCK_t	proc resync(internal_pstClock: ptr orxCLOCK_520095130): orxSTATUS_520095067		11577
nim	resyncAll	wrapper.html#resyncAll	proc resyncAll(): orxSTATUS_520095067		11583
nim	restart	wrapper.html#restart,ptr.struct_orxCLOCK_t	proc restart(internal_pstClock: ptr orxCLOCK_520095130): orxSTATUS_520095067		11588
nim	pause	wrapper.html#pause,ptr.struct_orxCLOCK_t,orxBOOL_520095039	proc pause(internal_pstClock: ptr orxCLOCK_520095130;\n      internal_bPause: orxBOOL_520095039): void		11594
nim	isPaused	wrapper.html#isPaused,ptr.struct_orxCLOCK_t	proc isPaused(internal_pstClock: ptr orxCLOCK_520095130): orxBOOL_520095039		11601
nim	getInfo	wrapper.html#getInfo,ptr.struct_orxCLOCK_t	proc getInfo(internal_pstClock: ptr orxCLOCK_520095130): ptr orxCLOCK_INFO_520095124		11607
nim	getFromInfo	wrapper.html#getFromInfo,ptr.orxCLOCK_INFO_520095124	proc getFromInfo(internal_pstClockInfo: ptr orxCLOCK_INFO_520095124): ptr orxCLOCK_520095130		11613
nim	setModifier	wrapper.html#setModifier,ptr.struct_orxCLOCK_t,orxCLOCK_MODIFIER_520095116,orxFLOAT_520095041	proc setModifier(internal_pstClock: ptr orxCLOCK_520095130;\n            internal_eModifier: orxCLOCK_MODIFIER_520095116;\n            internal_fValue: orxFLOAT_520095041): orxSTATUS_520095067		11619
nim	getModifier	wrapper.html#getModifier,ptr.struct_orxCLOCK_t,orxCLOCK_MODIFIER_520095116	proc getModifier(internal_pstClock: ptr orxCLOCK_520095130;\n            internal_eModifier: orxCLOCK_MODIFIER_520095116): orxFLOAT_520095041		11627
nim	setTickSize	wrapper.html#setTickSize,ptr.struct_orxCLOCK_t,orxFLOAT_520095041	proc setTickSize(internal_pstClock: ptr orxCLOCK_520095130;\n            internal_fTickSize: orxFLOAT_520095041): orxSTATUS_520095067		11634
nim	clockRegister	wrapper.html#clockRegister,ptr.struct_orxCLOCK_t,orxCLOCK_FUNCTION_520095132,pointer,orxMODULE_ID_520095075,orxCLOCK_PRIORITY_520095120	proc clockRegister(internal_pstClock: ptr orxCLOCK_520095130;\n              internal_pfnCallback: orxCLOCK_FUNCTION_520095132;\n              internal_pContext: pointer;\n              internal_eModuleID: orxMODULE_ID_520095075;\n              internal_ePriority: orxCLOCK_PRIORITY_520095120): orxSTATUS_520095067		11641
nim	unregister	wrapper.html#unregister,ptr.struct_orxCLOCK_t,orxCLOCK_FUNCTION_520095132	proc unregister(internal_pstClock: ptr orxCLOCK_520095130;\n           internal_pfnCallback: orxCLOCK_FUNCTION_520095132): orxSTATUS_520095067		11652
nim	getContext	wrapper.html#getContext,ptr.struct_orxCLOCK_t,orxCLOCK_FUNCTION_520095132	proc getContext(internal_pstClock: ptr orxCLOCK_520095130;\n           internal_pfnCallback: orxCLOCK_FUNCTION_520095132): pointer		11659
nim	setContext	wrapper.html#setContext,ptr.struct_orxCLOCK_t,orxCLOCK_FUNCTION_520095132,pointer	proc setContext(internal_pstClock: ptr orxCLOCK_520095130;\n           internal_pfnCallback: orxCLOCK_FUNCTION_520095132;\n           internal_pContext: pointer): orxSTATUS_520095067		11666
nim	clockGet	wrapper.html#clockGet,cstring	proc clockGet(internal_zName: cstring): ptr orxCLOCK_520095130		11674
nim	addTimer	wrapper.html#addTimer,ptr.struct_orxCLOCK_t,orxCLOCK_FUNCTION_520095132,orxFLOAT_520095041,orxS32_520095033,pointer	proc addTimer(internal_pstClock: ptr orxCLOCK_520095130;\n         internal_pfnCallback: orxCLOCK_FUNCTION_520095132;\n         internal_fDelay: orxFLOAT_520095041;\n         internal_s32Repetition: orxS32_520095033; internal_pContext: pointer): orxSTATUS_520095067		11686
nim	removeTimer	wrapper.html#removeTimer,ptr.struct_orxCLOCK_t,orxCLOCK_FUNCTION_520095132,orxFLOAT_520095041,pointer	proc removeTimer(internal_pstClock: ptr orxCLOCK_520095130;\n            internal_pfnCallback: orxCLOCK_FUNCTION_520095132;\n            internal_fDelay: orxFLOAT_520095041; internal_pContext: pointer): orxSTATUS_520095067		11696
nim	addGlobalTimer	wrapper.html#addGlobalTimer,orxCLOCK_FUNCTION_520095132,orxFLOAT_520095041,orxS32_520095033,pointer	proc addGlobalTimer(internal_pfnCallback: orxCLOCK_FUNCTION_520095132;\n               internal_fDelay: orxFLOAT_520095041;\n               internal_s32Repetition: orxS32_520095033;\n               internal_pContext: pointer): orxSTATUS_520095067		11705
nim	removeGlobalTimer	wrapper.html#removeGlobalTimer,orxCLOCK_FUNCTION_520095132,orxFLOAT_520095041,pointer	proc removeGlobalTimer(internal_pfnCallback: orxCLOCK_FUNCTION_520095132;\n                  internal_fDelay: orxFLOAT_520095041;\n                  internal_pContext: pointer): orxSTATUS_520095067		11715
nim	orxLinkList_Clean	wrapper.html#orxLinkList_Clean,ptr.orxLINKLIST_520095140	proc orxLinkList_Clean(internal_pstList: ptr orxLINKLIST_520095140): orxSTATUS_520095067		11724
nim	orxLinkList_AddStart	wrapper.html#orxLinkList_AddStart,ptr.orxLINKLIST_520095140,ptr.orxLINKLIST_NODE_520095138	proc orxLinkList_AddStart(internal_pstList: ptr orxLINKLIST_520095140;\n                     internal_pstNode: ptr orxLINKLIST_NODE_520095138): orxSTATUS_520095067		11731
nim	orxLinkList_AddEnd	wrapper.html#orxLinkList_AddEnd,ptr.orxLINKLIST_520095140,ptr.orxLINKLIST_NODE_520095138	proc orxLinkList_AddEnd(internal_pstList: ptr orxLINKLIST_520095140;\n                   internal_pstNode: ptr orxLINKLIST_NODE_520095138): orxSTATUS_520095067		11739
nim	orxLinkList_AddBefore	wrapper.html#orxLinkList_AddBefore,ptr.orxLINKLIST_NODE_520095138,ptr.orxLINKLIST_NODE_520095138	proc orxLinkList_AddBefore(internal_pstRefNode: ptr orxLINKLIST_NODE_520095138;\n                      internal_pstNode: ptr orxLINKLIST_NODE_520095138): orxSTATUS_520095067		11747
nim	orxLinkList_AddAfter	wrapper.html#orxLinkList_AddAfter,ptr.orxLINKLIST_NODE_520095138,ptr.orxLINKLIST_NODE_520095138	proc orxLinkList_AddAfter(internal_pstRefNode: ptr orxLINKLIST_NODE_520095138;\n                     internal_pstNode: ptr orxLINKLIST_NODE_520095138): orxSTATUS_520095067		11755
nim	orxLinkList_Remove	wrapper.html#orxLinkList_Remove,ptr.orxLINKLIST_NODE_520095138	proc orxLinkList_Remove(internal_pstNode: ptr orxLINKLIST_NODE_520095138): orxSTATUS_520095067		11763
nim	clean	wrapper.html#clean,ptr.orxTREE_520095148	proc clean(internal_pstTree: ptr orxTREE_520095148): orxSTATUS_520095067		11770
nim	addRoot	wrapper.html#addRoot,ptr.orxTREE_520095148,ptr.orxTREE_NODE_520095146	proc addRoot(internal_pstTree: ptr orxTREE_520095148;\n        internal_pstNode: ptr orxTREE_NODE_520095146): orxSTATUS_520095067		11776
nim	addParent	wrapper.html#addParent,ptr.orxTREE_NODE_520095146,ptr.orxTREE_NODE_520095146	proc addParent(internal_pstRefNode: ptr orxTREE_NODE_520095146;\n          internal_pstNode: ptr orxTREE_NODE_520095146): orxSTATUS_520095067		11783
nim	addSibling	wrapper.html#addSibling,ptr.orxTREE_NODE_520095146,ptr.orxTREE_NODE_520095146	proc addSibling(internal_pstRefNode: ptr orxTREE_NODE_520095146;\n           internal_pstNode: ptr orxTREE_NODE_520095146): orxSTATUS_520095067		11790
nim	addChild	wrapper.html#addChild,ptr.orxTREE_NODE_520095146,ptr.orxTREE_NODE_520095146	proc addChild(internal_pstRefNode: ptr orxTREE_NODE_520095146;\n         internal_pstNode: ptr orxTREE_NODE_520095146): orxSTATUS_520095067		11797
nim	moveAsChild	wrapper.html#moveAsChild,ptr.orxTREE_NODE_520095146,ptr.orxTREE_NODE_520095146	proc moveAsChild(internal_pstRefNode: ptr orxTREE_NODE_520095146;\n            internal_pstNode: ptr orxTREE_NODE_520095146): orxSTATUS_520095067		11804
nim	remove	wrapper.html#remove,ptr.orxTREE_NODE_520095146	proc remove(internal_pstNode: ptr orxTREE_NODE_520095146): orxSTATUS_520095067		11811
nim	structureSetup	wrapper.html#structureSetup	proc structureSetup(): void		11817
nim	structureInit	wrapper.html#structureInit	proc structureInit(): orxSTATUS_520095067		11823
nim	structureExit	wrapper.html#structureExit	proc structureExit(): void		11830
nim	structureRegister	wrapper.html#structureRegister,orxSTRUCTURE_ID_520095152,orxSTRUCTURE_STORAGE_TYPE_520095156,orxMEMORY_TYPE_520095093,orxU32_520095025,orxU32_520095025,orxSTRUCTURE_UPDATE_FUNCTION_520095162	proc structureRegister(internal_eStructureID: orxSTRUCTURE_ID_520095152;\n                  internal_eStorageType: orxSTRUCTURE_STORAGE_TYPE_520095156;\n                  internal_eMemoryType: orxMEMORY_TYPE_520095093;\n                  internal_u32Size: orxU32_520095025;\n                  internal_u32BankSize: orxU32_520095025;\n                  internal_pfnUpdate: orxSTRUCTURE_UPDATE_FUNCTION_520095162): orxSTATUS_520095067		11836
nim	structureCreate	wrapper.html#structureCreate,orxSTRUCTURE_ID_520095152	proc structureCreate(internal_eStructureID: orxSTRUCTURE_ID_520095152): ptr orxSTRUCTURE_520095160		11854
nim	structureDelete	wrapper.html#structureDelete,pointer	proc structureDelete(internal_pStructure: pointer): orxSTATUS_520095067		11861
nim	getStorageType	wrapper.html#getStorageType,orxSTRUCTURE_ID_520095152	proc getStorageType(internal_eStructureID: orxSTRUCTURE_ID_520095152): orxSTRUCTURE_STORAGE_TYPE_520095156		11868
nim	getCount	wrapper.html#getCount,orxSTRUCTURE_ID_520095152	proc getCount(internal_eStructureID: orxSTRUCTURE_ID_520095152): orxU32_520095025		11875
nim	structureUpdate	wrapper.html#structureUpdate,pointer,pointer,ptr.orxCLOCK_INFO_520095124	proc structureUpdate(internal_pStructure: pointer; internal_phCaller: pointer;\n                internal_pstClockInfo: ptr orxCLOCK_INFO_520095124): orxSTATUS_520095067		11881
nim	structureGet	wrapper.html#structureGet,orxU64_520095023	proc structureGet(internal_u64GUID: orxU64_520095023): ptr orxSTRUCTURE_520095160		11890
nim	getOwner	wrapper.html#getOwner,pointer	proc getOwner(internal_pStructure: pointer): ptr orxSTRUCTURE_520095160		11896
nim	setOwner	wrapper.html#setOwner,pointer,pointer	proc setOwner(internal_pStructure: pointer; internal_pOwner: pointer): orxSTATUS_520095067		11902
nim	getFirst	wrapper.html#getFirst,orxSTRUCTURE_ID_520095152	proc getFirst(internal_eStructureID: orxSTRUCTURE_ID_520095152): ptr orxSTRUCTURE_520095160		11908
nim	getLast	wrapper.html#getLast,orxSTRUCTURE_ID_520095152	proc getLast(internal_eStructureID: orxSTRUCTURE_ID_520095152): ptr orxSTRUCTURE_520095160		11914
nim	getParent	wrapper.html#getParent,pointer	proc getParent(internal_pStructure: pointer): ptr orxSTRUCTURE_520095160		11920
nim	getChild	wrapper.html#getChild,pointer	proc getChild(internal_pStructure: pointer): ptr orxSTRUCTURE_520095160		11926
nim	getSibling	wrapper.html#getSibling,pointer	proc getSibling(internal_pStructure: pointer): ptr orxSTRUCTURE_520095160		11932
nim	getPrevious	wrapper.html#getPrevious,pointer	proc getPrevious(internal_pStructure: pointer): ptr orxSTRUCTURE_520095160		11938
nim	getNext	wrapper.html#getNext,pointer	proc getNext(internal_pStructure: pointer): ptr orxSTRUCTURE_520095160		11944
nim	setParent	wrapper.html#setParent,pointer,pointer	proc setParent(internal_pStructure: pointer; internal_phParent: pointer): orxSTATUS_520095067		11950
nim	logAll	wrapper.html#logAll,orxBOOL_520095039	proc logAll(internal_bPrivate: orxBOOL_520095039): orxSTATUS_520095067		11956
nim	animSetup	wrapper.html#animSetup	proc animSetup(): void		11962
nim	animInit	wrapper.html#animInit	proc animInit(): orxSTATUS_520095067		11967
nim	animExit	wrapper.html#animExit	proc animExit(): void		11972
nim	animCreate	wrapper.html#animCreate,orxU32_520095025,orxU32_520095025,orxU32_520095025	proc animCreate(internal_u32Flags: orxU32_520095025;\n           internal_u32KeyNumber: orxU32_520095025;\n           internal_u32EventNumber: orxU32_520095025): ptr orxANIM_520095164		11977
nim	animDelete	wrapper.html#animDelete,ptr.struct_orxANIM_t	proc animDelete(internal_pstAnim: ptr orxANIM_520095164): orxSTATUS_520095067		11985
nim	addKey	wrapper.html#addKey,ptr.struct_orxANIM_t,ptr.orxSTRUCTURE_520095160,orxFLOAT_520095041	proc addKey(internal_pstAnim: ptr orxANIM_520095164;\n       internal_pstData: ptr orxSTRUCTURE_520095160;\n       internal_fTimeStamp: orxFLOAT_520095041): orxSTATUS_520095067		11991
nim	removeLastKey	wrapper.html#removeLastKey,ptr.struct_orxANIM_t	proc removeLastKey(internal_pstAnim: ptr orxANIM_520095164): orxSTATUS_520095067		11999
nim	removeAllKeys	wrapper.html#removeAllKeys,ptr.struct_orxANIM_t	proc removeAllKeys(internal_pstAnim: ptr orxANIM_520095164): void		12006
nim	addEvent	wrapper.html#addEvent,ptr.struct_orxANIM_t,cstring,orxFLOAT_520095041,orxFLOAT_520095041	proc addEvent(internal_pstAnim: ptr orxANIM_520095164; internal_zEventName: cstring;\n         internal_fTimeStamp: orxFLOAT_520095041;\n         internal_fValue: orxFLOAT_520095041): orxSTATUS_520095067		12013
nim	removeLastEvent	wrapper.html#removeLastEvent,ptr.struct_orxANIM_t	proc removeLastEvent(internal_pstAnim: ptr orxANIM_520095164): orxSTATUS_520095067		12021
nim	removeAllEvents	wrapper.html#removeAllEvents,ptr.struct_orxANIM_t	proc removeAllEvents(internal_pstAnim: ptr orxANIM_520095164): void		12028
nim	getNextEvent	wrapper.html#getNextEvent,ptr.struct_orxANIM_t,ptr.orxANIM_CUSTOM_EVENT_520095176	proc getNextEvent(internal_pstAnim: ptr orxANIM_520095164;\n             internal_pstEvent: ptr orxANIM_CUSTOM_EVENT_520095176): ptr orxANIM_CUSTOM_EVENT_520095176		12035
nim	getEventAfter	wrapper.html#getEventAfter,ptr.struct_orxANIM_t,orxFLOAT_520095041	proc getEventAfter(internal_pstAnim: ptr orxANIM_520095164;\n              internal_fTimeStamp: orxFLOAT_520095041): ptr orxANIM_CUSTOM_EVENT_520095176		12042
nim	getKey	wrapper.html#getKey,ptr.struct_orxANIM_t,orxFLOAT_520095041	proc getKey(internal_pstAnim: ptr orxANIM_520095164;\n       internal_fTimeStamp: orxFLOAT_520095041): orxU32_520095025		12050
nim	getKeyData	wrapper.html#getKeyData,ptr.struct_orxANIM_t,orxU32_520095025	proc getKeyData(internal_pstAnim: ptr orxANIM_520095164;\n           internal_u32Index: orxU32_520095025): ptr orxSTRUCTURE_520095160		12057
nim	getKeyStorageSize	wrapper.html#getKeyStorageSize,ptr.struct_orxANIM_t	proc getKeyStorageSize(internal_pstAnim: ptr orxANIM_520095164): orxU32_520095025		12064
nim	getKeyCount	wrapper.html#getKeyCount,ptr.struct_orxANIM_t	proc getKeyCount(internal_pstAnim: ptr orxANIM_520095164): orxU32_520095025		12071
nim	getEventStorageSize	wrapper.html#getEventStorageSize,ptr.struct_orxANIM_t	proc getEventStorageSize(internal_pstAnim: ptr orxANIM_520095164): orxU32_520095025		12077
nim	getEventCount	wrapper.html#getEventCount,ptr.struct_orxANIM_t	proc getEventCount(internal_pstAnim: ptr orxANIM_520095164): orxU32_520095025		12084
nim	getLength	wrapper.html#getLength,ptr.struct_orxANIM_t	proc getLength(internal_pstAnim: ptr orxANIM_520095164): orxFLOAT_520095041		12091
nim	animSetSetup	wrapper.html#animSetSetup	proc animSetSetup(): void		12103
nim	animSetInit	wrapper.html#animSetInit	proc animSetInit(): orxSTATUS_520095067		12108
nim	animSetExit	wrapper.html#animSetExit	proc animSetExit(): void		12113
nim	animSetCreate	wrapper.html#animSetCreate,orxU32_520095025	proc animSetCreate(internal_u32Size: orxU32_520095025): ptr orxANIMSET_520095178		12118
nim	animSetCreateFromConfig	wrapper.html#animSetCreateFromConfig,cstring	proc animSetCreateFromConfig(internal_zConfigID: cstring): ptr orxANIMSET_520095178		12125
nim	animSetDelete	wrapper.html#animSetDelete,ptr.struct_orxANIMSET_t	proc animSetDelete(internal_pstAnimSet: ptr orxANIMSET_520095178): orxSTATUS_520095067		12132
nim	orxAnimSet_ClearCache	wrapper.html#orxAnimSet_ClearCache	proc orxAnimSet_ClearCache(): orxSTATUS_520095067		12139
nim	orxAnimSet_AddReference	wrapper.html#orxAnimSet_AddReference,ptr.struct_orxANIMSET_t	proc orxAnimSet_AddReference(internal_pstAnimSet: ptr orxANIMSET_520095178): void		12146
nim	orxAnimSet_RemoveReference	wrapper.html#orxAnimSet_RemoveReference,ptr.struct_orxANIMSET_t	proc orxAnimSet_RemoveReference(internal_pstAnimSet: ptr orxANIMSET_520095178): void		12153
nim	orxAnimSet_CloneLinkTable	wrapper.html#orxAnimSet_CloneLinkTable,ptr.struct_orxANIMSET_t	proc orxAnimSet_CloneLinkTable(internal_pstAnimSet: ptr orxANIMSET_520095178): ptr orxANIMSET_LINK_TABLE_520095180		12160
nim	orxAnimSet_DeleteLinkTable	wrapper.html#orxAnimSet_DeleteLinkTable,ptr.struct_orxANIMSET_LINK_TABLE_t	proc orxAnimSet_DeleteLinkTable(internal_pstLinkTable: ptr orxANIMSET_LINK_TABLE_520095180): void		12167
nim	orxAnimSet_AddAnim	wrapper.html#orxAnimSet_AddAnim,ptr.struct_orxANIMSET_t,ptr.struct_orxANIM_t	proc orxAnimSet_AddAnim(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                   internal_pstAnim: ptr orxANIM_520095164): orxU32_520095025		12174
nim	orxAnimSet_RemoveAnim	wrapper.html#orxAnimSet_RemoveAnim,ptr.struct_orxANIMSET_t,orxU32_520095025	proc orxAnimSet_RemoveAnim(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                      internal_u32AnimID: orxU32_520095025): orxSTATUS_520095067		12182
nim	orxAnimSet_RemoveAllAnims	wrapper.html#orxAnimSet_RemoveAllAnims,ptr.struct_orxANIMSET_t	proc orxAnimSet_RemoveAllAnims(internal_pstAnimSet: ptr orxANIMSET_520095178): orxSTATUS_520095067		12190
nim	orxAnimSet_AddLink	wrapper.html#orxAnimSet_AddLink,ptr.struct_orxANIMSET_t,orxU32_520095025,orxU32_520095025	proc orxAnimSet_AddLink(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                   internal_u32SrcAnim: orxU32_520095025;\n                   internal_u32DstAnim: orxU32_520095025): orxU32_520095025		12197
nim	orxAnimSet_RemoveLink	wrapper.html#orxAnimSet_RemoveLink,ptr.struct_orxANIMSET_t,orxU32_520095025	proc orxAnimSet_RemoveLink(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                      internal_u32LinkID: orxU32_520095025): orxSTATUS_520095067		12206
nim	orxAnimSet_GetLink	wrapper.html#orxAnimSet_GetLink,ptr.struct_orxANIMSET_t,orxU32_520095025,orxU32_520095025	proc orxAnimSet_GetLink(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                   internal_u32SrcAnim: orxU32_520095025;\n                   internal_u32DstAnim: orxU32_520095025): orxU32_520095025		12214
nim	orxAnimSet_SetLinkProperty	wrapper.html#orxAnimSet_SetLinkProperty,ptr.struct_orxANIMSET_t,orxU32_520095025,orxU32_520095025,orxU32_520095025	proc orxAnimSet_SetLinkProperty(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                           internal_u32LinkID: orxU32_520095025;\n                           internal_u32Property: orxU32_520095025;\n                           internal_u32Value: orxU32_520095025): orxSTATUS_520095067		12223
nim	orxAnimSet_GetLinkProperty	wrapper.html#orxAnimSet_GetLinkProperty,ptr.struct_orxANIMSET_t,orxU32_520095025,orxU32_520095025	proc orxAnimSet_GetLinkProperty(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                           internal_u32LinkID: orxU32_520095025;\n                           internal_u32Property: orxU32_520095025): orxU32_520095025		12233
nim	orxAnimSet_ComputeAnim	wrapper.html#orxAnimSet_ComputeAnim,ptr.struct_orxANIMSET_t,orxU32_520095025,orxU32_520095025,ptr.orxFLOAT_520095041,ptr.struct_orxANIMSET_LINK_TABLE_t,ptr.orxBOOL_520095039,ptr.orxBOOL_520095039	proc orxAnimSet_ComputeAnim(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                       internal_u32SrcAnim: orxU32_520095025;\n                       internal_u32DstAnim: orxU32_520095025;\n                       internal_pfTime: ptr orxFLOAT_520095041;\n    internal_pstLinkTable: ptr orxANIMSET_LINK_TABLE_520095180;\n                       internal_pbCut: ptr orxBOOL_520095039;\n                       internal_pbClearTarget: ptr orxBOOL_520095039): orxU32_520095025		12242
nim	orxAnimSet_FindNextAnim	wrapper.html#orxAnimSet_FindNextAnim,ptr.struct_orxANIMSET_t,orxU32_520095025,orxU32_520095025	proc orxAnimSet_FindNextAnim(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                        internal_u32SrcAnim: orxU32_520095025;\n                        internal_u32DstAnim: orxU32_520095025): orxU32_520095025		12255
nim	orxAnimSet_GetAnim	wrapper.html#orxAnimSet_GetAnim,ptr.struct_orxANIMSET_t,orxU32_520095025	proc orxAnimSet_GetAnim(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                   internal_u32AnimID: orxU32_520095025): ptr orxANIM_520095164		12264
nim	orxAnimSet_GetAnimStorageSize	wrapper.html#orxAnimSet_GetAnimStorageSize,ptr.struct_orxANIMSET_t	proc orxAnimSet_GetAnimStorageSize(internal_pstAnimSet: ptr orxANIMSET_520095178): orxU32_520095025		12272
nim	orxAnimSet_GetAnimCount	wrapper.html#orxAnimSet_GetAnimCount,ptr.struct_orxANIMSET_t	proc orxAnimSet_GetAnimCount(internal_pstAnimSet: ptr orxANIMSET_520095178): orxU32_520095025		12279
nim	orxAnimSet_GetAnimIDFromName	wrapper.html#orxAnimSet_GetAnimIDFromName,ptr.struct_orxANIMSET_t,cstring	proc orxAnimSet_GetAnimIDFromName(internal_pstAnimSet: ptr orxANIMSET_520095178;\n                             internal_zAnimName: cstring): orxU32_520095025		12286
nim	orxAnimSet_GetName	wrapper.html#orxAnimSet_GetName,ptr.struct_orxANIMSET_t	proc orxAnimSet_GetName(internal_pstAnimSet: ptr orxANIMSET_520095178): cstring		12294
nim	animPointerSetup	wrapper.html#animPointerSetup	proc animPointerSetup(): void		12301
nim	animPointerInit	wrapper.html#animPointerInit	proc animPointerInit(): orxSTATUS_520095067		12307
nim	animPointerExit	wrapper.html#animPointerExit	proc animPointerExit(): void		12314
nim	animPointerCreate	wrapper.html#animPointerCreate,ptr.struct_orxANIMSET_t	proc animPointerCreate(internal_pstAnimSet: ptr orxANIMSET_520095178): ptr orxANIMPOINTER_520095182		12320
nim	animPointerCreateFromConfig	wrapper.html#animPointerCreateFromConfig,cstring	proc animPointerCreateFromConfig(internal_zConfigID: cstring): ptr orxANIMPOINTER_520095182		12327
nim	animPointerDelete	wrapper.html#animPointerDelete,ptr.struct_orxANIMPOINTER_t	proc animPointerDelete(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): orxSTATUS_520095067		12334
nim	orxAnimPointer_GetAnimSet	wrapper.html#orxAnimPointer_GetAnimSet,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetAnimSet(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): ptr orxANIMSET_520095178		12341
nim	orxAnimPointer_GetCurrentAnim	wrapper.html#orxAnimPointer_GetCurrentAnim,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetCurrentAnim(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): orxU32_520095025		12348
nim	orxAnimPointer_GetTargetAnim	wrapper.html#orxAnimPointer_GetTargetAnim,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetTargetAnim(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): orxU32_520095025		12355
nim	orxAnimPointer_GetCurrentAnimName	wrapper.html#orxAnimPointer_GetCurrentAnimName,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetCurrentAnimName(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): cstring		12362
nim	orxAnimPointer_GetTargetAnimName	wrapper.html#orxAnimPointer_GetTargetAnimName,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetTargetAnimName(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): cstring		12370
nim	orxAnimPointer_GetCurrentAnimData	wrapper.html#orxAnimPointer_GetCurrentAnimData,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetCurrentAnimData(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): ptr orxSTRUCTURE_520095160		12378
nim	orxAnimPointer_GetTime	wrapper.html#orxAnimPointer_GetTime,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetTime(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): orxFLOAT_520095041		12386
nim	orxAnimPointer_GetFrequency	wrapper.html#orxAnimPointer_GetFrequency,ptr.struct_orxANIMPOINTER_t	proc orxAnimPointer_GetFrequency(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182): orxFLOAT_520095041		12393
nim	orxAnimPointer_SetCurrentAnim	wrapper.html#orxAnimPointer_SetCurrentAnim,ptr.struct_orxANIMPOINTER_t,orxU32_520095025	proc orxAnimPointer_SetCurrentAnim(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182;\n                              internal_u32AnimID: orxU32_520095025): orxSTATUS_520095067		12400
nim	orxAnimPointer_SetTargetAnim	wrapper.html#orxAnimPointer_SetTargetAnim,ptr.struct_orxANIMPOINTER_t,orxU32_520095025	proc orxAnimPointer_SetTargetAnim(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182;\n                             internal_u32AnimID: orxU32_520095025): orxSTATUS_520095067		12408
nim	orxAnimPointer_SetCurrentAnimFromName	wrapper.html#orxAnimPointer_SetCurrentAnimFromName,ptr.struct_orxANIMPOINTER_t,cstring	proc orxAnimPointer_SetCurrentAnimFromName(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182;\n                                      internal_zAnimName: cstring): orxSTATUS_520095067		12416
nim	orxAnimPointer_SetTargetAnimFromName	wrapper.html#orxAnimPointer_SetTargetAnimFromName,ptr.struct_orxANIMPOINTER_t,cstring	proc orxAnimPointer_SetTargetAnimFromName(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182;\n                                     internal_zAnimName: cstring): orxSTATUS_520095067		12425
nim	orxAnimPointer_SetTime	wrapper.html#orxAnimPointer_SetTime,ptr.struct_orxANIMPOINTER_t,orxFLOAT_520095041	proc orxAnimPointer_SetTime(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182;\n                       internal_fTime: orxFLOAT_520095041): orxSTATUS_520095067		12434
nim	orxAnimPointer_SetFrequency	wrapper.html#orxAnimPointer_SetFrequency,ptr.struct_orxANIMPOINTER_t,orxFLOAT_520095041	proc orxAnimPointer_SetFrequency(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182;\n                            internal_fFrequency: orxFLOAT_520095041): orxSTATUS_520095067		12442
nim	orxAnimPointer_Pause	wrapper.html#orxAnimPointer_Pause,ptr.struct_orxANIMPOINTER_t,orxBOOL_520095039	proc orxAnimPointer_Pause(internal_pstAnimPointer: ptr orxANIMPOINTER_520095182;\n                     internal_bPause: orxBOOL_520095039): orxSTATUS_520095067		12450
nim	commandSetup	wrapper.html#commandSetup	proc commandSetup(): void		12458
nim	commandInit	wrapper.html#commandInit	proc commandInit(): orxSTATUS_520095067		12463
nim	commandExit	wrapper.html#commandExit	proc commandExit(): void		12468
nim	commandRegister	wrapper.html#commandRegister,cstring,orxCOMMAND_FUNCTION_520095196,orxU32_520095025,orxU32_520095025,ptr.orxCOMMAND_VAR_DEF_520095190,ptr.orxCOMMAND_VAR_DEF_520095190	proc commandRegister(internal_zCommand: cstring;\n                internal_pfnFunction: orxCOMMAND_FUNCTION_520095196;\n                internal_u32RequiredParamNumber: orxU32_520095025;\n                internal_u32OptionalParamNumber: orxU32_520095025;\n                internal_astParamList: ptr orxCOMMAND_VAR_DEF_520095190;\n                internal_pstResult: ptr orxCOMMAND_VAR_DEF_520095190): orxSTATUS_520095067		12473
nim	isRegistered	wrapper.html#isRegistered,cstring	proc isRegistered(internal_zCommand: cstring): orxBOOL_520095039		12491
nim	addAlias	wrapper.html#addAlias,cstring,cstring,cstring	proc addAlias(internal_zAlias: cstring; internal_zCommand: cstring;\n         internal_zArgs: cstring): orxSTATUS_520095067		12497
nim	removeAlias	wrapper.html#removeAlias,cstring	proc removeAlias(internal_zAlias: cstring): orxSTATUS_520095067		12504
nim	isAlias	wrapper.html#isAlias,cstring	proc isAlias(internal_zAlias: cstring): orxBOOL_520095039		12510
nim	getPrototype	wrapper.html#getPrototype,cstring	proc getPrototype(internal_zCommand: cstring): cstring		12516
nim	evaluate	wrapper.html#evaluate,cstring,ptr.orxCOMMAND_VAR_520095194	proc evaluate(internal_zCommandLine: cstring;\n         internal_pstResult: ptr orxCOMMAND_VAR_520095194): ptr orxCOMMAND_VAR_520095194		12529
nim	evaluateWithGUID	wrapper.html#evaluateWithGUID,cstring,orxU64_520095023,ptr.orxCOMMAND_VAR_520095194	proc evaluateWithGUID(internal_zCommandLine: cstring;\n                 internal_u64GUID: orxU64_520095023;\n                 internal_pstResult: ptr orxCOMMAND_VAR_520095194): ptr orxCOMMAND_VAR_520095194		12536
nim	execute	wrapper.html#execute,cstring,orxU32_520095025,ptr.orxCOMMAND_VAR_520095194,ptr.orxCOMMAND_VAR_520095194	proc execute(internal_zCommand: cstring; internal_u32ArgNumber: orxU32_520095025;\n        internal_astArgList: ptr orxCOMMAND_VAR_520095194;\n        internal_pstResult: ptr orxCOMMAND_VAR_520095194): ptr orxCOMMAND_VAR_520095194		12545
nim	parseNumericalArguments	wrapper.html#parseNumericalArguments,orxU32_520095025,ptr.orxCOMMAND_VAR_520095194,ptr.orxCOMMAND_VAR_520095194	proc parseNumericalArguments(internal_u32ArgNumber: orxU32_520095025;\n                        internal_astArgList: ptr orxCOMMAND_VAR_520095194;\n                        internal_astOperandList: ptr orxCOMMAND_VAR_520095194): orxSTATUS_520095067		12553
nim	printVar	wrapper.html#printVar,cstring,orxU32_520095025,ptr.orxCOMMAND_VAR_520095194	proc printVar(internal_zDstString: cstring; internal_u32Size: orxU32_520095025;\n         internal_pstVar: ptr orxCOMMAND_VAR_520095194): orxU32_520095025		12562
nim	configSetup	wrapper.html#configSetup	proc configSetup(): void		12569
nim	configInit	wrapper.html#configInit	proc configInit(): orxSTATUS_520095067		12574
nim	configExit	wrapper.html#configExit	proc configExit(): void		12579
nim	enableTypoCheck	wrapper.html#enableTypoCheck,orxBOOL_520095039	proc enableTypoCheck(internal_bEnable: orxBOOL_520095039): void		12584
nim	isTypoCheckEnabled	wrapper.html#isTypoCheckEnabled	proc isTypoCheckEnabled(): orxBOOL_520095039		12591
nim	setEncryptionKey	wrapper.html#setEncryptionKey,cstring	proc setEncryptionKey(internal_zEncryptionKey: cstring): orxSTATUS_520095067		12598
nim	getEncryptionKey	wrapper.html#getEncryptionKey	proc getEncryptionKey(): cstring		12605
nim	setBootstrap	wrapper.html#setBootstrap,orxCONFIG_BOOTSTRAP_FUNCTION_520095206	proc setBootstrap(internal_pfnBootstrap: orxCONFIG_BOOTSTRAP_FUNCTION_520095206): orxSTATUS_520095067		12612
nim	setBaseName	wrapper.html#setBaseName,cstring	proc setBaseName(internal_zBaseName: cstring): orxSTATUS_520095067		12618
nim	getMainFileName	wrapper.html#getMainFileName	proc getMainFileName(): cstring		12624
nim	load	wrapper.html#load,cstring	proc load(internal_zFileName: cstring): orxSTATUS_520095067		12630
nim	loadFromMemory	wrapper.html#loadFromMemory,cstring,orxU32_520095025	proc loadFromMemory(internal_acBuffer: cstring;\n               internal_u32BufferSize: orxU32_520095025): orxSTATUS_520095067		12636
nim	reloadHistory	wrapper.html#reloadHistory	proc reloadHistory(): orxSTATUS_520095067		12644
nim	save	wrapper.html#save,cstring,orxBOOL_520095039,orxCONFIG_SAVE_FUNCTION_520095202	proc save(internal_zFileName: cstring; internal_bUseEncryption: orxBOOL_520095039;\n     internal_pfnSaveCallback: orxCONFIG_SAVE_FUNCTION_520095202): orxSTATUS_520095067		12651
nim	copyFile	wrapper.html#copyFile,cstring,cstring,cstring	proc copyFile(internal_zDstFileName: cstring; internal_zSrcFileName: cstring;\n         internal_zEncryptionKey: cstring): orxSTATUS_520095067		12658
nim	mergeFiles	wrapper.html#mergeFiles,cstring,ptr.cstring,orxU32_520095025,cstring	proc mergeFiles(internal_zDstFileName: cstring; internal_azSrcFileName: ptr cstring;\n           internal_u32Number: orxU32_520095025;\n           internal_zEncryptionKey: cstring): orxSTATUS_520095067		12665
nim	selectSection	wrapper.html#selectSection,cstring	proc selectSection(internal_zSectionName: cstring): orxSTATUS_520095067		12674
nim	renameSection	wrapper.html#renameSection,cstring,cstring	proc renameSection(internal_zSectionName: cstring; internal_zNewSectionName: cstring): orxSTATUS_520095067		12681
nim	getOrigin	wrapper.html#getOrigin,cstring	proc getOrigin(internal_zSectionName: cstring): cstring		12689
nim	getOriginID	wrapper.html#getOriginID,cstring	proc getOriginID(internal_zSectionName: cstring): orxSTRINGID_520095047		12695
nim	setDefaultParent	wrapper.html#setDefaultParent,cstring	proc setDefaultParent(internal_zSectionName: cstring): orxSTATUS_520095067		12713
nim	getDefaultParent	wrapper.html#getDefaultParent	proc getDefaultParent(): cstring		12720
nim	getCurrentSection	wrapper.html#getCurrentSection	proc getCurrentSection(): cstring		12727
nim	pushSection	wrapper.html#pushSection,cstring	proc pushSection(internal_zSectionName: cstring): orxSTATUS_520095067		12734
nim	popSection	wrapper.html#popSection	proc popSection(): orxSTATUS_520095067		12740
nim	hasSection	wrapper.html#hasSection,cstring	proc hasSection(internal_zSectionName: cstring): orxBOOL_520095039		12746
nim	protectSection	wrapper.html#protectSection,cstring,orxBOOL_520095039	proc protectSection(internal_zSectionName: cstring;\n               internal_bProtect: orxBOOL_520095039): orxSTATUS_520095067		12752
nim	getSectionCount	wrapper.html#getSectionCount	proc getSectionCount(): orxU32_520095025		12760
nim	getSection	wrapper.html#getSection,orxU32_520095025	proc getSection(internal_u32SectionIndex: orxU32_520095025): cstring		12767
nim	clear	wrapper.html#clear,orxCONFIG_CLEAR_FUNCTION_520095204	proc clear(internal_pfnClearCallback: orxCONFIG_CLEAR_FUNCTION_520095204): orxSTATUS_520095067		12773
nim	clearSection	wrapper.html#clearSection,cstring	proc clearSection(internal_zSectionName: cstring): orxSTATUS_520095067		12779
nim	clearValue	wrapper.html#clearValue,cstring	proc clearValue(internal_zKey: cstring): orxSTATUS_520095067		12785
nim	isLocallyInheritedValue	wrapper.html#isLocallyInheritedValue,cstring	proc isLocallyInheritedValue(internal_zKey: cstring): orxBOOL_520095039		12791
nim	isInheritedValue	wrapper.html#isInheritedValue,cstring	proc isInheritedValue(internal_zKey: cstring): orxBOOL_520095039		12798
nim	isRandomValue	wrapper.html#isRandomValue,cstring	proc isRandomValue(internal_zKey: cstring): orxBOOL_520095039		12805
nim	isDynamicValue	wrapper.html#isDynamicValue,cstring	proc isDynamicValue(internal_zKey: cstring): orxBOOL_520095039		12812
nim	isCommandValue	wrapper.html#isCommandValue,cstring	proc isCommandValue(internal_zKey: cstring): orxBOOL_520095039		12819
nim	hasValue	wrapper.html#hasValue,cstring	proc hasValue(internal_zKey: cstring): orxBOOL_520095039		12826
nim	hasValueNoCheck	wrapper.html#hasValueNoCheck,cstring	proc hasValueNoCheck(internal_zKey: cstring): orxBOOL_520095039		12832
nim	getValueSource	wrapper.html#getValueSource,cstring	proc getValueSource(internal_zKey: cstring): cstring		12839
nim	getS32	wrapper.html#getS32,cstring	proc getS32(internal_zKey: cstring): orxS32_520095033		12846
nim	getU32	wrapper.html#getU32,cstring	proc getU32(internal_zKey: cstring): orxU32_520095025		12852
nim	getS64	wrapper.html#getS64,cstring	proc getS64(internal_zKey: cstring): orxS64_520095031		12858
nim	getU64	wrapper.html#getU64,cstring	proc getU64(internal_zKey: cstring): orxU64_520095023		12864
nim	getFloat	wrapper.html#getFloat,cstring	proc getFloat(internal_zKey: cstring): orxFLOAT_520095041		12870
nim	getString	wrapper.html#getString,cstring	proc getString(internal_zKey: cstring): cstring		12876
nim	getBool	wrapper.html#getBool,cstring	proc getBool(internal_zKey: cstring): orxBOOL_520095039		12882
nim	getVector	wrapper.html#getVector,cstring,ptr.orxVECTOR_520095097	proc getVector(internal_zKey: cstring; internal_pvVector: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		12888
nim	getColorVector	wrapper.html#getColorVector,cstring,orxCOLORSPACE_520095063,ptr.orxVECTOR_520095097	proc getColorVector(internal_zKey: cstring;\n               internal_eColorSpace: orxCOLORSPACE_520095063;\n               internal_pvVector: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		12894
nim	duplicateRawValue	wrapper.html#duplicateRawValue,cstring	proc duplicateRawValue(internal_zKey: cstring): cstring		12903
nim	setS32	wrapper.html#setS32,cstring,orxS32_520095033	proc setS32(internal_zKey: cstring; internal_s32Value: orxS32_520095033): orxSTATUS_520095067		12910
nim	setU32	wrapper.html#setU32,cstring,orxU32_520095025	proc setU32(internal_zKey: cstring; internal_u32Value: orxU32_520095025): orxSTATUS_520095067		12916
nim	setS64	wrapper.html#setS64,cstring,orxS64_520095031	proc setS64(internal_zKey: cstring; internal_s64Value: orxS64_520095031): orxSTATUS_520095067		12922
nim	setU64	wrapper.html#setU64,cstring,orxU64_520095023	proc setU64(internal_zKey: cstring; internal_u64Value: orxU64_520095023): orxSTATUS_520095067		12928
nim	setFloat	wrapper.html#setFloat,cstring,orxFLOAT_520095041	proc setFloat(internal_zKey: cstring; internal_fValue: orxFLOAT_520095041): orxSTATUS_520095067		12934
nim	setString	wrapper.html#setString,cstring,cstring	proc setString(internal_zKey: cstring; internal_zValue: cstring): orxSTATUS_520095067		12940
nim	setStringBlock	wrapper.html#setStringBlock,cstring,cstring	proc setStringBlock(internal_zKey: cstring; internal_zValue: cstring): orxSTATUS_520095067		12946
nim	setBool	wrapper.html#setBool,cstring,orxBOOL_520095039	proc setBool(internal_zKey: cstring; internal_bValue: orxBOOL_520095039): orxSTATUS_520095067		12953
nim	setVector	wrapper.html#setVector,cstring,ptr.orxVECTOR_520095097	proc setVector(internal_zKey: cstring; internal_pvValue: ptr orxVECTOR_520095097): orxSTATUS_520095067		12959
nim	isList	wrapper.html#isList,cstring	proc isList(internal_zKey: cstring): orxBOOL_520095039		12965
nim	getListCount	wrapper.html#getListCount,cstring	proc getListCount(internal_zKey: cstring): orxS32_520095033		12971
nim	getListS32	wrapper.html#getListS32,cstring,orxS32_520095033	proc getListS32(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033): orxS32_520095033		12977
nim	getListU32	wrapper.html#getListU32,cstring,orxS32_520095033	proc getListU32(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033): orxU32_520095025		12983
nim	getListS64	wrapper.html#getListS64,cstring,orxS32_520095033	proc getListS64(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033): orxS64_520095031		12989
nim	getListU64	wrapper.html#getListU64,cstring,orxS32_520095033	proc getListU64(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033): orxU64_520095023		12995
nim	getListFloat	wrapper.html#getListFloat,cstring,orxS32_520095033	proc getListFloat(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033): orxFLOAT_520095041		13001
nim	getListString	wrapper.html#getListString,cstring,orxS32_520095033	proc getListString(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033): cstring		13007
nim	getListBool	wrapper.html#getListBool,cstring,orxS32_520095033	proc getListBool(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033): orxBOOL_520095039		13014
nim	getListVector	wrapper.html#getListVector,cstring,orxS32_520095033,ptr.orxVECTOR_520095097	proc getListVector(internal_zKey: cstring; internal_s32ListIndex: orxS32_520095033;\n              internal_pvVector: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		13020
nim	getListColorVector	wrapper.html#getListColorVector,cstring,orxS32_520095033,orxCOLORSPACE_520095063,ptr.orxVECTOR_520095097	proc getListColorVector(internal_zKey: cstring;\n                   internal_s32ListIndex: orxS32_520095033;\n                   internal_eColorSpace: orxCOLORSPACE_520095063;\n                   internal_pvVector: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		13028
nim	setListString	wrapper.html#setListString,cstring,ptr.UncheckedArray[cstring],orxU32_520095025	proc setListString(internal_zKey: cstring;\n              internal_azValue: ptr UncheckedArray[cstring];\n              internal_u32Number: orxU32_520095025): orxSTATUS_520095067		13038
nim	appendListString	wrapper.html#appendListString,cstring,ptr.UncheckedArray[cstring],orxU32_520095025	proc appendListString(internal_zKey: cstring;\n                 internal_azValue: ptr UncheckedArray[cstring];\n                 internal_u32Number: orxU32_520095025): orxSTATUS_520095067		13047
nim	internal_registerFunction_DISPLAY	wrapper.html#internal_registerFunction_DISPLAY	proc internal_registerFunction_DISPLAY(): void		13068
nim	internal_registerFunction_JOYSTICK	wrapper.html#internal_registerFunction_JOYSTICK	proc internal_registerFunction_JOYSTICK(): void		13075
nim	internal_registerFunction_KEYBOARD	wrapper.html#internal_registerFunction_KEYBOARD	proc internal_registerFunction_KEYBOARD(): void		13082
nim	internal_registerFunction_MOUSE	wrapper.html#internal_registerFunction_MOUSE	proc internal_registerFunction_MOUSE(): void		13089
nim	internal_registerFunction_PHYSICS	wrapper.html#internal_registerFunction_PHYSICS	proc internal_registerFunction_PHYSICS(): void		13096
nim	internal_registerFunction_RENDER	wrapper.html#internal_registerFunction_RENDER	proc internal_registerFunction_RENDER(): void		13103
nim	internal_registerFunction_SOUNDSYSTEM	wrapper.html#internal_registerFunction_SOUNDSYSTEM	proc internal_registerFunction_SOUNDSYSTEM(): void		13110
nim	addCoreInfo	wrapper.html#addCoreInfo,orxPLUGIN_CORE_ID_520095216,orxMODULE_ID_520095075,ptr.orxPLUGIN_CORE_FUNCTION_520095248,orxU32_520095025	proc addCoreInfo(internal_ePluginCoreID: orxPLUGIN_CORE_ID_520095216;\n            internal_eModuleID: orxMODULE_ID_520095075;\n            internal_astCoreFunction: ptr orxPLUGIN_CORE_FUNCTION_520095248;\n            internal_u32CoreFunctionNumber: orxU32_520095025): void		13117
nim	defaultCoreFunction	wrapper.html#defaultCoreFunction,cstring,cstring,orxU32_520095025	proc defaultCoreFunction(internal_zFunctionName: cstring;\n                    internal_zFileName: cstring;\n                    internal_u32Line: orxU32_520095025): pointer		13126
nim	bankSetup	wrapper.html#bankSetup	proc bankSetup(): void		13135
nim	bankInit	wrapper.html#bankInit	proc bankInit(): orxSTATUS_520095067		13140
nim	bankExit	wrapper.html#bankExit	proc bankExit(): void		13145
nim	bankCreate	wrapper.html#bankCreate,orxU32_520095025,orxU32_520095025,orxU32_520095025,orxMEMORY_TYPE_520095093	proc bankCreate(internal_u32Count: orxU32_520095025;\n           internal_u32Size: orxU32_520095025;\n           internal_u32Flags: orxU32_520095025;\n           internal_eMemType: orxMEMORY_TYPE_520095093): ptr orxBANK_520095260		13150
nim	bankDelete	wrapper.html#bankDelete,ptr.struct_orxBANK_t	proc bankDelete(internal_pstBank: ptr orxBANK_520095260): void		13159
nim	allocateIndexed	wrapper.html#allocateIndexed,ptr.struct_orxBANK_t,ptr.orxU32_520095025,ptr.pointer	proc allocateIndexed(internal_pstBank: ptr orxBANK_520095260;\n                internal_pu32ItemIndex: ptr orxU32_520095025;\n                internal_ppPrevious: ptr pointer): pointer		13171
nim	freeAtIndex	wrapper.html#freeAtIndex,ptr.struct_orxBANK_t,orxU32_520095025	proc freeAtIndex(internal_pstBank: ptr orxBANK_520095260;\n            internal_u32Index: orxU32_520095025): void		13186
nim	compact	wrapper.html#compact,ptr.struct_orxBANK_t	proc compact(internal_pstBank: ptr orxBANK_520095260): void		13199
nim	compactAll	wrapper.html#compactAll	proc compactAll(): void		13205
nim	getIndex	wrapper.html#getIndex,ptr.struct_orxBANK_t,pointer	proc getIndex(internal_pstBank: ptr orxBANK_520095260; internal_pCell: pointer): orxU32_520095025		13216
nim	getAtIndex	wrapper.html#getAtIndex,ptr.struct_orxBANK_t,orxU32_520095025	proc getAtIndex(internal_pstBank: ptr orxBANK_520095260;\n           internal_u32Index: orxU32_520095025): pointer		13223
nim	hashTableCreate	wrapper.html#hashTableCreate,orxU32_520095025,orxU32_520095025,orxMEMORY_TYPE_520095093	proc hashTableCreate(internal_u32NbKey: orxU32_520095025;\n                internal_u32Flags: orxU32_520095025;\n                internal_eMemType: orxMEMORY_TYPE_520095093): ptr orxHASHTABLE_520095262		13236
nim	hashTableDelete	wrapper.html#hashTableDelete,ptr.struct_orxHASHTABLE_t	proc hashTableDelete(internal_pstHashTable: ptr orxHASHTABLE_520095262): orxSTATUS_520095067		13245
nim	orxHashTable_Clear	wrapper.html#orxHashTable_Clear,ptr.struct_orxHASHTABLE_t	proc orxHashTable_Clear(internal_pstHashTable: ptr orxHASHTABLE_520095262): orxSTATUS_520095067		13252
nim	orxHashTable_GetCount	wrapper.html#orxHashTable_GetCount,ptr.struct_orxHASHTABLE_t	proc orxHashTable_GetCount(internal_pstHashTable: ptr orxHASHTABLE_520095262): orxU32_520095025		13259
nim	hashTableGet	wrapper.html#hashTableGet,ptr.struct_orxHASHTABLE_t,orxU64_520095023	proc hashTableGet(internal_pstHashTable: ptr orxHASHTABLE_520095262;\n             internal_u64Key: orxU64_520095023): pointer		13266
nim	orxHashTable_Retrieve	wrapper.html#orxHashTable_Retrieve,ptr.struct_orxHASHTABLE_t,orxU64_520095023	proc orxHashTable_Retrieve(internal_pstHashTable: ptr orxHASHTABLE_520095262;\n                      internal_u64Key: orxU64_520095023): ptr pointer		13273
nim	orxHashTable_Set	wrapper.html#orxHashTable_Set,ptr.struct_orxHASHTABLE_t,orxU64_520095023,pointer	proc orxHashTable_Set(internal_pstHashTable: ptr orxHASHTABLE_520095262;\n                 internal_u64Key: orxU64_520095023; internal_pData: pointer): orxSTATUS_520095067		13281
nim	orxHashTable_Add	wrapper.html#orxHashTable_Add,ptr.struct_orxHASHTABLE_t,orxU64_520095023,pointer	proc orxHashTable_Add(internal_pstHashTable: ptr orxHASHTABLE_520095262;\n                 internal_u64Key: orxU64_520095023; internal_pData: pointer): orxSTATUS_520095067		13290
nim	orxHashTable_Remove	wrapper.html#orxHashTable_Remove,ptr.struct_orxHASHTABLE_t,orxU64_520095023	proc orxHashTable_Remove(internal_pstHashTable: ptr orxHASHTABLE_520095262;\n                    internal_u64Key: orxU64_520095023): orxSTATUS_520095067		13299
nim	orxHashTable_GetNext	wrapper.html#orxHashTable_GetNext,ptr.struct_orxHASHTABLE_t,orxHANDLE_520095051,ptr.orxU64_520095023,ptr.pointer	proc orxHashTable_GetNext(internal_pstHashTable: ptr orxHASHTABLE_520095262;\n                     internal_hIterator: orxHANDLE_520095051;\n                     internal_pu64Key: ptr orxU64_520095023;\n                     internal_ppData: ptr pointer): orxHANDLE_520095051		13307
nim	orxHashTable_Optimize	wrapper.html#orxHashTable_Optimize,ptr.struct_orxHASHTABLE_t	proc orxHashTable_Optimize(internal_pstHashTable: ptr orxHASHTABLE_520095262): orxSTATUS_520095067		13317
nim	displaySetup	wrapper.html#displaySetup	proc displaySetup(): void		13324
nim	orxColor_FromRGBToHSL	wrapper.html#orxColor_FromRGBToHSL,ptr.orxCOLOR_520095308,ptr.orxCOLOR_520095308	proc orxColor_FromRGBToHSL(internal_pstDst: ptr orxCOLOR_520095308;\n                      internal_pstSrc: ptr orxCOLOR_520095308): ptr orxCOLOR_520095308		13329
nim	orxColor_FromHSLToRGB	wrapper.html#orxColor_FromHSLToRGB,ptr.orxCOLOR_520095308,ptr.orxCOLOR_520095308	proc orxColor_FromHSLToRGB(internal_pstDst: ptr orxCOLOR_520095308;\n                      internal_pstSrc: ptr orxCOLOR_520095308): ptr orxCOLOR_520095308		13337
nim	orxColor_FromRGBToHSV	wrapper.html#orxColor_FromRGBToHSV,ptr.orxCOLOR_520095308,ptr.orxCOLOR_520095308	proc orxColor_FromRGBToHSV(internal_pstDst: ptr orxCOLOR_520095308;\n                      internal_pstSrc: ptr orxCOLOR_520095308): ptr orxCOLOR_520095308		13345
nim	orxColor_FromHSVToRGB	wrapper.html#orxColor_FromHSVToRGB,ptr.orxCOLOR_520095308,ptr.orxCOLOR_520095308	proc orxColor_FromHSVToRGB(internal_pstDst: ptr orxCOLOR_520095308;\n                      internal_pstSrc: ptr orxCOLOR_520095308): ptr orxCOLOR_520095308		13353
nim	getBlendModeFromString	wrapper.html#getBlendModeFromString,cstring	proc getBlendModeFromString(internal_zBlendMode: cstring): orxDISPLAY_BLEND_MODE_520095304		13361
nim	displayInit	wrapper.html#displayInit	proc displayInit(): orxSTATUS_520095067		13368
nim	displayExit	wrapper.html#displayExit	proc displayExit(): void		13373
nim	getScreenBitmap	wrapper.html#getScreenBitmap	proc getScreenBitmap(): ptr orxBITMAP_520095268		13383
nim	getScreenSize	wrapper.html#getScreenSize,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041	proc getScreenSize(internal_pfWidth: ptr orxFLOAT_520095041;\n              internal_pfHeight: ptr orxFLOAT_520095041): orxSTATUS_520095067		13390
nim	createBitmap	wrapper.html#createBitmap,orxU32_520095025,orxU32_520095025	proc createBitmap(internal_u32Width: orxU32_520095025;\n             internal_u32Height: orxU32_520095025): ptr orxBITMAP_520095268		13398
nim	deleteBitmap	wrapper.html#deleteBitmap,ptr.struct_orxBITMAP_t	proc deleteBitmap(internal_pstBitmap: ptr orxBITMAP_520095268): void		13405
nim	loadBitmap	wrapper.html#loadBitmap,cstring	proc loadBitmap(internal_zFileName: cstring): ptr orxBITMAP_520095268		13411
nim	saveBitmap	wrapper.html#saveBitmap,ptr.struct_orxBITMAP_t,cstring	proc saveBitmap(internal_pstBitmap: ptr orxBITMAP_520095268;\n           internal_zFileName: cstring): orxSTATUS_520095067		13417
nim	setTempBitmap	wrapper.html#setTempBitmap,ptr.struct_orxBITMAP_t	proc setTempBitmap(internal_pstBitmap: ptr orxBITMAP_520095268): orxSTATUS_520095067		13424
nim	getTempBitmap	wrapper.html#getTempBitmap	proc getTempBitmap(): ptr orxBITMAP_520095268		13431
nim	setDestinationBitmaps	wrapper.html#setDestinationBitmaps,ptr.ptr.struct_orxBITMAP_t,orxU32_520095025	proc setDestinationBitmaps(internal_apstBitmapList: ptr ptr orxBITMAP_520095268;\n                      internal_u32Number: orxU32_520095025): orxSTATUS_520095067		13438
nim	clearBitmap	wrapper.html#clearBitmap,ptr.struct_orxBITMAP_t,orxRGBA_520095266	proc clearBitmap(internal_pstBitmap: ptr orxBITMAP_520095268;\n            internal_stColor: orxRGBA_520095266): orxSTATUS_520095067		13446
nim	setBlendMode	wrapper.html#setBlendMode,orxDISPLAY_BLEND_MODE_520095304	proc setBlendMode(internal_eBlendMode: orxDISPLAY_BLEND_MODE_520095304): orxSTATUS_520095067		13453
nim	setBitmapClipping	wrapper.html#setBitmapClipping,ptr.struct_orxBITMAP_t,orxU32_520095025,orxU32_520095025,orxU32_520095025,orxU32_520095025	proc setBitmapClipping(internal_pstBitmap: ptr orxBITMAP_520095268;\n                  internal_u32TLX: orxU32_520095025;\n                  internal_u32TLY: orxU32_520095025;\n                  internal_u32BRX: orxU32_520095025;\n                  internal_u32BRY: orxU32_520095025): orxSTATUS_520095067		13459
nim	setBitmapData	wrapper.html#setBitmapData,ptr.struct_orxBITMAP_t,ptr.orxU8_520095029,orxU32_520095025	proc setBitmapData(internal_pstBitmap: ptr orxBITMAP_520095268;\n              internal_au8Data: ptr orxU8_520095029;\n              internal_u32ByteNumber: orxU32_520095025): orxSTATUS_520095067		13470
nim	getBitmapData	wrapper.html#getBitmapData,ptr.struct_orxBITMAP_t,ptr.orxU8_520095029,orxU32_520095025	proc getBitmapData(internal_pstBitmap: ptr orxBITMAP_520095268;\n              internal_au8Data: ptr orxU8_520095029;\n              internal_u32ByteNumber: orxU32_520095025): orxSTATUS_520095067		13479
nim	setPartialBitmapData	wrapper.html#setPartialBitmapData,ptr.struct_orxBITMAP_t,ptr.orxU8_520095029,orxU32_520095025,orxU32_520095025,orxU32_520095025,orxU32_520095025	proc setPartialBitmapData(internal_pstBitmap: ptr orxBITMAP_520095268;\n                     internal_au8Data: ptr orxU8_520095029;\n                     internal_u32X: orxU32_520095025;\n                     internal_u32Y: orxU32_520095025;\n                     internal_u32Width: orxU32_520095025;\n                     internal_u32Height: orxU32_520095025): orxSTATUS_520095067		13488
nim	getBitmapSize	wrapper.html#getBitmapSize,ptr.struct_orxBITMAP_t,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041	proc getBitmapSize(internal_pstBitmap: ptr orxBITMAP_520095268;\n              internal_pfWidth: ptr orxFLOAT_520095041;\n              internal_pfHeight: ptr orxFLOAT_520095041): orxSTATUS_520095067		13500
nim	getBitmapID	wrapper.html#getBitmapID,ptr.struct_orxBITMAP_t	proc getBitmapID(internal_pstBitmap: ptr orxBITMAP_520095268): orxU32_520095025		13509
nim	transformBitmap	wrapper.html#transformBitmap,ptr.struct_orxBITMAP_t,ptr.orxDISPLAY_TRANSFORM_520095276,orxRGBA_520095266,orxDISPLAY_SMOOTHING_520095300,orxDISPLAY_BLEND_MODE_520095304	proc transformBitmap(internal_pstSrc: ptr orxBITMAP_520095268;\n                internal_pstTransform: ptr orxDISPLAY_TRANSFORM_520095276;\n                internal_stColor: orxRGBA_520095266;\n                internal_eSmoothing: orxDISPLAY_SMOOTHING_520095300;\n                internal_eBlendMode: orxDISPLAY_BLEND_MODE_520095304): orxSTATUS_520095067		13515
nim	transformText	wrapper.html#transformText,cstring,ptr.struct_orxBITMAP_t,ptr.orxCHARACTER_MAP_520095296,ptr.orxDISPLAY_TRANSFORM_520095276,orxRGBA_520095266,orxDISPLAY_SMOOTHING_520095300,orxDISPLAY_BLEND_MODE_520095304	proc transformText(internal_zString: cstring;\n              internal_pstFont: ptr orxBITMAP_520095268;\n              internal_pstMap: ptr orxCHARACTER_MAP_520095296;\n              internal_pstTransform: ptr orxDISPLAY_TRANSFORM_520095276;\n              internal_stColor: orxRGBA_520095266;\n              internal_eSmoothing: orxDISPLAY_SMOOTHING_520095300;\n              internal_eBlendMode: orxDISPLAY_BLEND_MODE_520095304): orxSTATUS_520095067		13526
nim	drawLine	wrapper.html#drawLine,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,orxRGBA_520095266	proc drawLine(internal_pvStart: ptr orxVECTOR_520095097;\n         internal_pvEnd: ptr orxVECTOR_520095097;\n         internal_stColor: orxRGBA_520095266): orxSTATUS_520095067		13539
nim	drawPolyline	wrapper.html#drawPolyline,ptr.orxVECTOR_520095097,orxU32_520095025,orxRGBA_520095266	proc drawPolyline(internal_avVertexList: ptr orxVECTOR_520095097;\n             internal_u32VertexNumber: orxU32_520095025;\n             internal_stColor: orxRGBA_520095266): orxSTATUS_520095067		13547
nim	drawPolygon	wrapper.html#drawPolygon,ptr.orxVECTOR_520095097,orxU32_520095025,orxRGBA_520095266,orxBOOL_520095039	proc drawPolygon(internal_avVertexList: ptr orxVECTOR_520095097;\n            internal_u32VertexNumber: orxU32_520095025;\n            internal_stColor: orxRGBA_520095266;\n            internal_bFill: orxBOOL_520095039): orxSTATUS_520095067		13555
nim	drawCircle	wrapper.html#drawCircle,ptr.orxVECTOR_520095097,orxFLOAT_520095041,orxRGBA_520095266,orxBOOL_520095039	proc drawCircle(internal_pvCenter: ptr orxVECTOR_520095097;\n           internal_fRadius: orxFLOAT_520095041;\n           internal_stColor: orxRGBA_520095266;\n           internal_bFill: orxBOOL_520095039): orxSTATUS_520095067		13563
nim	drawOBox	wrapper.html#drawOBox,ptr.orxOBOX_520095258,orxRGBA_520095266,orxBOOL_520095039	proc drawOBox(internal_pstBox: ptr orxOBOX_520095258;\n         internal_stColor: orxRGBA_520095266; internal_bFill: orxBOOL_520095039): orxSTATUS_520095067		13571
nim	drawMesh	wrapper.html#drawMesh,ptr.orxDISPLAY_MESH_520095284,ptr.struct_orxBITMAP_t,orxDISPLAY_SMOOTHING_520095300,orxDISPLAY_BLEND_MODE_520095304	proc drawMesh(internal_pstMesh: ptr orxDISPLAY_MESH_520095284;\n         internal_pstBitmap: ptr orxBITMAP_520095268;\n         internal_eSmoothing: orxDISPLAY_SMOOTHING_520095300;\n         internal_eBlendMode: orxDISPLAY_BLEND_MODE_520095304): orxSTATUS_520095067		13578
nim	hasShaderSupport	wrapper.html#hasShaderSupport	proc hasShaderSupport(): orxBOOL_520095039		13587
nim	createShader	wrapper.html#createShader,ptr.cstring,orxU32_520095025,ptr.orxLINKLIST_520095140,orxBOOL_520095039	proc createShader(internal_azCodeList: ptr cstring;\n             internal_u32Size: orxU32_520095025;\n             internal_pstParamList: ptr orxLINKLIST_520095140;\n             internal_bUseCustomParam: orxBOOL_520095039): orxHANDLE_520095051		13594
nim	deleteShader	wrapper.html#deleteShader,orxHANDLE_520095051	proc deleteShader(internal_hShader: orxHANDLE_520095051): void		13602
nim	startShader	wrapper.html#startShader,orxHANDLE_520095051	proc startShader(internal_hShader: orxHANDLE_520095051): orxSTATUS_520095067		13608
nim	stopShader	wrapper.html#stopShader,orxHANDLE_520095051	proc stopShader(internal_hShader: orxHANDLE_520095051): orxSTATUS_520095067		13614
nim	getParameterID	wrapper.html#getParameterID,orxHANDLE_520095051,cstring,orxS32_520095033,orxBOOL_520095039	proc getParameterID(internal_hShader: orxHANDLE_520095051; internal_zParam: cstring;\n               internal_s32Index: orxS32_520095033;\n               internal_bIsTexture: orxBOOL_520095039): orxS32_520095033		13620
nim	setShaderBitmap	wrapper.html#setShaderBitmap,orxHANDLE_520095051,orxS32_520095033,ptr.struct_orxBITMAP_t	proc setShaderBitmap(internal_hShader: orxHANDLE_520095051;\n                internal_s32ID: orxS32_520095033;\n                internal_pstValue: ptr orxBITMAP_520095268): orxSTATUS_520095067		13629
nim	setShaderFloat	wrapper.html#setShaderFloat,orxHANDLE_520095051,orxS32_520095033,orxFLOAT_520095041	proc setShaderFloat(internal_hShader: orxHANDLE_520095051;\n               internal_s32ID: orxS32_520095033;\n               internal_fValue: orxFLOAT_520095041): orxSTATUS_520095067		13638
nim	setShaderVector	wrapper.html#setShaderVector,orxHANDLE_520095051,orxS32_520095033,ptr.orxVECTOR_520095097	proc setShaderVector(internal_hShader: orxHANDLE_520095051;\n                internal_s32ID: orxS32_520095033;\n                internal_pvValue: ptr orxVECTOR_520095097): orxSTATUS_520095067		13647
nim	getShaderID	wrapper.html#getShaderID,orxHANDLE_520095051	proc getShaderID(internal_hShader: orxHANDLE_520095051): orxU32_520095025		13656
nim	enableVSync	wrapper.html#enableVSync,orxBOOL_520095039	proc enableVSync(internal_bEnable: orxBOOL_520095039): orxSTATUS_520095067		13662
nim	isVSyncEnabled	wrapper.html#isVSyncEnabled	proc isVSyncEnabled(): orxBOOL_520095039		13668
nim	setFullScreen	wrapper.html#setFullScreen,orxBOOL_520095039	proc setFullScreen(internal_bFullScreen: orxBOOL_520095039): orxSTATUS_520095067		13675
nim	isFullScreen	wrapper.html#isFullScreen	proc isFullScreen(): orxBOOL_520095039		13682
nim	getVideoModeCount	wrapper.html#getVideoModeCount	proc getVideoModeCount(): orxU32_520095025		13688
nim	getVideoMode	wrapper.html#getVideoMode,orxU32_520095025,ptr.orxDISPLAY_VIDEO_MODE_520095288	proc getVideoMode(internal_u32Index: orxU32_520095025;\n             internal_pstVideoMode: ptr orxDISPLAY_VIDEO_MODE_520095288): ptr orxDISPLAY_VIDEO_MODE_520095288		13695
nim	setVideoMode	wrapper.html#setVideoMode,ptr.orxDISPLAY_VIDEO_MODE_520095288	proc setVideoMode(internal_pstVideoMode: ptr orxDISPLAY_VIDEO_MODE_520095288): orxSTATUS_520095067		13702
nim	isVideoModeAvailable	wrapper.html#isVideoModeAvailable,ptr.orxDISPLAY_VIDEO_MODE_520095288	proc isVideoModeAvailable(internal_pstVideoMode: ptr orxDISPLAY_VIDEO_MODE_520095288): orxBOOL_520095039		13708
nim	textureSetup	wrapper.html#textureSetup	proc textureSetup(): void		13715
nim	textureInit	wrapper.html#textureInit	proc textureInit(): orxSTATUS_520095067		13720
nim	textureExit	wrapper.html#textureExit	proc textureExit(): void		13725
nim	textureCreate	wrapper.html#textureCreate	proc textureCreate(): ptr orxTEXTURE_520095322		13730
nim	textureDelete	wrapper.html#textureDelete,ptr.struct_orxTEXTURE_t	proc textureDelete(internal_pstTexture: ptr orxTEXTURE_520095322): orxSTATUS_520095067		13743
nim	clearCache	wrapper.html#clearCache	proc clearCache(): orxSTATUS_520095067		13750
nim	linkBitmap	wrapper.html#linkBitmap,ptr.struct_orxTEXTURE_t,ptr.struct_orxBITMAP_t,cstring,orxBOOL_520095039	proc linkBitmap(internal_pstTexture: ptr orxTEXTURE_520095322;\n           internal_pstBitmap: ptr orxBITMAP_520095268;\n           internal_zDataName: cstring;\n           internal_bTransferOwnership: orxBOOL_520095039): orxSTATUS_520095067		13756
nim	unlinkBitmap	wrapper.html#unlinkBitmap,ptr.struct_orxTEXTURE_t	proc unlinkBitmap(internal_pstTexture: ptr orxTEXTURE_520095322): orxSTATUS_520095067		13765
nim	getBitmap	wrapper.html#getBitmap,ptr.struct_orxTEXTURE_t	proc getBitmap(internal_pstTexture: ptr orxTEXTURE_520095322): ptr orxBITMAP_520095268		13771
nim	textureGet	wrapper.html#textureGet,cstring	proc textureGet(internal_zName: cstring): ptr orxTEXTURE_520095322		13785
nim	getScreenTexture	wrapper.html#getScreenTexture	proc getScreenTexture(): ptr orxTEXTURE_520095322		13797
nim	getLoadCount	wrapper.html#getLoadCount	proc getLoadCount(): orxU32_520095025		13804
nim	fontSetup	wrapper.html#fontSetup	proc fontSetup(): void		13810
nim	fontInit	wrapper.html#fontInit	proc fontInit(): orxSTATUS_520095067		13815
nim	fontExit	wrapper.html#fontExit	proc fontExit(): void		13820
nim	fontCreate	wrapper.html#fontCreate	proc fontCreate(): ptr orxFONT_520095324		13825
nim	fontCreateFromConfig	wrapper.html#fontCreateFromConfig,cstring	proc fontCreateFromConfig(internal_zConfigID: cstring): ptr orxFONT_520095324		13830
nim	fontDelete	wrapper.html#fontDelete,ptr.struct_orxFONT_t	proc fontDelete(internal_pstFont: ptr orxFONT_520095324): orxSTATUS_520095067		13837
nim	getDefaultFont	wrapper.html#getDefaultFont	proc getDefaultFont(): ptr orxFONT_520095324		13843
nim	setTexture	wrapper.html#setTexture,ptr.struct_orxFONT_t,ptr.struct_orxTEXTURE_t	proc setTexture(internal_pstFont: ptr orxFONT_520095324;\n           internal_pstTexture: ptr orxTEXTURE_520095322): orxSTATUS_520095067		13850
nim	setCharacterList	wrapper.html#setCharacterList,ptr.struct_orxFONT_t,cstring	proc setCharacterList(internal_pstFont: ptr orxFONT_520095324;\n                 internal_zList: cstring): orxSTATUS_520095067		13857
nim	setCharacterHeight	wrapper.html#setCharacterHeight,ptr.struct_orxFONT_t,orxFLOAT_520095041	proc setCharacterHeight(internal_pstFont: ptr orxFONT_520095324;\n                   internal_fCharacterHeight: orxFLOAT_520095041): orxSTATUS_520095067		13865
nim	setCharacterWidthList	wrapper.html#setCharacterWidthList,ptr.struct_orxFONT_t,orxU32_520095025,ptr.orxFLOAT_520095041	proc setCharacterWidthList(internal_pstFont: ptr orxFONT_520095324;\n                      internal_u32CharacterNumber: orxU32_520095025;\n                      internal_afCharacterWidthList: ptr orxFLOAT_520095041): orxSTATUS_520095067		13873
nim	setCharacterSpacing	wrapper.html#setCharacterSpacing,ptr.struct_orxFONT_t,ptr.orxVECTOR_520095097	proc setCharacterSpacing(internal_pstFont: ptr orxFONT_520095324;\n                    internal_pvSpacing: ptr orxVECTOR_520095097): orxSTATUS_520095067		13882
nim	setOrigin	wrapper.html#setOrigin,ptr.struct_orxFONT_t,ptr.orxVECTOR_520095097	proc setOrigin(internal_pstFont: ptr orxFONT_520095324;\n          internal_pvOrigin: ptr orxVECTOR_520095097): orxSTATUS_520095067		13890
nim	setSize	wrapper.html#setSize,ptr.struct_orxFONT_t,ptr.orxVECTOR_520095097	proc setSize(internal_pstFont: ptr orxFONT_520095324;\n        internal_pvSize: ptr orxVECTOR_520095097): orxSTATUS_520095067		13897
nim	getTexture	wrapper.html#getTexture,ptr.struct_orxFONT_t	proc getTexture(internal_pstFont: ptr orxFONT_520095324): ptr orxTEXTURE_520095322		13904
nim	getCharacterList	wrapper.html#getCharacterList,ptr.struct_orxFONT_t	proc getCharacterList(internal_pstFont: ptr orxFONT_520095324): cstring		13910
nim	getCharacterHeight	wrapper.html#getCharacterHeight,ptr.struct_orxFONT_t	proc getCharacterHeight(internal_pstFont: ptr orxFONT_520095324): orxFLOAT_520095041		13917
nim	getCharacterWidth	wrapper.html#getCharacterWidth,ptr.struct_orxFONT_t,orxU32_520095025	proc getCharacterWidth(internal_pstFont: ptr orxFONT_520095324;\n                  internal_u32CharacterCodePoint: orxU32_520095025): orxFLOAT_520095041		13924
nim	getCharacterSpacing	wrapper.html#getCharacterSpacing,ptr.struct_orxFONT_t,ptr.orxVECTOR_520095097	proc getCharacterSpacing(internal_pstFont: ptr orxFONT_520095324;\n                    internal_pvSpacing: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		13932
nim	getMap	wrapper.html#getMap,ptr.struct_orxFONT_t	proc getMap(internal_pstFont: ptr orxFONT_520095324): ptr orxCHARACTER_MAP_520095296		13954
nim	joystickSetup	wrapper.html#joystickSetup	proc joystickSetup(): void		13966
nim	joystickInit	wrapper.html#joystickInit	proc joystickInit(): orxSTATUS_520095067		13972
nim	joystickExit	wrapper.html#joystickExit	proc joystickExit(): void		13977
nim	getAxisValue	wrapper.html#getAxisValue,orxJOYSTICK_AXIS_520095332	proc getAxisValue(internal_eAxis: orxJOYSTICK_AXIS_520095332): orxFLOAT_520095041		13982
nim	isButtonPressed	wrapper.html#isButtonPressed,orxJOYSTICK_BUTTON_520095328	proc isButtonPressed(internal_eButton: orxJOYSTICK_BUTTON_520095328): orxBOOL_520095039		13988
nim	getButtonName	wrapper.html#getButtonName,orxJOYSTICK_BUTTON_520095328	proc getButtonName(internal_eButton: orxJOYSTICK_BUTTON_520095328): cstring		13995
nim	getAxisName	wrapper.html#getAxisName,orxJOYSTICK_AXIS_520095332	proc getAxisName(internal_eAxis: orxJOYSTICK_AXIS_520095332): cstring		14002
nim	isConnected	wrapper.html#isConnected,orxU32_520095025	proc isConnected(internal_u32ID: orxU32_520095025): orxBOOL_520095039		14008
nim	keyboardSetup	wrapper.html#keyboardSetup	proc keyboardSetup(): void		14014
nim	keyboardInit	wrapper.html#keyboardInit	proc keyboardInit(): orxSTATUS_520095067		14020
nim	keyboardExit	wrapper.html#keyboardExit	proc keyboardExit(): void		14025
nim	isKeyPressed	wrapper.html#isKeyPressed,orxKEYBOARD_KEY_520095336	proc isKeyPressed(internal_eKey: orxKEYBOARD_KEY_520095336): orxBOOL_520095039		14030
nim	getKeyDisplayName	wrapper.html#getKeyDisplayName,orxKEYBOARD_KEY_520095336	proc getKeyDisplayName(internal_eKey: orxKEYBOARD_KEY_520095336): cstring		14036
nim	readKey	wrapper.html#readKey	proc readKey(): orxKEYBOARD_KEY_520095336		14043
nim	readString	wrapper.html#readString	proc readString(): cstring		14049
nim	clearBuffer	wrapper.html#clearBuffer	proc clearBuffer(): void		14054
nim	getKeyName	wrapper.html#getKeyName,orxKEYBOARD_KEY_520095336	proc getKeyName(internal_eKey: orxKEYBOARD_KEY_520095336): cstring		14059
nim	show	wrapper.html#show,orxBOOL_520095039	proc show(internal_bShow: orxBOOL_520095039): orxSTATUS_520095067		14065
nim	mouseSetup	wrapper.html#mouseSetup	proc mouseSetup(): void		14071
nim	mouseInit	wrapper.html#mouseInit	proc mouseInit(): orxSTATUS_520095067		14076
nim	mouseExit	wrapper.html#mouseExit	proc mouseExit(): void		14081
nim	setPosition	wrapper.html#setPosition,ptr.orxVECTOR_520095097	proc setPosition(internal_pvPosition: ptr orxVECTOR_520095097): orxSTATUS_520095067		14086
nim	getPosition	wrapper.html#getPosition,ptr.orxVECTOR_520095097	proc getPosition(internal_pvPosition: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		14092
nim	getMoveDelta	wrapper.html#getMoveDelta,ptr.orxVECTOR_520095097	proc getMoveDelta(internal_pvMoveDelta: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		14105
nim	getWheelDelta	wrapper.html#getWheelDelta	proc getWheelDelta(): orxFLOAT_520095041		14111
nim	showCursor	wrapper.html#showCursor,orxBOOL_520095039	proc showCursor(internal_bShow: orxBOOL_520095039): orxSTATUS_520095067		14118
nim	grab	wrapper.html#grab,orxBOOL_520095039	proc grab(internal_bGrab: orxBOOL_520095039): orxSTATUS_520095067		14124
nim	setCursor	wrapper.html#setCursor,cstring,ptr.orxVECTOR_520095097	proc setCursor(internal_zName: cstring; internal_pvPivot: ptr orxVECTOR_520095097): orxSTATUS_520095067		14130
nim	inputSetup	wrapper.html#inputSetup	proc inputSetup(): void		14149
nim	inputInit	wrapper.html#inputInit	proc inputInit(): orxSTATUS_520095067		14154
nim	inputExit	wrapper.html#inputExit	proc inputExit(): void		14159
nim	selectSet	wrapper.html#selectSet,cstring	proc selectSet(internal_zSetName: cstring): orxSTATUS_520095067		14176
nim	getCurrentSet	wrapper.html#getCurrentSet	proc getCurrentSet(): cstring		14182
nim	getNextSet	wrapper.html#getNextSet,cstring	proc getNextSet(internal_zSetName: cstring): cstring		14188
nim	pushSet	wrapper.html#pushSet,cstring	proc pushSet(internal_zSetName: cstring): orxSTATUS_520095067		14194
nim	popSet	wrapper.html#popSet	proc popSet(): orxSTATUS_520095067		14200
nim	removeSet	wrapper.html#removeSet,cstring	proc removeSet(internal_zSetName: cstring): orxSTATUS_520095067		14205
nim	enableSet	wrapper.html#enableSet,cstring,orxBOOL_520095039	proc enableSet(internal_zSetName: cstring; internal_bEnable: orxBOOL_520095039): orxSTATUS_520095067		14211
nim	isSetEnabled	wrapper.html#isSetEnabled,cstring	proc isSetEnabled(internal_zSetName: cstring): orxBOOL_520095039		14217
nim	clearSet	wrapper.html#clearSet,cstring	proc clearSet(internal_zSetName: cstring): orxSTATUS_520095067		14223
nim	setTypeFlags	wrapper.html#setTypeFlags,orxU32_520095025,orxU32_520095025	proc setTypeFlags(internal_u32AddTypeFlags: orxU32_520095025;\n             internal_u32RemoveTypeFlags: orxU32_520095025): orxSTATUS_520095067		14229
nim	isActive	wrapper.html#isActive,cstring	proc isActive(internal_zInputName: cstring): orxBOOL_520095039		14242
nim	hasBeenActivated	wrapper.html#hasBeenActivated,cstring	proc hasBeenActivated(internal_zInputName: cstring): orxBOOL_520095039		14248
nim	hasBeenDeactivated	wrapper.html#hasBeenDeactivated,cstring	proc hasBeenDeactivated(internal_zInputName: cstring): orxBOOL_520095039		14255
nim	hasNewStatus	wrapper.html#hasNewStatus,cstring	proc hasNewStatus(internal_zInputName: cstring): orxBOOL_520095039		14262
nim	getValue	wrapper.html#getValue,cstring	proc getValue(internal_zInputName: cstring): orxFLOAT_520095041		14268
nim	setValue	wrapper.html#setValue,cstring,orxFLOAT_520095041	proc setValue(internal_zInputName: cstring; internal_fValue: orxFLOAT_520095041): orxSTATUS_520095067		14274
nim	setPermanentValue	wrapper.html#setPermanentValue,cstring,orxFLOAT_520095041	proc setPermanentValue(internal_zInputName: cstring;\n                  internal_fValue: orxFLOAT_520095041): orxSTATUS_520095067		14280
nim	resetValue	wrapper.html#resetValue,cstring	proc resetValue(internal_zInputName: cstring): orxSTATUS_520095067		14288
nim	getThreshold	wrapper.html#getThreshold,cstring	proc getThreshold(internal_zInputName: cstring): orxFLOAT_520095041		14294
nim	setThreshold	wrapper.html#setThreshold,cstring,orxFLOAT_520095041	proc setThreshold(internal_zInputName: cstring;\n             internal_fThreshold: orxFLOAT_520095041): orxSTATUS_520095067		14300
nim	getMultiplier	wrapper.html#getMultiplier,cstring	proc getMultiplier(internal_zInputName: cstring): orxFLOAT_520095041		14306
nim	setMultiplier	wrapper.html#setMultiplier,cstring,orxFLOAT_520095041	proc setMultiplier(internal_zInputName: cstring;\n              internal_fMultiplier: orxFLOAT_520095041): orxSTATUS_520095067		14313
nim	setCombineMode	wrapper.html#setCombineMode,cstring,orxBOOL_520095039	proc setCombineMode(internal_zName: cstring; internal_bCombine: orxBOOL_520095039): orxSTATUS_520095067		14321
nim	isInCombineMode	wrapper.html#isInCombineMode,cstring	proc isInCombineMode(internal_zName: cstring): orxBOOL_520095039		14328
nim	inputBind	wrapper.html#inputBind,cstring,orxINPUT_TYPE_520095348,orxU32_520095025,orxINPUT_MODE_520095352,orxS32_520095033	proc inputBind(internal_zName: cstring; internal_eType: orxINPUT_TYPE_520095348;\n          internal_eID: orxENUM_520095049;\n          internal_eMode: orxINPUT_MODE_520095352;\n          internal_s32BindingIndex: orxS32_520095033): orxSTATUS_520095067		14335
nim	inputUnbind	wrapper.html#inputUnbind,cstring,orxS32_520095033	proc inputUnbind(internal_zName: cstring; internal_s32BindingIndex: orxS32_520095033): orxSTATUS_520095067		14344
nim	getBoundInputCount	wrapper.html#getBoundInputCount,orxINPUT_TYPE_520095348,orxU32_520095025,orxINPUT_MODE_520095352	proc getBoundInputCount(internal_eType: orxINPUT_TYPE_520095348;\n                   internal_eID: orxENUM_520095049;\n                   internal_eMode: orxINPUT_MODE_520095352): orxU32_520095025		14350
nim	getBoundInput	wrapper.html#getBoundInput,orxINPUT_TYPE_520095348,orxU32_520095025,orxINPUT_MODE_520095352,orxU32_520095025,ptr.cstring,ptr.orxU32_520095025	proc getBoundInput(internal_eType: orxINPUT_TYPE_520095348;\n              internal_eID: orxENUM_520095049;\n              internal_eMode: orxINPUT_MODE_520095352;\n              internal_u32InputIndex: orxU32_520095025;\n              internal_pzName: ptr cstring;\n              internal_pu32BindingIndex: ptr orxU32_520095025): orxSTATUS_520095067		14359
nim	getBinding	wrapper.html#getBinding,cstring,orxU32_520095025,ptr.orxINPUT_TYPE_520095348,ptr.orxU32_520095025,ptr.orxINPUT_MODE_520095352	proc getBinding(internal_zName: cstring; internal_u32BindingIndex: orxU32_520095025;\n           internal_peType: ptr orxINPUT_TYPE_520095348;\n           internal_peID: ptr orxENUM_520095049;\n           internal_peMode: ptr orxINPUT_MODE_520095352): orxSTATUS_520095067		14371
nim	getBindingList	wrapper.html#getBindingList,cstring,array[,orxINPUT_TYPE_520095348],array[,orxU32_520095025],array[,orxINPUT_MODE_520095352]	proc getBindingList(internal_zName: cstring;\n               internal_aeTypeList: array[16'i64, orxINPUT_TYPE_520095348];\n               internal_aeIDList: array[16'i64, orxENUM_520095049];\n               internal_aeModeList: array[16'i64, orxINPUT_MODE_520095352]): orxSTATUS_520095067		14380
nim	getBindingName	wrapper.html#getBindingName,orxINPUT_TYPE_520095348,orxU32_520095025,orxINPUT_MODE_520095352	proc getBindingName(internal_eType: orxINPUT_TYPE_520095348;\n               internal_eID: orxENUM_520095049;\n               internal_eMode: orxINPUT_MODE_520095352): cstring		14390
nim	getBindingType	wrapper.html#getBindingType,cstring,ptr.orxINPUT_TYPE_520095348,ptr.orxU32_520095025,ptr.orxINPUT_MODE_520095352	proc getBindingType(internal_zName: cstring;\n               internal_peType: ptr orxINPUT_TYPE_520095348;\n               internal_peID: ptr orxENUM_520095049;\n               internal_peMode: ptr orxINPUT_MODE_520095352): orxSTATUS_520095067		14399
nim	getActiveBinding	wrapper.html#getActiveBinding,ptr.orxINPUT_TYPE_520095348,ptr.orxU32_520095025,ptr.orxFLOAT_520095041	proc getActiveBinding(internal_peType: ptr orxINPUT_TYPE_520095348;\n                 internal_peID: ptr orxENUM_520095049;\n                 internal_pfValue: ptr orxFLOAT_520095041): orxSTATUS_520095067		14409
nim	consoleSetup	wrapper.html#consoleSetup	proc consoleSetup(): void		14418
nim	consoleInit	wrapper.html#consoleInit	proc consoleInit(): orxSTATUS_520095067		14423
nim	consoleExit	wrapper.html#consoleExit	proc consoleExit(): void		14428
nim	enable	wrapper.html#enable,orxBOOL_520095039	proc enable(internal_bEnable: orxBOOL_520095039): void		14433
nim	isEnabled	wrapper.html#isEnabled	proc isEnabled(): orxBOOL_520095039		14439
nim	isInsertMode	wrapper.html#isInsertMode	proc isInsertMode(): orxBOOL_520095039		14444
nim	setToggle	wrapper.html#setToggle,orxINPUT_TYPE_520095348,orxU32_520095025,orxINPUT_MODE_520095352	proc setToggle(internal_eInputType: orxINPUT_TYPE_520095348;\n          internal_eInputID: orxENUM_520095049;\n          internal_eInputMode: orxINPUT_MODE_520095352): orxSTATUS_520095067		14450
nim	log	wrapper.html#log,cstring	proc log(internal_zText: cstring): orxSTATUS_520095067		14458
nim	setFont	wrapper.html#setFont,ptr.struct_orxFONT_t	proc setFont(internal_pstFont: ptr orxFONT_520095324): orxSTATUS_520095067		14464
nim	getFont	wrapper.html#getFont	proc getFont(): ptr orxFONT_520095324		14470
nim	setLogLineLength	wrapper.html#setLogLineLength,orxU32_520095025	proc setLogLineLength(internal_u32LineLength: orxU32_520095025): orxSTATUS_520095067		14475
nim	getLogLineLength	wrapper.html#getLogLineLength	proc getLogLineLength(): orxU32_520095025		14482
nim	getCompletionCount	wrapper.html#getCompletionCount,ptr.orxU32_520095025	proc getCompletionCount(internal_pu32MaxLength: ptr orxU32_520095025): orxU32_520095025		14489
nim	getCompletion	wrapper.html#getCompletion,orxU32_520095025,ptr.orxBOOL_520095039	proc getCompletion(internal_u32Index: orxU32_520095025;\n              internal_pbActive: ptr orxBOOL_520095039): cstring		14496
nim	getTrailLogLine	wrapper.html#getTrailLogLine,orxU32_520095025	proc getTrailLogLine(internal_u32TrailLineIndex: orxU32_520095025): cstring		14504
nim	getTrailLogLineOffset	wrapper.html#getTrailLogLineOffset	proc getTrailLogLineOffset(): orxU32_520095025		14511
nim	getInput	wrapper.html#getInput,ptr.orxU32_520095025	proc getInput(internal_pu32CursorIndex: ptr orxU32_520095025): cstring		14518
nim	eventSetup	wrapper.html#eventSetup	proc eventSetup(): void		14524
nim	eventInit	wrapper.html#eventInit	proc eventInit(): orxSTATUS_520095067		14529
nim	eventExit	wrapper.html#eventExit	proc eventExit(): void		14534
nim	addHandler	wrapper.html#addHandler,orxEVENT_TYPE_520095364,orxEVENT_HANDLER_520095370	proc addHandler(internal_eEventType: orxEVENT_TYPE_520095364;\n           internal_pfnEventHandler: orxEVENT_HANDLER_520095370): orxSTATUS_520095067		14539
nim	addHandlerWithContext	wrapper.html#addHandlerWithContext,orxEVENT_TYPE_520095364,orxEVENT_HANDLER_520095370,pointer	proc addHandlerWithContext(internal_eEventType: orxEVENT_TYPE_520095364;\n                      internal_pfnEventHandler: orxEVENT_HANDLER_520095370;\n                      internal_pContext: pointer): orxSTATUS_520095067		14546
nim	removeHandler	wrapper.html#removeHandler,orxEVENT_TYPE_520095364,orxEVENT_HANDLER_520095370	proc removeHandler(internal_eEventType: orxEVENT_TYPE_520095364;\n              internal_pfnEventHandler: orxEVENT_HANDLER_520095370): orxSTATUS_520095067		14555
nim	removeHandlerWithContext	wrapper.html#removeHandlerWithContext,orxEVENT_TYPE_520095364,orxEVENT_HANDLER_520095370,pointer	proc removeHandlerWithContext(internal_eEventType: orxEVENT_TYPE_520095364;\n                         internal_pfnEventHandler: orxEVENT_HANDLER_520095370;\n                         internal_pContext: pointer): orxSTATUS_520095067		14563
nim	setHandlerIDFlags	wrapper.html#setHandlerIDFlags,orxEVENT_HANDLER_520095370,orxEVENT_TYPE_520095364,pointer,orxU32_520095025,orxU32_520095025	proc setHandlerIDFlags(internal_pfnEventHandler: orxEVENT_HANDLER_520095370;\n                  internal_eEventType: orxEVENT_TYPE_520095364;\n                  internal_pContext: pointer;\n                  internal_u32AddIDFlags: orxU32_520095025;\n                  internal_u32RemoveIDFlags: orxU32_520095025): orxSTATUS_520095067		14572
nim	eventSend	wrapper.html#eventSend,ptr.orxEVENT_520095368	proc eventSend(internal_pstEvent: ptr orxEVENT_520095368): orxSTATUS_520095067		14583
nim	eventSendShort	wrapper.html#eventSendShort,orxEVENT_TYPE_520095364,orxU32_520095025	proc eventSendShort(internal_eEventType: orxEVENT_TYPE_520095364;\n               internal_eEventID: orxENUM_520095049): orxSTATUS_520095067		14589
nim	isSending	wrapper.html#isSending	proc isSending(): orxBOOL_520095039		14597
nim	localeSetup	wrapper.html#localeSetup	proc localeSetup(): void		14602
nim	localeInit	wrapper.html#localeInit	proc localeInit(): orxSTATUS_520095067		14607
nim	localeExit	wrapper.html#localeExit	proc localeExit(): void		14612
nim	selectLanguage	wrapper.html#selectLanguage,cstring,cstring	proc selectLanguage(internal_zLanguage: cstring; internal_zGroup: cstring): orxSTATUS_520095067		14617
nim	getCurrentLanguage	wrapper.html#getCurrentLanguage,cstring	proc getCurrentLanguage(internal_zGroup: cstring): cstring		14624
nim	hasLanguage	wrapper.html#hasLanguage,cstring	proc hasLanguage(internal_zLanguage: cstring): orxBOOL_520095039		14631
nim	getLanguageCount	wrapper.html#getLanguageCount	proc getLanguageCount(): orxU32_520095025		14637
nim	getLanguage	wrapper.html#getLanguage,orxU32_520095025	proc getLanguage(internal_u32LanguageIndex: orxU32_520095025): cstring		14644
nim	hasString	wrapper.html#hasString,cstring,cstring	proc hasString(internal_zKey: cstring; internal_zGroup: cstring): orxBOOL_520095039		14650
nim	resourceSetup	wrapper.html#resourceSetup	proc resourceSetup(): void		14681
nim	resourceInit	wrapper.html#resourceInit	proc resourceInit(): orxSTATUS_520095067		14687
nim	resourceExit	wrapper.html#resourceExit	proc resourceExit(): void		14692
nim	getGroupCount	wrapper.html#getGroupCount	proc getGroupCount(): orxU32_520095025		14697
nim	getGroup	wrapper.html#getGroup,orxU32_520095025	proc getGroup(internal_u32Index: orxU32_520095025): cstring		14704
nim	addStorage	wrapper.html#addStorage,cstring,cstring,orxBOOL_520095039	proc addStorage(internal_zGroup: cstring; internal_zStorage: cstring;\n           internal_bAddFirst: orxBOOL_520095039): orxSTATUS_520095067		14710
nim	removeStorage	wrapper.html#removeStorage,cstring,cstring	proc removeStorage(internal_zGroup: cstring; internal_zStorage: cstring): orxSTATUS_520095067		14717
nim	getStorageCount	wrapper.html#getStorageCount,cstring	proc getStorageCount(internal_zGroup: cstring): orxU32_520095025		14724
nim	getStorage	wrapper.html#getStorage,cstring,orxU32_520095025	proc getStorage(internal_zGroup: cstring; internal_u32Index: orxU32_520095025): cstring		14731
nim	reloadStorage	wrapper.html#reloadStorage	proc reloadStorage(): orxSTATUS_520095067		14737
nim	locate	wrapper.html#locate,cstring,cstring	proc locate(internal_zGroup: cstring; internal_zName: cstring): cstring		14744
nim	locateInStorage	wrapper.html#locateInStorage,cstring,cstring,cstring	proc locateInStorage(internal_zGroup: cstring; internal_zStorage: cstring;\n                internal_zName: cstring): cstring		14750
nim	getPath	wrapper.html#getPath,cstring	proc getPath(internal_zLocation: cstring): cstring		14758
nim	getType	wrapper.html#getType,cstring	proc getType(internal_zLocation: cstring): ptr orxRESOURCE_TYPE_INFO_520095404		14764
nim	getLocation	wrapper.html#getLocation,orxHANDLE_520095051	proc getLocation(internal_hResource: orxHANDLE_520095051): cstring		14788
nim	seek	wrapper.html#seek,orxHANDLE_520095051,orxS64_520095031,orxSEEK_OFFSET_WHENCE_520095059	proc seek(internal_hResource: orxHANDLE_520095051;\n     internal_s64Offset: orxS64_520095031;\n     internal_eWhence: orxSEEK_OFFSET_WHENCE_520095059): orxS64_520095031		14800
nim	tell	wrapper.html#tell,orxHANDLE_520095051	proc tell(internal_hResource: orxHANDLE_520095051): orxS64_520095031		14808
nim	read	wrapper.html#read,orxHANDLE_520095051,orxS64_520095031,pointer,orxRESOURCE_OP_FUNCTION_520095380,pointer	proc read(internal_hResource: orxHANDLE_520095051;\n     internal_s64Size: orxS64_520095031; internal_pBuffer: pointer;\n     internal_pfnCallback: orxRESOURCE_OP_FUNCTION_520095380;\n     internal_pContext: pointer): orxS64_520095031		14814
nim	resourceDelete	wrapper.html#resourceDelete,cstring	proc resourceDelete(internal_zLocation: cstring): orxSTATUS_520095067		14832
nim	getPendingOpCount	wrapper.html#getPendingOpCount,orxHANDLE_520095051	proc getPendingOpCount(internal_hResource: orxHANDLE_520095051): orxU32_520095025		14839
nim	getTotalPendingOpCount	wrapper.html#getTotalPendingOpCount	proc getTotalPendingOpCount(): orxU32_520095025		14846
nim	registerType	wrapper.html#registerType,ptr.orxRESOURCE_TYPE_INFO_520095404	proc registerType(internal_pstInfo: ptr orxRESOURCE_TYPE_INFO_520095404): orxSTATUS_520095067		14853
nim	unregisterType	wrapper.html#unregisterType,cstring	proc unregisterType(internal_zTypeTag: cstring): orxSTATUS_520095067		14859
nim	getTypeCount	wrapper.html#getTypeCount	proc getTypeCount(): orxU32_520095025		14866
nim	getTypeTag	wrapper.html#getTypeTag,orxU32_520095025	proc getTypeTag(internal_u32Index: orxU32_520095025): cstring		14872
nim	sync	wrapper.html#sync,cstring	proc sync(internal_zGroup: cstring): orxSTATUS_520095067		14878
nim	getCacheCount	wrapper.html#getCacheCount,cstring	proc getCacheCount(internal_zGroup: cstring): orxU32_520095025		14890
nim	getNextCachedLocation	wrapper.html#getNextCachedLocation,cstring,orxHANDLE_520095051,ptr.cstring,ptr.cstring,ptr.cstring	proc getNextCachedLocation(internal_zGroup: cstring;\n                      internal_hIterator: orxHANDLE_520095051;\n                      internal_pzLocation: ptr cstring;\n                      internal_pzStorage: ptr cstring;\n                      internal_pzName: ptr cstring): orxHANDLE_520095051		14897
nim	setMemoryResource	wrapper.html#setMemoryResource,cstring,orxS64_520095031,pointer	proc setMemoryResource(internal_zName: cstring; internal_s64Size: orxS64_520095031;\n                  internal_pBuffer: pointer): orxSTATUS_520095067		14908
nim	threadSetup	wrapper.html#threadSetup	proc threadSetup(): void		14916
nim	threadInit	wrapper.html#threadInit	proc threadInit(): orxSTATUS_520095067		14921
nim	threadExit	wrapper.html#threadExit	proc threadExit(): void		14926
nim	start	wrapper.html#start,orxTHREAD_FUNCTION_520095416,cstring,pointer	proc start(internal_pfnRun: orxTHREAD_FUNCTION_520095416; internal_zName: cstring;\n      internal_pContext: pointer): orxU32_520095025		14931
nim	join	wrapper.html#join,orxU32_520095025	proc join(internal_u32ThreadID: orxU32_520095025): orxSTATUS_520095067		14938
nim	joinAll	wrapper.html#joinAll	proc joinAll(): orxSTATUS_520095067		14944
nim	getCurrent	wrapper.html#getCurrent	proc getCurrent(): orxU32_520095025		14962
nim	yield_proc	wrapper.html#yield_proc	proc yield_proc(): void		14967
nim	createSemaphore	wrapper.html#createSemaphore,orxU32_520095025	proc createSemaphore(internal_u32Value: orxU32_520095025): ptr orxTHREAD_SEMAPHORE_520095414		14972
nim	deleteSemaphore	wrapper.html#deleteSemaphore,ptr.struct_orxTHREAD_SEMAPHORE_t	proc deleteSemaphore(internal_pstSemaphore: ptr orxTHREAD_SEMAPHORE_520095414): orxSTATUS_520095067		14979
nim	waitSemaphore	wrapper.html#waitSemaphore,ptr.struct_orxTHREAD_SEMAPHORE_t	proc waitSemaphore(internal_pstSemaphore: ptr orxTHREAD_SEMAPHORE_520095414): orxSTATUS_520095067		14986
nim	signalSemaphore	wrapper.html#signalSemaphore,ptr.struct_orxTHREAD_SEMAPHORE_t	proc signalSemaphore(internal_pstSemaphore: ptr orxTHREAD_SEMAPHORE_520095414): orxSTATUS_520095067		14993
nim	runTask	wrapper.html#runTask,orxTHREAD_FUNCTION_520095416,orxTHREAD_FUNCTION_520095416,orxTHREAD_FUNCTION_520095416,pointer	proc runTask(internal_pfnRun: orxTHREAD_FUNCTION_520095416;\n        internal_pfnThen: orxTHREAD_FUNCTION_520095416;\n        internal_pfnElse: orxTHREAD_FUNCTION_520095416;\n        internal_pContext: pointer): orxSTATUS_520095067		15000
nim	getTaskCount	wrapper.html#getTaskCount	proc getTaskCount(): orxU32_520095025		15009
nim	setCallbacks	wrapper.html#setCallbacks,orxTHREAD_FUNCTION_520095416,orxTHREAD_FUNCTION_520095416,pointer	proc setCallbacks(internal_pfnStart: orxTHREAD_FUNCTION_520095416;\n             internal_pfnStop: orxTHREAD_FUNCTION_520095416;\n             internal_pContext: pointer): orxSTATUS_520095067		15015
nim	fPSSetup	wrapper.html#fPSSetup	proc fPSSetup(): void		15023
nim	fPSInit	wrapper.html#fPSInit	proc fPSInit(): orxSTATUS_520095067		15028
nim	fPSExit	wrapper.html#fPSExit	proc fPSExit(): void		15033
nim	orxFPS_IncreaseFrameCount	wrapper.html#orxFPS_IncreaseFrameCount	proc orxFPS_IncreaseFrameCount(): void		15038
nim	orxFPS_GetFPS	wrapper.html#orxFPS_GetFPS	proc orxFPS_GetFPS(): orxU32_520095025		15045
nim	profilerSetup	wrapper.html#profilerSetup	proc profilerSetup(): void		15051
nim	profilerInit	wrapper.html#profilerInit	proc profilerInit(): orxSTATUS_520095067		15057
nim	profilerExit	wrapper.html#profilerExit	proc profilerExit(): void		15062
nim	getIDFromName	wrapper.html#getIDFromName,cstring	proc getIDFromName(internal_zName: cstring): orxS32_520095033		15067
nim	isMarkerIDValid	wrapper.html#isMarkerIDValid,orxS32_520095033	proc isMarkerIDValid(internal_s32MarkerID: orxS32_520095033): orxBOOL_520095039		15074
nim	pushMarker	wrapper.html#pushMarker,orxS32_520095033	proc pushMarker(internal_s32MarkerID: orxS32_520095033): void		15081
nim	popMarker	wrapper.html#popMarker	proc popMarker(): void		15087
nim	enableMarkerOperations	wrapper.html#enableMarkerOperations,orxBOOL_520095039	proc enableMarkerOperations(internal_bEnable: orxBOOL_520095039): void		15092
nim	areMarkerOperationsEnabled	wrapper.html#areMarkerOperationsEnabled	proc areMarkerOperationsEnabled(): orxBOOL_520095039		15099
nim	resetAllMarkers	wrapper.html#resetAllMarkers	proc resetAllMarkers(): void		15117
nim	resetAllMaxima	wrapper.html#resetAllMaxima	proc resetAllMaxima(): void		15123
nim	getResetTime	wrapper.html#getResetTime	proc getResetTime(): orxDOUBLE_520095043		15129
nim	getMaxResetTime	wrapper.html#getMaxResetTime	proc getMaxResetTime(): orxDOUBLE_520095043		15135
nim	getMarkerCount	wrapper.html#getMarkerCount	proc getMarkerCount(): orxS32_520095033		15142
nim	getNextMarkerID	wrapper.html#getNextMarkerID,orxS32_520095033	proc getNextMarkerID(internal_s32MarkerID: orxS32_520095033): orxS32_520095033		15149
nim	getNextSortedMarkerID	wrapper.html#getNextSortedMarkerID,orxS32_520095033	proc getNextSortedMarkerID(internal_s32MarkerID: orxS32_520095033): orxS32_520095033		15156
nim	selectQueryFrame	wrapper.html#selectQueryFrame,orxU32_520095025,orxU32_520095025	proc selectQueryFrame(internal_u32QueryFrame: orxU32_520095025;\n                 internal_u32ThreadID: orxU32_520095025): orxSTATUS_520095067		15163
nim	getMarkerTime	wrapper.html#getMarkerTime,orxS32_520095033	proc getMarkerTime(internal_s32MarkerID: orxS32_520095033): orxDOUBLE_520095043		15171
nim	getMarkerMaxTime	wrapper.html#getMarkerMaxTime,orxS32_520095033	proc getMarkerMaxTime(internal_s32MarkerID: orxS32_520095033): orxDOUBLE_520095043		15178
nim	getMarkerName	wrapper.html#getMarkerName,orxS32_520095033	proc getMarkerName(internal_s32MarkerID: orxS32_520095033): cstring		15185
nim	getMarkerPushCount	wrapper.html#getMarkerPushCount,orxS32_520095033	proc getMarkerPushCount(internal_s32MarkerID: orxS32_520095033): orxU32_520095025		15192
nim	isUniqueMarker	wrapper.html#isUniqueMarker,orxS32_520095033	proc isUniqueMarker(internal_s32MarkerID: orxS32_520095033): orxBOOL_520095039		15199
nim	getUniqueMarkerStartTime	wrapper.html#getUniqueMarkerStartTime,orxS32_520095033	proc getUniqueMarkerStartTime(internal_s32MarkerID: orxS32_520095033): orxDOUBLE_520095043		15206
nim	getUniqueMarkerDepth	wrapper.html#getUniqueMarkerDepth,orxS32_520095033	proc getUniqueMarkerDepth(internal_s32MarkerID: orxS32_520095033): orxU32_520095025		15213
nim	graphicSetup	wrapper.html#graphicSetup	proc graphicSetup(): void		15220
nim	graphicInit	wrapper.html#graphicInit	proc graphicInit(): orxSTATUS_520095067		15225
nim	graphicExit	wrapper.html#graphicExit	proc graphicExit(): void		15230
nim	getAlignFlags	wrapper.html#getAlignFlags,cstring	proc getAlignFlags(internal_zAlign: cstring): orxU32_520095025		15235
nim	alignVector	wrapper.html#alignVector,orxU32_520095025,ptr.orxAABOX_520095420,ptr.orxVECTOR_520095097	proc alignVector(internal_u32AlignFlags: orxU32_520095025;\n            internal_pstBox: ptr orxAABOX_520095420;\n            internal_pvValue: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		15242
nim	graphicCreate	wrapper.html#graphicCreate	proc graphicCreate(): ptr orxGRAPHIC_520095422		15250
nim	graphicCreateFromConfig	wrapper.html#graphicCreateFromConfig,cstring	proc graphicCreateFromConfig(internal_zConfigID: cstring): ptr orxGRAPHIC_520095422		15257
nim	graphicDelete	wrapper.html#graphicDelete,ptr.struct_orxGRAPHIC_t	proc graphicDelete(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxSTATUS_520095067		15264
nim	clone	wrapper.html#clone,ptr.struct_orxGRAPHIC_t	proc clone(internal_pstGraphic: ptr orxGRAPHIC_520095422): ptr orxGRAPHIC_520095422		15271
nim	setData	wrapper.html#setData,ptr.struct_orxGRAPHIC_t,ptr.orxSTRUCTURE_520095160	proc setData(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n        internal_pstData: ptr orxSTRUCTURE_520095160): orxSTATUS_520095067		15283
nim	getData	wrapper.html#getData,ptr.struct_orxGRAPHIC_t	proc getData(internal_pstGraphic: ptr orxGRAPHIC_520095422): ptr orxSTRUCTURE_520095160		15290
nim	setFlip	wrapper.html#setFlip,ptr.struct_orxGRAPHIC_t,orxBOOL_520095039,orxBOOL_520095039	proc setFlip(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n        internal_bFlipX: orxBOOL_520095039; internal_bFlipY: orxBOOL_520095039): orxSTATUS_520095067		15296
nim	getFlip	wrapper.html#getFlip,ptr.struct_orxGRAPHIC_t,ptr.orxBOOL_520095039,ptr.orxBOOL_520095039	proc getFlip(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n        internal_pbFlipX: ptr orxBOOL_520095039;\n        internal_pbFlipY: ptr orxBOOL_520095039): orxSTATUS_520095067		15303
nim	setPivot	wrapper.html#setPivot,ptr.struct_orxGRAPHIC_t,ptr.orxVECTOR_520095097	proc setPivot(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n         internal_pvPivot: ptr orxVECTOR_520095097): orxSTATUS_520095067		15311
nim	setRelativePivot	wrapper.html#setRelativePivot,ptr.struct_orxGRAPHIC_t,orxU32_520095025	proc setRelativePivot(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n                 internal_u32AlignFlags: orxU32_520095025): orxSTATUS_520095067		15318
nim	getPivot	wrapper.html#getPivot,ptr.struct_orxGRAPHIC_t,ptr.orxVECTOR_520095097	proc getPivot(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n         internal_pvPivot: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		15326
nim	setColor	wrapper.html#setColor,ptr.struct_orxGRAPHIC_t,ptr.orxCOLOR_520095308	proc setColor(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n         internal_pstColor: ptr orxCOLOR_520095308): orxSTATUS_520095067		15347
nim	setRepeat	wrapper.html#setRepeat,ptr.struct_orxGRAPHIC_t,orxFLOAT_520095041,orxFLOAT_520095041	proc setRepeat(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n          internal_fRepeatX: orxFLOAT_520095041;\n          internal_fRepeatY: orxFLOAT_520095041): orxSTATUS_520095067		15354
nim	clearColor	wrapper.html#clearColor,ptr.struct_orxGRAPHIC_t	proc clearColor(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxSTATUS_520095067		15362
nim	hasColor	wrapper.html#hasColor,ptr.struct_orxGRAPHIC_t	proc hasColor(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxBOOL_520095039		15368
nim	getColor	wrapper.html#getColor,ptr.struct_orxGRAPHIC_t,ptr.orxCOLOR_520095308	proc getColor(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n         internal_pstColor: ptr orxCOLOR_520095308): ptr orxCOLOR_520095308		15374
nim	getRepeat	wrapper.html#getRepeat,ptr.struct_orxGRAPHIC_t,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041	proc getRepeat(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n          internal_pfRepeatX: ptr orxFLOAT_520095041;\n          internal_pfRepeatY: ptr orxFLOAT_520095041): orxSTATUS_520095067		15381
nim	updateSize	wrapper.html#updateSize,ptr.struct_orxGRAPHIC_t	proc updateSize(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxSTATUS_520095067		15403
nim	setSmoothing	wrapper.html#setSmoothing,ptr.struct_orxGRAPHIC_t,orxDISPLAY_SMOOTHING_520095300	proc setSmoothing(internal_pstGraphic: ptr orxGRAPHIC_520095422;\n             internal_eSmoothing: orxDISPLAY_SMOOTHING_520095300): orxSTATUS_520095067		15409
nim	getSmoothing	wrapper.html#getSmoothing,ptr.struct_orxGRAPHIC_t	proc getSmoothing(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxDISPLAY_SMOOTHING_520095300		15416
nim	clearBlendMode	wrapper.html#clearBlendMode,ptr.struct_orxGRAPHIC_t	proc clearBlendMode(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxSTATUS_520095067		15429
nim	hasBlendMode	wrapper.html#hasBlendMode,ptr.struct_orxGRAPHIC_t	proc hasBlendMode(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxBOOL_520095039		15436
nim	getBlendMode	wrapper.html#getBlendMode,ptr.struct_orxGRAPHIC_t	proc getBlendMode(internal_pstGraphic: ptr orxGRAPHIC_520095422): orxDISPLAY_BLEND_MODE_520095304		15442
nim	screenshotSetup	wrapper.html#screenshotSetup	proc screenshotSetup(): void		15448
nim	screenshotInit	wrapper.html#screenshotInit	proc screenshotInit(): orxSTATUS_520095067		15454
nim	screenshotExit	wrapper.html#screenshotExit	proc screenshotExit(): void		15461
nim	capture	wrapper.html#capture	proc capture(): orxSTATUS_520095067		15467
nim	textSetup	wrapper.html#textSetup	proc textSetup(): void		15472
nim	textInit	wrapper.html#textInit	proc textInit(): orxSTATUS_520095067		15477
nim	textExit	wrapper.html#textExit	proc textExit(): void		15482
nim	textCreate	wrapper.html#textCreate	proc textCreate(): ptr orxTEXT_520095424		15487
nim	textCreateFromConfig	wrapper.html#textCreateFromConfig,cstring	proc textCreateFromConfig(internal_zConfigID: cstring): ptr orxTEXT_520095424		15492
nim	textDelete	wrapper.html#textDelete,ptr.struct_orxTEXT_t	proc textDelete(internal_pstText: ptr orxTEXT_520095424): orxSTATUS_520095067		15499
nim	getLineCount	wrapper.html#getLineCount,ptr.struct_orxTEXT_t	proc getLineCount(internal_pstText: ptr orxTEXT_520095424): orxU32_520095025		15511
nim	getLineSize	wrapper.html#getLineSize,ptr.struct_orxTEXT_t,orxU32_520095025,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041	proc getLineSize(internal_pstText: ptr orxTEXT_520095424;\n            internal_u32Line: orxU32_520095025;\n            internal_pfWidth: ptr orxFLOAT_520095041;\n            internal_pfHeight: ptr orxFLOAT_520095041): orxSTATUS_520095067		15517
nim	isFixedSize	wrapper.html#isFixedSize,ptr.struct_orxTEXT_t	proc isFixedSize(internal_pstText: ptr orxTEXT_520095424): orxBOOL_520095039		15526
nim	fileSetup	wrapper.html#fileSetup	proc fileSetup(): void		15574
nim	fileInit	wrapper.html#fileInit	proc fileInit(): orxSTATUS_520095067		15579
nim	fileExit	wrapper.html#fileExit	proc fileExit(): void		15584
nim	getHomeDirectory	wrapper.html#getHomeDirectory,cstring	proc getHomeDirectory(internal_zSubPath: cstring): cstring		15589
nim	getApplicationSaveDirectory	wrapper.html#getApplicationSaveDirectory,cstring	proc getApplicationSaveDirectory(internal_zSubPath: cstring): cstring		15596
nim	exists	wrapper.html#exists,cstring	proc exists(internal_zFileName: cstring): orxBOOL_520095039		15603
nim	findFirst	wrapper.html#findFirst,cstring,ptr.orxFILE_INFO_520095428	proc findFirst(internal_zSearchPattern: cstring;\n          internal_pstFileInfo: ptr orxFILE_INFO_520095428): orxSTATUS_520095067		15609
nim	findNext	wrapper.html#findNext,ptr.orxFILE_INFO_520095428	proc findNext(internal_pstFileInfo: ptr orxFILE_INFO_520095428): orxSTATUS_520095067		15616
nim	findClose	wrapper.html#findClose,ptr.orxFILE_INFO_520095428	proc findClose(internal_pstFileInfo: ptr orxFILE_INFO_520095428): void		15622
nim	makeDirectory	wrapper.html#makeDirectory,cstring	proc makeDirectory(internal_zName: cstring): orxSTATUS_520095067		15641
nim	fileDelete	wrapper.html#fileDelete,cstring	proc fileDelete(internal_zFileName: cstring): orxSTATUS_520095067		15669
nim	print	wrapper.html#print,ptr.struct_orxFILE_t,cstring	proc print(internal_pstFile: ptr orxFILE_520095430; internal_zString: cstring): orxS32_520095033		15701
nim	paramSetup	wrapper.html#paramSetup	proc paramSetup(): void		15713
nim	paramInit	wrapper.html#paramInit	proc paramInit(): orxSTATUS_520095067		15718
nim	paramExit	wrapper.html#paramExit	proc paramExit(): void		15723
nim	paramRegister	wrapper.html#paramRegister,ptr.orxPARAM_520095436	proc paramRegister(internal_pstParam: ptr orxPARAM_520095436): orxSTATUS_520095067		15728
nim	displayHelp	wrapper.html#displayHelp	proc displayHelp(): orxSTATUS_520095067		15735
nim	setArgs	wrapper.html#setArgs,orxU32_520095025,ptr.UncheckedArray[cstring]	proc setArgs(internal_u32NbParams: orxU32_520095025;\n        internal_azParams: ptr UncheckedArray[cstring]): orxSTATUS_520095067		15741
nim	soundSystemSetup	wrapper.html#soundSystemSetup	proc soundSystemSetup(): void		15748
nim	soundSystemInit	wrapper.html#soundSystemInit	proc soundSystemInit(): orxSTATUS_520095067		15754
nim	soundSystemExit	wrapper.html#soundSystemExit	proc soundSystemExit(): void		15761
nim	orxSoundSystem_CreateSample	wrapper.html#orxSoundSystem_CreateSample,orxU32_520095025,orxU32_520095025,orxU32_520095025	proc orxSoundSystem_CreateSample(internal_u32ChannelNumber: orxU32_520095025;\n                            internal_u32FrameNumber: orxU32_520095025;\n                            internal_u32SampleRate: orxU32_520095025): ptr orxSOUNDSYSTEM_SAMPLE_520095440		15767
nim	orxSoundSystem_LoadSample	wrapper.html#orxSoundSystem_LoadSample,cstring	proc orxSoundSystem_LoadSample(internal_zFilename: cstring): ptr orxSOUNDSYSTEM_SAMPLE_520095440		15776
nim	orxSoundSystem_DeleteSample	wrapper.html#orxSoundSystem_DeleteSample,ptr.struct_orxSOUNDSYSTEM_SAMPLE_t	proc orxSoundSystem_DeleteSample(internal_pstSample: ptr orxSOUNDSYSTEM_SAMPLE_520095440): orxSTATUS_520095067		15783
nim	orxSoundSystem_GetSampleInfo	wrapper.html#orxSoundSystem_GetSampleInfo,ptr.struct_orxSOUNDSYSTEM_SAMPLE_t,ptr.orxU32_520095025,ptr.orxU32_520095025,ptr.orxU32_520095025	proc orxSoundSystem_GetSampleInfo(internal_pstSample: ptr orxSOUNDSYSTEM_SAMPLE_520095440;\n                             internal_pu32ChannelNumber: ptr orxU32_520095025;\n                             internal_pu32FrameNumber: ptr orxU32_520095025;\n                             internal_pu32SampleRate: ptr orxU32_520095025): orxSTATUS_520095067		15790
nim	orxSoundSystem_SetSampleData	wrapper.html#orxSoundSystem_SetSampleData,ptr.struct_orxSOUNDSYSTEM_SAMPLE_t,ptr.orxFLOAT_520095041,orxU32_520095025	proc orxSoundSystem_SetSampleData(internal_pstSample: ptr orxSOUNDSYSTEM_SAMPLE_520095440;\n                             internal_afData: ptr orxFLOAT_520095041;\n                             internal_u32SampleNumber: orxU32_520095025): orxSTATUS_520095067		15800
nim	orxSoundSystem_CreateFromSample	wrapper.html#orxSoundSystem_CreateFromSample,orxHANDLE_520095051,ptr.struct_orxSOUNDSYSTEM_SAMPLE_t	proc orxSoundSystem_CreateFromSample(internal_hUserData: orxHANDLE_520095051;\n    internal_pstSample: ptr orxSOUNDSYSTEM_SAMPLE_520095440): ptr orxSOUNDSYSTEM_SOUND_520095438		15809
nim	orxSoundSystem_CreateStream	wrapper.html#orxSoundSystem_CreateStream,orxHANDLE_520095051,orxSOUNDSYSTEM_STREAM_TYPE_520095444,orxU32_520095025,orxU32_520095025	proc orxSoundSystem_CreateStream(internal_hUserData: orxHANDLE_520095051;\n    internal_eType: orxSOUNDSYSTEM_STREAM_TYPE_520095444;\n                            internal_u32ChannelNumber: orxU32_520095025;\n                            internal_u32SampleRate: orxU32_520095025): ptr orxSOUNDSYSTEM_SOUND_520095438		15817
nim	orxSoundSystem_LoadStream	wrapper.html#orxSoundSystem_LoadStream,orxHANDLE_520095051,cstring	proc orxSoundSystem_LoadStream(internal_hUserData: orxHANDLE_520095051;\n                          internal_zFilename: cstring): ptr orxSOUNDSYSTEM_SOUND_520095438		15827
nim	soundSystemDelete	wrapper.html#soundSystemDelete,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc soundSystemDelete(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxSTATUS_520095067		15835
nim	orxSoundSystem_Play	wrapper.html#orxSoundSystem_Play,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_Play(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxSTATUS_520095067		15842
nim	orxSoundSystem_Pause	wrapper.html#orxSoundSystem_Pause,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_Pause(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxSTATUS_520095067		15849
nim	orxSoundSystem_Stop	wrapper.html#orxSoundSystem_Stop,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_Stop(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxSTATUS_520095067		15856
nim	orxSoundSystem_AddFilter	wrapper.html#orxSoundSystem_AddFilter,ptr.struct_orxSOUNDSYSTEM_SOUND_t,ptr.orxSOUND_FILTER_DATA_520095458,orxBOOL_520095039	proc orxSoundSystem_AddFilter(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n    internal_pstFilterData: ptr orxSOUND_FILTER_DATA_520095458;\n                         internal_bUseCustomParam: orxBOOL_520095039): orxSTATUS_520095067		15863
nim	orxSoundSystem_RemoveLastFilter	wrapper.html#orxSoundSystem_RemoveLastFilter,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_RemoveLastFilter(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxSTATUS_520095067		15872
nim	orxSoundSystem_RemoveAllFilters	wrapper.html#orxSoundSystem_RemoveAllFilters,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_RemoveAllFilters(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxSTATUS_520095067		15879
nim	orxSoundSystem_CreateBus	wrapper.html#orxSoundSystem_CreateBus,orxU64_520095023	proc orxSoundSystem_CreateBus(internal_stBusID: orxSTRINGID_520095047): orxHANDLE_520095051		15886
nim	orxSoundSystem_DeleteBus	wrapper.html#orxSoundSystem_DeleteBus,orxHANDLE_520095051	proc orxSoundSystem_DeleteBus(internal_hBus: orxHANDLE_520095051): orxSTATUS_520095067		15893
nim	orxSoundSystem_SetBus	wrapper.html#orxSoundSystem_SetBus,ptr.struct_orxSOUNDSYSTEM_SOUND_t,orxHANDLE_520095051	proc orxSoundSystem_SetBus(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                      internal_hBus: orxHANDLE_520095051): orxSTATUS_520095067		15900
nim	orxSoundSystem_SetBusParent	wrapper.html#orxSoundSystem_SetBusParent,orxHANDLE_520095051,orxHANDLE_520095051	proc orxSoundSystem_SetBusParent(internal_hBus: orxHANDLE_520095051;\n                            internal_hParentBus: orxHANDLE_520095051): orxSTATUS_520095067		15908
nim	orxSoundSystem_AddBusFilter	wrapper.html#orxSoundSystem_AddBusFilter,orxHANDLE_520095051,ptr.orxSOUND_FILTER_DATA_520095458,orxBOOL_520095039	proc orxSoundSystem_AddBusFilter(internal_hBus: orxHANDLE_520095051;\n    internal_pstFilterData: ptr orxSOUND_FILTER_DATA_520095458;\n                            internal_bUseCustomParam: orxBOOL_520095039): orxSTATUS_520095067		15916
nim	orxSoundSystem_RemoveLastBusFilter	wrapper.html#orxSoundSystem_RemoveLastBusFilter,orxHANDLE_520095051	proc orxSoundSystem_RemoveLastBusFilter(internal_hBus: orxHANDLE_520095051): orxSTATUS_520095067		15925
nim	orxSoundSystem_RemoveAllBusFilters	wrapper.html#orxSoundSystem_RemoveAllBusFilters,orxHANDLE_520095051	proc orxSoundSystem_RemoveAllBusFilters(internal_hBus: orxHANDLE_520095051): orxSTATUS_520095067		15932
nim	orxSoundSystem_StartRecording	wrapper.html#orxSoundSystem_StartRecording,cstring,orxBOOL_520095039,orxU32_520095025,orxU32_520095025	proc orxSoundSystem_StartRecording(internal_zName: cstring;\n                              internal_bWriteToFile: orxBOOL_520095039;\n                              internal_u32SampleRate: orxU32_520095025;\n                              internal_u32ChannelNumber: orxU32_520095025): orxSTATUS_520095067		15939
nim	orxSoundSystem_StopRecording	wrapper.html#orxSoundSystem_StopRecording	proc orxSoundSystem_StopRecording(): orxSTATUS_520095067		15949
nim	orxSoundSystem_HasRecordingSupport	wrapper.html#orxSoundSystem_HasRecordingSupport	proc orxSoundSystem_HasRecordingSupport(): orxBOOL_520095039		15956
nim	orxSoundSystem_SetVolume	wrapper.html#orxSoundSystem_SetVolume,ptr.struct_orxSOUNDSYSTEM_SOUND_t,orxFLOAT_520095041	proc orxSoundSystem_SetVolume(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                         internal_fVolume: orxFLOAT_520095041): orxSTATUS_520095067		15963
nim	orxSoundSystem_SetPitch	wrapper.html#orxSoundSystem_SetPitch,ptr.struct_orxSOUNDSYSTEM_SOUND_t,orxFLOAT_520095041	proc orxSoundSystem_SetPitch(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                        internal_fPitch: orxFLOAT_520095041): orxSTATUS_520095067		15971
nim	orxSoundSystem_SetTime	wrapper.html#orxSoundSystem_SetTime,ptr.struct_orxSOUNDSYSTEM_SOUND_t,orxFLOAT_520095041	proc orxSoundSystem_SetTime(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                       internal_fTime: orxFLOAT_520095041): orxSTATUS_520095067		15979
nim	orxSoundSystem_SetPosition	wrapper.html#orxSoundSystem_SetPosition,ptr.struct_orxSOUNDSYSTEM_SOUND_t,ptr.orxVECTOR_520095097	proc orxSoundSystem_SetPosition(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                           internal_pvPosition: ptr orxVECTOR_520095097): orxSTATUS_520095067		15987
nim	orxSoundSystem_SetSpatialization	wrapper.html#orxSoundSystem_SetSpatialization,ptr.struct_orxSOUNDSYSTEM_SOUND_t,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041	proc orxSoundSystem_SetSpatialization(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                                 internal_fMinDistance: orxFLOAT_520095041;\n                                 internal_fMaxDistance: orxFLOAT_520095041;\n                                 internal_fMinGain: orxFLOAT_520095041;\n                                 internal_fMaxGain: orxFLOAT_520095041;\n                                 internal_fRollOff: orxFLOAT_520095041): orxSTATUS_520095067		15995
nim	orxSoundSystem_SetPanning	wrapper.html#orxSoundSystem_SetPanning,ptr.struct_orxSOUNDSYSTEM_SOUND_t,orxFLOAT_520095041,orxBOOL_520095039	proc orxSoundSystem_SetPanning(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                          internal_fPanning: orxFLOAT_520095041;\n                          internal_bMix: orxBOOL_520095039): orxSTATUS_520095067		16006
nim	orxSoundSystem_Loop	wrapper.html#orxSoundSystem_Loop,ptr.struct_orxSOUNDSYSTEM_SOUND_t,orxBOOL_520095039	proc orxSoundSystem_Loop(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                    internal_bLoop: orxBOOL_520095039): orxSTATUS_520095067		16015
nim	orxSoundSystem_GetVolume	wrapper.html#orxSoundSystem_GetVolume,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_GetVolume(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxFLOAT_520095041		16023
nim	orxSoundSystem_GetPitch	wrapper.html#orxSoundSystem_GetPitch,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_GetPitch(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxFLOAT_520095041		16030
nim	orxSoundSystem_GetTime	wrapper.html#orxSoundSystem_GetTime,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_GetTime(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxFLOAT_520095041		16037
nim	orxSoundSystem_GetPosition	wrapper.html#orxSoundSystem_GetPosition,ptr.struct_orxSOUNDSYSTEM_SOUND_t,ptr.orxVECTOR_520095097	proc orxSoundSystem_GetPosition(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                           internal_pvPosition: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		16044
nim	orxSoundSystem_GetSpatialization	wrapper.html#orxSoundSystem_GetSpatialization,ptr.struct_orxSOUNDSYSTEM_SOUND_t,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041	proc orxSoundSystem_GetSpatialization(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n    internal_pfMinDistance: ptr orxFLOAT_520095041; internal_pfMaxDistance: ptr orxFLOAT_520095041;\n                                 internal_pfMinGain: ptr orxFLOAT_520095041;\n                                 internal_pfMaxGain: ptr orxFLOAT_520095041;\n                                 internal_pfRollOff: ptr orxFLOAT_520095041): orxSTATUS_520095067		16052
nim	orxSoundSystem_GetPanning	wrapper.html#orxSoundSystem_GetPanning,ptr.struct_orxSOUNDSYSTEM_SOUND_t,ptr.orxFLOAT_520095041,ptr.orxBOOL_520095039	proc orxSoundSystem_GetPanning(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438;\n                          internal_pfPanning: ptr orxFLOAT_520095041;\n                          internal_pbMix: ptr orxBOOL_520095039): orxSTATUS_520095067		16065
nim	orxSoundSystem_IsLooping	wrapper.html#orxSoundSystem_IsLooping,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_IsLooping(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxBOOL_520095039		16074
nim	orxSoundSystem_GetDuration	wrapper.html#orxSoundSystem_GetDuration,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_GetDuration(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxFLOAT_520095041		16081
nim	orxSoundSystem_GetStatus	wrapper.html#orxSoundSystem_GetStatus,ptr.struct_orxSOUNDSYSTEM_SOUND_t	proc orxSoundSystem_GetStatus(internal_pstSound: ptr orxSOUNDSYSTEM_SOUND_520095438): orxSOUNDSYSTEM_STATUS_520095448		16088
nim	orxSoundSystem_SetGlobalVolume	wrapper.html#orxSoundSystem_SetGlobalVolume,orxFLOAT_520095041	proc orxSoundSystem_SetGlobalVolume(internal_fGlobalVolume: orxFLOAT_520095041): orxSTATUS_520095067		16095
nim	orxSoundSystem_GetGlobalVolume	wrapper.html#orxSoundSystem_GetGlobalVolume	proc orxSoundSystem_GetGlobalVolume(): orxFLOAT_520095041		16102
nim	orxSoundSystem_GetListenerCount	wrapper.html#orxSoundSystem_GetListenerCount	proc orxSoundSystem_GetListenerCount(): orxU32_520095025		16109
nim	orxSoundSystem_EnableListener	wrapper.html#orxSoundSystem_EnableListener,orxU32_520095025,orxBOOL_520095039	proc orxSoundSystem_EnableListener(internal_u32ListenerIndex: orxU32_520095025;\n                              internal_bEnable: orxBOOL_520095039): void		16116
nim	orxSoundSystem_IsListenerEnabled	wrapper.html#orxSoundSystem_IsListenerEnabled,orxU32_520095025	proc orxSoundSystem_IsListenerEnabled(internal_u32ListenerIndex: orxU32_520095025): orxBOOL_520095039		16124
nim	orxSoundSystem_SetListenerPosition	wrapper.html#orxSoundSystem_SetListenerPosition,orxU32_520095025,ptr.orxVECTOR_520095097	proc orxSoundSystem_SetListenerPosition(internal_u32Index: orxU32_520095025;\n                                   internal_pvPosition: ptr orxVECTOR_520095097): orxSTATUS_520095067		16131
nim	orxSoundSystem_GetListenerPosition	wrapper.html#orxSoundSystem_GetListenerPosition,orxU32_520095025,ptr.orxVECTOR_520095097	proc orxSoundSystem_GetListenerPosition(internal_u32Index: orxU32_520095025;\n                                   internal_pvPosition: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		16139
nim	soundSetup	wrapper.html#soundSetup	proc soundSetup(): void		16147
nim	soundInit	wrapper.html#soundInit	proc soundInit(): orxSTATUS_520095067		16152
nim	soundExit	wrapper.html#soundExit	proc soundExit(): void		16157
nim	soundCreate	wrapper.html#soundCreate	proc soundCreate(): ptr orxSOUND_520095464		16162
nim	soundCreateFromConfig	wrapper.html#soundCreateFromConfig,cstring	proc soundCreateFromConfig(internal_zConfigID: cstring): ptr orxSOUND_520095464		16168
nim	createWithEmptyStream	wrapper.html#createWithEmptyStream,orxU32_520095025,orxU32_520095025,cstring	proc createWithEmptyStream(internal_u32ChannelNumber: orxU32_520095025;\n                      internal_u32SampleRate: orxU32_520095025;\n                      internal_zName: cstring): ptr orxSOUND_520095464		16175
nim	soundDelete	wrapper.html#soundDelete,ptr.struct_orxSOUND_t	proc soundDelete(internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		16184
nim	createSample	wrapper.html#createSample,orxU32_520095025,orxU32_520095025,orxU32_520095025,cstring	proc createSample(internal_u32ChannelNumber: orxU32_520095025;\n             internal_u32FrameNumber: orxU32_520095025;\n             internal_u32SampleRate: orxU32_520095025; internal_zName: cstring): ptr orxSOUND_SAMPLE_520095466		16196
nim	deleteSample	wrapper.html#deleteSample,ptr.struct_orxSOUND_SAMPLE_t	proc deleteSample(internal_pstSample: ptr orxSOUND_SAMPLE_520095466): orxSTATUS_520095067		16205
nim	getSampleInfo	wrapper.html#getSampleInfo,ptr.struct_orxSOUND_SAMPLE_t,ptr.orxU32_520095025,ptr.orxU32_520095025,ptr.orxU32_520095025	proc getSampleInfo(internal_pstSample: ptr orxSOUND_SAMPLE_520095466;\n              internal_pu32ChannelNumber: ptr orxU32_520095025;\n              internal_pu32FrameNumber: ptr orxU32_520095025;\n              internal_pu32SampleRate: ptr orxU32_520095025): orxSTATUS_520095067		16211
nim	setSampleData	wrapper.html#setSampleData,ptr.struct_orxSOUND_SAMPLE_t,ptr.orxFLOAT_520095041,orxU32_520095025	proc setSampleData(internal_pstSample: ptr orxSOUND_SAMPLE_520095466;\n              internal_afData: ptr orxFLOAT_520095041;\n              internal_u32SampleNumber: orxU32_520095025): orxSTATUS_520095067		16221
nim	linkSample	wrapper.html#linkSample,ptr.struct_orxSOUND_t,cstring	proc linkSample(internal_pstSound: ptr orxSOUND_520095464;\n           internal_zSampleName: cstring): orxSTATUS_520095067		16230
nim	unlinkSample	wrapper.html#unlinkSample,ptr.struct_orxSOUND_t	proc unlinkSample(internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		16237
nim	isStream	wrapper.html#isStream,ptr.struct_orxSOUND_t	proc isStream(internal_pstSound: ptr orxSOUND_520095464): orxBOOL_520095039		16243
nim	play	wrapper.html#play,ptr.struct_orxSOUND_t	proc play(internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		16249
nim	stop	wrapper.html#stop,ptr.struct_orxSOUND_t	proc stop(internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		16261
nim	addFilter	wrapper.html#addFilter,ptr.struct_orxSOUND_t,ptr.orxSOUND_FILTER_DATA_520095458,orxBOOL_520095039	proc addFilter(internal_pstSound: ptr orxSOUND_520095464;\n          internal_pstFilterData: ptr orxSOUND_FILTER_DATA_520095458;\n          internal_bUseCustomParam: orxBOOL_520095039): orxSTATUS_520095067		16267
nim	removeLastFilter	wrapper.html#removeLastFilter,ptr.struct_orxSOUND_t	proc removeLastFilter(internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		16275
nim	removeAllFilters	wrapper.html#removeAllFilters,ptr.struct_orxSOUND_t	proc removeAllFilters(internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		16282
nim	addFilterFromConfig	wrapper.html#addFilterFromConfig,ptr.struct_orxSOUND_t,cstring	proc addFilterFromConfig(internal_pstSound: ptr orxSOUND_520095464;\n                    internal_zFilterConfigID: cstring): orxSTATUS_520095067		16289
nim	startRecording	wrapper.html#startRecording,cstring,orxBOOL_520095039,orxU32_520095025,orxU32_520095025	proc startRecording(internal_zName: cstring;\n               internal_bWriteToFile: orxBOOL_520095039;\n               internal_u32SampleRate: orxU32_520095025;\n               internal_u32ChannelNumber: orxU32_520095025): orxSTATUS_520095067		16297
nim	stopRecording	wrapper.html#stopRecording	proc stopRecording(): orxSTATUS_520095067		16306
nim	hasRecordingSupport	wrapper.html#hasRecordingSupport	proc hasRecordingSupport(): orxBOOL_520095039		16313
nim	setVolume	wrapper.html#setVolume,ptr.struct_orxSOUND_t,orxFLOAT_520095041	proc setVolume(internal_pstSound: ptr orxSOUND_520095464;\n          internal_fVolume: orxFLOAT_520095041): orxSTATUS_520095067		16320
nim	setPitch	wrapper.html#setPitch,ptr.struct_orxSOUND_t,orxFLOAT_520095041	proc setPitch(internal_pstSound: ptr orxSOUND_520095464;\n         internal_fPitch: orxFLOAT_520095041): orxSTATUS_520095067		16327
nim	setTime	wrapper.html#setTime,ptr.struct_orxSOUND_t,orxFLOAT_520095041	proc setTime(internal_pstSound: ptr orxSOUND_520095464;\n        internal_fTime: orxFLOAT_520095041): orxSTATUS_520095067		16334
nim	setSpatialization	wrapper.html#setSpatialization,ptr.struct_orxSOUND_t,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041	proc setSpatialization(internal_pstSound: ptr orxSOUND_520095464;\n                  internal_fMinDistance: orxFLOAT_520095041;\n                  internal_fMaxDistance: orxFLOAT_520095041;\n                  internal_fMinGain: orxFLOAT_520095041;\n                  internal_fMaxGain: orxFLOAT_520095041;\n                  internal_fRollOff: orxFLOAT_520095041): orxSTATUS_520095067		16348
nim	setPanning	wrapper.html#setPanning,ptr.struct_orxSOUND_t,orxFLOAT_520095041,orxBOOL_520095039	proc setPanning(internal_pstSound: ptr orxSOUND_520095464;\n           internal_fPanning: orxFLOAT_520095041;\n           internal_bMix: orxBOOL_520095039): orxSTATUS_520095067		16360
nim	loop	wrapper.html#loop,ptr.struct_orxSOUND_t,orxBOOL_520095039	proc loop(internal_pstSound: ptr orxSOUND_520095464;\n     internal_bLoop: orxBOOL_520095039): orxSTATUS_520095067		16367
nim	getVolume	wrapper.html#getVolume,ptr.struct_orxSOUND_t	proc getVolume(internal_pstSound: ptr orxSOUND_520095464): orxFLOAT_520095041		16373
nim	getPitch	wrapper.html#getPitch,ptr.struct_orxSOUND_t	proc getPitch(internal_pstSound: ptr orxSOUND_520095464): orxFLOAT_520095041		16379
nim	getSpatialization	wrapper.html#getSpatialization,ptr.struct_orxSOUND_t,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041	proc getSpatialization(internal_pstSound: ptr orxSOUND_520095464;\n                  internal_pfMinDistance: ptr orxFLOAT_520095041;\n                  internal_pfMaxDistance: ptr orxFLOAT_520095041;\n                  internal_pfMinGain: ptr orxFLOAT_520095041;\n                  internal_pfMaxGain: ptr orxFLOAT_520095041;\n                  internal_pfRollOff: ptr orxFLOAT_520095041): orxSTATUS_520095067		16398
nim	getPanning	wrapper.html#getPanning,ptr.struct_orxSOUND_t,ptr.orxFLOAT_520095041,ptr.orxBOOL_520095039	proc getPanning(internal_pstSound: ptr orxSOUND_520095464;\n           internal_pfPanning: ptr orxFLOAT_520095041;\n           internal_pbMix: ptr orxBOOL_520095039): orxSTATUS_520095067		16410
nim	isLooping	wrapper.html#isLooping,ptr.struct_orxSOUND_t	proc isLooping(internal_pstSound: ptr orxSOUND_520095464): orxBOOL_520095039		16418
nim	getDuration	wrapper.html#getDuration,ptr.struct_orxSOUND_t	proc getDuration(internal_pstSound: ptr orxSOUND_520095464): orxFLOAT_520095041		16424
nim	getStatus	wrapper.html#getStatus,ptr.struct_orxSOUND_t	proc getStatus(internal_pstSound: ptr orxSOUND_520095464): orxSOUND_STATUS_520095462		16430
nim	getMasterBusID	wrapper.html#getMasterBusID	proc getMasterBusID(): orxSTRINGID_520095047		16442
nim	getBusID	wrapper.html#getBusID,ptr.struct_orxSOUND_t	proc getBusID(internal_pstSound: ptr orxSOUND_520095464): orxSTRINGID_520095047		16449
nim	setBusID	wrapper.html#setBusID,ptr.struct_orxSOUND_t,orxU64_520095023	proc setBusID(internal_pstSound: ptr orxSOUND_520095464;\n         internal_stBusID: orxSTRINGID_520095047): orxSTATUS_520095067		16455
nim	getBusParent	wrapper.html#getBusParent,orxU64_520095023	proc getBusParent(internal_stBusID: orxSTRINGID_520095047): orxSTRINGID_520095047		16469
nim	getBusChild	wrapper.html#getBusChild,orxU64_520095023	proc getBusChild(internal_stBusID: orxSTRINGID_520095047): orxSTRINGID_520095047		16475
nim	getBusSibling	wrapper.html#getBusSibling,orxU64_520095023	proc getBusSibling(internal_stBusID: orxSTRINGID_520095047): orxSTRINGID_520095047		16481
nim	setBusParent	wrapper.html#setBusParent,orxU64_520095023,orxU64_520095023	proc setBusParent(internal_stBusID: orxSTRINGID_520095047;\n             internal_stParentBusID: orxSTRINGID_520095047): orxSTATUS_520095067		16488
nim	getBusVolume	wrapper.html#getBusVolume,orxU64_520095023	proc getBusVolume(internal_stBusID: orxSTRINGID_520095047): orxFLOAT_520095041		16495
nim	getBusPitch	wrapper.html#getBusPitch,orxU64_520095023	proc getBusPitch(internal_stBusID: orxSTRINGID_520095047): orxFLOAT_520095041		16501
nim	setBusVolume	wrapper.html#setBusVolume,orxU64_520095023,orxFLOAT_520095041	proc setBusVolume(internal_stBusID: orxSTRINGID_520095047;\n             internal_fVolume: orxFLOAT_520095041): orxSTATUS_520095067		16507
nim	setBusPitch	wrapper.html#setBusPitch,orxU64_520095023,orxFLOAT_520095041	proc setBusPitch(internal_stBusID: orxSTRINGID_520095047;\n            internal_fPitch: orxFLOAT_520095041): orxSTATUS_520095067		16514
nim	getBusGlobalVolume	wrapper.html#getBusGlobalVolume,orxU64_520095023	proc getBusGlobalVolume(internal_stBusID: orxSTRINGID_520095047): orxFLOAT_520095041		16521
nim	getBusGlobalPitch	wrapper.html#getBusGlobalPitch,orxU64_520095023	proc getBusGlobalPitch(internal_stBusID: orxSTRINGID_520095047): orxFLOAT_520095041		16528
nim	addBusFilter	wrapper.html#addBusFilter,orxU64_520095023,ptr.orxSOUND_FILTER_DATA_520095458,orxBOOL_520095039	proc addBusFilter(internal_stBusID: orxSTRINGID_520095047;\n             internal_pstFilterData: ptr orxSOUND_FILTER_DATA_520095458;\n             internal_bUseCustomParam: orxBOOL_520095039): orxSTATUS_520095067		16535
nim	removeLastBusFilter	wrapper.html#removeLastBusFilter,orxU64_520095023	proc removeLastBusFilter(internal_stBusID: orxSTRINGID_520095047): orxSTATUS_520095067		16543
nim	removeAllBusFilters	wrapper.html#removeAllBusFilters,orxU64_520095023	proc removeAllBusFilters(internal_stBusID: orxSTRINGID_520095047): orxSTATUS_520095067		16550
nim	addBusFilterFromConfig	wrapper.html#addBusFilterFromConfig,orxU64_520095023,cstring	proc addBusFilterFromConfig(internal_stBusID: orxSTRINGID_520095047;\n                       internal_zFilterConfigID: cstring): orxSTATUS_520095067		16557
nim	objectSetup	wrapper.html#objectSetup	proc objectSetup(): void		16565
nim	objectInit	wrapper.html#objectInit	proc objectInit(): orxSTATUS_520095067		16570
nim	objectExit	wrapper.html#objectExit	proc objectExit(): void		16575
nim	objectCreate	wrapper.html#objectCreate	proc objectCreate(): ptr orxOBJECT_520095488		16580
nim	objectCreateFromConfig	wrapper.html#objectCreateFromConfig,cstring	proc objectCreateFromConfig(internal_zConfigID: cstring): ptr orxOBJECT_520095488		16586
nim	objectDelete	wrapper.html#objectDelete,ptr.struct_orxOBJECT_t	proc objectDelete(internal_pstObject: ptr orxOBJECT_520095488): orxSTATUS_520095067		16593
nim	objectUpdate	wrapper.html#objectUpdate,ptr.struct_orxOBJECT_t,ptr.orxCLOCK_INFO_520095124	proc objectUpdate(internal_pstObject: ptr orxOBJECT_520095488;\n             internal_pstClockInfo: ptr orxCLOCK_INFO_520095124): orxSTATUS_520095067		16599
nim	enableRecursive	wrapper.html#enableRecursive,ptr.struct_orxOBJECT_t,orxBOOL_520095039	proc enableRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                internal_bEnable: orxBOOL_520095039): void		16613
nim	pauseRecursive	wrapper.html#pauseRecursive,ptr.struct_orxOBJECT_t,orxBOOL_520095039	proc pauseRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_bPause: orxBOOL_520095039): void		16634
nim	setUserData	wrapper.html#setUserData,ptr.struct_orxOBJECT_t,pointer	proc setUserData(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_pUserData: pointer): void		16648
nim	getUserData	wrapper.html#getUserData,ptr.struct_orxOBJECT_t	proc getUserData(internal_pstObject: ptr orxOBJECT_520095488): pointer		16655
nim	getOwnedChild	wrapper.html#getOwnedChild,ptr.struct_orxOBJECT_t	proc getOwnedChild(internal_pstObject: ptr orxOBJECT_520095488): ptr orxOBJECT_520095488		16674
nim	getOwnedSibling	wrapper.html#getOwnedSibling,ptr.struct_orxOBJECT_t	proc getOwnedSibling(internal_pstObject: ptr orxOBJECT_520095488): ptr orxOBJECT_520095488		16681
nim	findOwnedChild	wrapper.html#findOwnedChild,ptr.struct_orxOBJECT_t,cstring	proc findOwnedChild(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_zPath: cstring): ptr orxOBJECT_520095488		16688
nim	setClock	wrapper.html#setClock,ptr.struct_orxOBJECT_t,ptr.struct_orxCLOCK_t	proc setClock(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_pstClock: ptr orxCLOCK_520095130): orxSTATUS_520095067		16696
nim	setClockRecursive	wrapper.html#setClockRecursive,ptr.struct_orxOBJECT_t,ptr.struct_orxCLOCK_t	proc setClockRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                  internal_pstClock: ptr orxCLOCK_520095130): void		16703
nim	getClock	wrapper.html#getClock,ptr.struct_orxOBJECT_t	proc getClock(internal_pstObject: ptr orxOBJECT_520095488): ptr orxCLOCK_520095130		16711
nim	linkStructure	wrapper.html#linkStructure,ptr.struct_orxOBJECT_t,ptr.orxSTRUCTURE_520095160	proc linkStructure(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_pstStructure: ptr orxSTRUCTURE_520095160): orxSTATUS_520095067		16717
nim	unlinkStructure	wrapper.html#unlinkStructure,ptr.struct_orxOBJECT_t,orxSTRUCTURE_ID_520095152	proc unlinkStructure(internal_pstObject: ptr orxOBJECT_520095488;\n                internal_eStructureID: orxSTRUCTURE_ID_520095152): void		16725
nim	internal_orxObject_GetStructure	wrapper.html#internal_orxObject_GetStructure,ptr.struct_orxOBJECT_t,orxSTRUCTURE_ID_520095152	proc internal_orxObject_GetStructure(internal_pstObject: ptr orxOBJECT_520095488;\n    internal_eStructureID: orxSTRUCTURE_ID_520095152): ptr orxSTRUCTURE_520095160		16733
nim	setWorldPosition	wrapper.html#setWorldPosition,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setWorldPosition(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_pvPosition: ptr orxVECTOR_520095097): orxSTATUS_520095067		16813
nim	setRotation	wrapper.html#setRotation,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setRotation(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_fRotation: orxFLOAT_520095041): orxSTATUS_520095067		16821
nim	setWorldRotation	wrapper.html#setWorldRotation,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setWorldRotation(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_fRotation: orxFLOAT_520095041): orxSTATUS_520095067		16828
nim	setScale	wrapper.html#setScale,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setScale(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_pvScale: ptr orxVECTOR_520095097): orxSTATUS_520095067		16836
nim	setWorldScale	wrapper.html#setWorldScale,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setWorldScale(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_pvScale: ptr orxVECTOR_520095097): orxSTATUS_520095067		16843
nim	getWorldPosition	wrapper.html#getWorldPosition,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getWorldPosition(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_pvPosition: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		16858
nim	getRotation	wrapper.html#getRotation,ptr.struct_orxOBJECT_t	proc getRotation(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		16866
nim	getWorldRotation	wrapper.html#getWorldRotation,ptr.struct_orxOBJECT_t	proc getWorldRotation(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		16872
nim	getScale	wrapper.html#getScale,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getScale(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_pvScale: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		16879
nim	getWorldScale	wrapper.html#getWorldScale,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getWorldScale(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_pvScale: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		16886
nim	getNextChild	wrapper.html#getNextChild,ptr.struct_orxOBJECT_t,pointer,orxSTRUCTURE_ID_520095152	proc getNextChild(internal_pstObject: ptr orxOBJECT_520095488;\n             internal_pChild: pointer;\n             internal_eStructureID: orxSTRUCTURE_ID_520095152): ptr orxSTRUCTURE_520095160		16919
nim	findChild	wrapper.html#findChild,ptr.struct_orxOBJECT_t,cstring	proc findChild(internal_pstObject: ptr orxOBJECT_520095488; internal_zPath: cstring): ptr orxOBJECT_520095488		16927
nim	attach	wrapper.html#attach,ptr.struct_orxOBJECT_t,pointer	proc attach(internal_pstObject: ptr orxOBJECT_520095488; internal_pParent: pointer): orxSTATUS_520095067		16934
nim	detach	wrapper.html#detach,ptr.struct_orxOBJECT_t	proc detach(internal_pstObject: ptr orxOBJECT_520095488): orxSTATUS_520095067		16941
nim	setIgnoreFlags	wrapper.html#setIgnoreFlags,ptr.struct_orxOBJECT_t,orxU32_520095025	proc setIgnoreFlags(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_u32IgnoreFlags: orxU32_520095025): orxSTATUS_520095067		16947
nim	setLiteralIgnoreFlags	wrapper.html#setLiteralIgnoreFlags,ptr.struct_orxOBJECT_t,cstring	proc setLiteralIgnoreFlags(internal_pstObject: ptr orxOBJECT_520095488;\n                      internal_zIgnoreFlags: cstring): orxSTATUS_520095067		16955
nim	getIgnoreFlags	wrapper.html#getIgnoreFlags,ptr.struct_orxOBJECT_t	proc getIgnoreFlags(internal_pstObject: ptr orxOBJECT_520095488): orxU32_520095025		16963
nim	getLiteralIgnoreFlags	wrapper.html#getLiteralIgnoreFlags,ptr.struct_orxOBJECT_t	proc getLiteralIgnoreFlags(internal_pstObject: ptr orxOBJECT_520095488): cstring		16970
nim	logParents	wrapper.html#logParents,ptr.struct_orxOBJECT_t	proc logParents(internal_pstObject: ptr orxOBJECT_520095488): orxSTATUS_520095067		16977
nim	setAnimSet	wrapper.html#setAnimSet,ptr.struct_orxOBJECT_t,ptr.struct_orxANIMSET_t	proc setAnimSet(internal_pstObject: ptr orxOBJECT_520095488;\n           internal_pstAnimSet: ptr orxANIMSET_520095178): orxSTATUS_520095067		16983
nim	setAnimFrequency	wrapper.html#setAnimFrequency,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setAnimFrequency(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_fFrequency: orxFLOAT_520095041): orxSTATUS_520095067		16990
nim	setAnimFrequencyRecursive	wrapper.html#setAnimFrequencyRecursive,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setAnimFrequencyRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                          internal_fFrequency: orxFLOAT_520095041): void		16998
nim	getAnimFrequency	wrapper.html#getAnimFrequency,ptr.struct_orxOBJECT_t	proc getAnimFrequency(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17006
nim	setAnimTime	wrapper.html#setAnimTime,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setAnimTime(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_fTime: orxFLOAT_520095041): orxSTATUS_520095067		17013
nim	setAnimTimeRecursive	wrapper.html#setAnimTimeRecursive,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setAnimTimeRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                     internal_fTime: orxFLOAT_520095041): void		17020
nim	getAnimTime	wrapper.html#getAnimTime,ptr.struct_orxOBJECT_t	proc getAnimTime(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17028
nim	setCurrentAnim	wrapper.html#setCurrentAnim,ptr.struct_orxOBJECT_t,cstring	proc setCurrentAnim(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_zAnimName: cstring): orxSTATUS_520095067		17034
nim	setCurrentAnimRecursive	wrapper.html#setCurrentAnimRecursive,ptr.struct_orxOBJECT_t,cstring	proc setCurrentAnimRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                        internal_zAnimName: cstring): void		17042
nim	setTargetAnim	wrapper.html#setTargetAnim,ptr.struct_orxOBJECT_t,cstring	proc setTargetAnim(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_zAnimName: cstring): orxSTATUS_520095067		17050
nim	setTargetAnimRecursive	wrapper.html#setTargetAnimRecursive,ptr.struct_orxOBJECT_t,cstring	proc setTargetAnimRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                       internal_zAnimName: cstring): void		17058
nim	getCurrentAnim	wrapper.html#getCurrentAnim,ptr.struct_orxOBJECT_t	proc getCurrentAnim(internal_pstObject: ptr orxOBJECT_520095488): cstring		17066
nim	getTargetAnim	wrapper.html#getTargetAnim,ptr.struct_orxOBJECT_t	proc getTargetAnim(internal_pstObject: ptr orxOBJECT_520095488): cstring		17073
nim	isCurrentAnim	wrapper.html#isCurrentAnim,ptr.struct_orxOBJECT_t,cstring	proc isCurrentAnim(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_zAnimName: cstring): orxBOOL_520095039		17080
nim	isTargetAnim	wrapper.html#isTargetAnim,ptr.struct_orxOBJECT_t,cstring	proc isTargetAnim(internal_pstObject: ptr orxOBJECT_520095488;\n             internal_zAnimName: cstring): orxBOOL_520095039		17088
nim	setSpeed	wrapper.html#setSpeed,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setSpeed(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_pvSpeed: ptr orxVECTOR_520095097): orxSTATUS_520095067		17095
nim	setRelativeSpeed	wrapper.html#setRelativeSpeed,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setRelativeSpeed(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_pvRelativeSpeed: ptr orxVECTOR_520095097): orxSTATUS_520095067		17102
nim	setAngularVelocity	wrapper.html#setAngularVelocity,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setAngularVelocity(internal_pstObject: ptr orxOBJECT_520095488;\n                   internal_fVelocity: orxFLOAT_520095041): orxSTATUS_520095067		17110
nim	setCustomGravity	wrapper.html#setCustomGravity,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setCustomGravity(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_pvCustomGravity: ptr orxVECTOR_520095097): orxSTATUS_520095067		17118
nim	getSpeed	wrapper.html#getSpeed,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getSpeed(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_pvSpeed: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		17126
nim	getRelativeSpeed	wrapper.html#getRelativeSpeed,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getRelativeSpeed(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_pvRelativeSpeed: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		17133
nim	getAngularVelocity	wrapper.html#getAngularVelocity,ptr.struct_orxOBJECT_t	proc getAngularVelocity(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17141
nim	getCustomGravity	wrapper.html#getCustomGravity,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getCustomGravity(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_pvCustomGravity: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		17148
nim	getMass	wrapper.html#getMass,ptr.struct_orxOBJECT_t	proc getMass(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17156
nim	getMassCenter	wrapper.html#getMassCenter,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getMassCenter(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_pvMassCenter: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		17162
nim	applyTorque	wrapper.html#applyTorque,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc applyTorque(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_fTorque: orxFLOAT_520095041): orxSTATUS_520095067		17170
nim	applyForce	wrapper.html#applyForce,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097	proc applyForce(internal_pstObject: ptr orxOBJECT_520095488;\n           internal_pvForce: ptr orxVECTOR_520095097;\n           internal_pvPoint: ptr orxVECTOR_520095097): orxSTATUS_520095067		17177
nim	applyImpulse	wrapper.html#applyImpulse,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097	proc applyImpulse(internal_pstObject: ptr orxOBJECT_520095488;\n             internal_pvImpulse: ptr orxVECTOR_520095097;\n             internal_pvPoint: ptr orxVECTOR_520095097): orxSTATUS_520095067		17185
nim	raycast	wrapper.html#raycast,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097,orxU16_520095027,orxU16_520095027,orxBOOL_520095039,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097	proc raycast(internal_pvBegin: ptr orxVECTOR_520095097;\n        internal_pvEnd: ptr orxVECTOR_520095097;\n        internal_u16SelfFlags: orxU16_520095027;\n        internal_u16CheckMask: orxU16_520095027;\n        internal_bEarlyExit: orxBOOL_520095039;\n        internal_pvContact: ptr orxVECTOR_520095097;\n        internal_pvNormal: ptr orxVECTOR_520095097): ptr orxOBJECT_520095488		17193
nim	setTextString	wrapper.html#setTextString,ptr.struct_orxOBJECT_t,cstring	proc setTextString(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_zString: cstring): orxSTATUS_520095067		17205
nim	getTextString	wrapper.html#getTextString,ptr.struct_orxOBJECT_t	proc getTextString(internal_pstObject: ptr orxOBJECT_520095488): cstring		17213
nim	getBoundingBox	wrapper.html#getBoundingBox,ptr.struct_orxOBJECT_t,ptr.orxOBOX_520095258	proc getBoundingBox(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_pstBoundingBox: ptr orxOBOX_520095258): ptr orxOBOX_520095258		17220
nim	addFX	wrapper.html#addFX,ptr.struct_orxOBJECT_t,cstring	proc addFX(internal_pstObject: ptr orxOBJECT_520095488; internal_zFXConfigID: cstring): orxSTATUS_520095067		17228
nim	addFXRecursive	wrapper.html#addFXRecursive,ptr.struct_orxOBJECT_t,cstring,orxFLOAT_520095041	proc addFXRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_zFXConfigID: cstring;\n               internal_fPropagationDelay: orxFLOAT_520095041): void		17235
nim	addUniqueFX	wrapper.html#addUniqueFX,ptr.struct_orxOBJECT_t,cstring	proc addUniqueFX(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_zFXConfigID: cstring): orxSTATUS_520095067		17244
nim	addUniqueFXRecursive	wrapper.html#addUniqueFXRecursive,ptr.struct_orxOBJECT_t,cstring,orxFLOAT_520095041	proc addUniqueFXRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                     internal_zFXConfigID: cstring;\n                     internal_fPropagationDelay: orxFLOAT_520095041): void		17251
nim	removeFX	wrapper.html#removeFX,ptr.struct_orxOBJECT_t,cstring	proc removeFX(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_zFXConfigID: cstring): orxSTATUS_520095067		17260
nim	removeFXRecursive	wrapper.html#removeFXRecursive,ptr.struct_orxOBJECT_t,cstring	proc removeFXRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                  internal_zFXConfigID: cstring): void		17267
nim	removeAllFXs	wrapper.html#removeAllFXs,ptr.struct_orxOBJECT_t	proc removeAllFXs(internal_pstObject: ptr orxOBJECT_520095488): orxSTATUS_520095067		17275
nim	removeAllFXsRecursive	wrapper.html#removeAllFXsRecursive,ptr.struct_orxOBJECT_t	proc removeAllFXsRecursive(internal_pstObject: ptr orxOBJECT_520095488): orxSTATUS_520095067		17281
nim	setFXFrequency	wrapper.html#setFXFrequency,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setFXFrequency(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_fFrequency: orxFLOAT_520095041): orxSTATUS_520095067		17288
nim	setFXFrequencyRecursive	wrapper.html#setFXFrequencyRecursive,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setFXFrequencyRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                        internal_fFrequency: orxFLOAT_520095041): void		17296
nim	getFXFrequency	wrapper.html#getFXFrequency,ptr.struct_orxOBJECT_t	proc getFXFrequency(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17304
nim	setFXTime	wrapper.html#setFXTime,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setFXTime(internal_pstObject: ptr orxOBJECT_520095488;\n          internal_fTime: orxFLOAT_520095041): orxSTATUS_520095067		17311
nim	setFXTimeRecursive	wrapper.html#setFXTimeRecursive,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setFXTimeRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                   internal_fTime: orxFLOAT_520095041): void		17318
nim	getFXTime	wrapper.html#getFXTime,ptr.struct_orxOBJECT_t	proc getFXTime(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17326
nim	synchronizeFX	wrapper.html#synchronizeFX,ptr.struct_orxOBJECT_t,ptr.struct_orxOBJECT_t	proc synchronizeFX(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_pstModel: ptr orxOBJECT_520095488): orxSTATUS_520095067		17332
nim	addSound	wrapper.html#addSound,ptr.struct_orxOBJECT_t,cstring	proc addSound(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_zSoundConfigID: cstring): orxSTATUS_520095067		17340
nim	removeSound	wrapper.html#removeSound,ptr.struct_orxOBJECT_t,cstring	proc removeSound(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_zSoundConfigID: cstring): orxSTATUS_520095067		17347
nim	removeAllSounds	wrapper.html#removeAllSounds,ptr.struct_orxOBJECT_t	proc removeAllSounds(internal_pstObject: ptr orxOBJECT_520095488): orxSTATUS_520095067		17354
nim	getLastAddedSound	wrapper.html#getLastAddedSound,ptr.struct_orxOBJECT_t	proc getLastAddedSound(internal_pstObject: ptr orxOBJECT_520095488): ptr orxSOUND_520095464		17361
nim	addShader	wrapper.html#addShader,ptr.struct_orxOBJECT_t,cstring	proc addShader(internal_pstObject: ptr orxOBJECT_520095488;\n          internal_zShaderConfigID: cstring): orxSTATUS_520095067		17422
nim	addShaderRecursive	wrapper.html#addShaderRecursive,ptr.struct_orxOBJECT_t,cstring	proc addShaderRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                   internal_zShaderConfigID: cstring): void		17429
nim	removeShader	wrapper.html#removeShader,ptr.struct_orxOBJECT_t,cstring	proc removeShader(internal_pstObject: ptr orxOBJECT_520095488;\n             internal_zShaderConfigID: cstring): orxSTATUS_520095067		17437
nim	removeShaderRecursive	wrapper.html#removeShaderRecursive,ptr.struct_orxOBJECT_t,cstring	proc removeShaderRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                      internal_zShaderConfigID: cstring): void		17444
nim	enableShader	wrapper.html#enableShader,ptr.struct_orxOBJECT_t,orxBOOL_520095039	proc enableShader(internal_pstObject: ptr orxOBJECT_520095488;\n             internal_bEnable: orxBOOL_520095039): void		17452
nim	isShaderEnabled	wrapper.html#isShaderEnabled,ptr.struct_orxOBJECT_t	proc isShaderEnabled(internal_pstObject: ptr orxOBJECT_520095488): orxBOOL_520095039		17459
nim	addTimeLineTrack	wrapper.html#addTimeLineTrack,ptr.struct_orxOBJECT_t,cstring	proc addTimeLineTrack(internal_pstObject: ptr orxOBJECT_520095488;\n                 internal_zTrackConfigID: cstring): orxSTATUS_520095067		17466
nim	addTimeLineTrackRecursive	wrapper.html#addTimeLineTrackRecursive,ptr.struct_orxOBJECT_t,cstring	proc addTimeLineTrackRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                          internal_zTrackConfigID: cstring): void		17474
nim	removeTimeLineTrack	wrapper.html#removeTimeLineTrack,ptr.struct_orxOBJECT_t,cstring	proc removeTimeLineTrack(internal_pstObject: ptr orxOBJECT_520095488;\n                    internal_zTrackConfigID: cstring): orxSTATUS_520095067		17482
nim	removeTimeLineTrackRecursive	wrapper.html#removeTimeLineTrackRecursive,ptr.struct_orxOBJECT_t,cstring	proc removeTimeLineTrackRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                             internal_zTrackConfigID: cstring): void		17490
nim	enableTimeLine	wrapper.html#enableTimeLine,ptr.struct_orxOBJECT_t,orxBOOL_520095039	proc enableTimeLine(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_bEnable: orxBOOL_520095039): void		17498
nim	isTimeLineEnabled	wrapper.html#isTimeLineEnabled,ptr.struct_orxOBJECT_t	proc isTimeLineEnabled(internal_pstObject: ptr orxOBJECT_520095488): orxBOOL_520095039		17506
nim	addTrigger	wrapper.html#addTrigger,ptr.struct_orxOBJECT_t,cstring	proc addTrigger(internal_pstObject: ptr orxOBJECT_520095488;\n           internal_zTriggerConfigID: cstring): orxSTATUS_520095067		17513
nim	addTriggerRecursive	wrapper.html#addTriggerRecursive,ptr.struct_orxOBJECT_t,cstring	proc addTriggerRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                    internal_zTriggerConfigID: cstring): void		17520
nim	removeTrigger	wrapper.html#removeTrigger,ptr.struct_orxOBJECT_t,cstring	proc removeTrigger(internal_pstObject: ptr orxOBJECT_520095488;\n              internal_zTriggerConfigID: cstring): orxSTATUS_520095067		17528
nim	removeTriggerRecursive	wrapper.html#removeTriggerRecursive,ptr.struct_orxOBJECT_t,cstring	proc removeTriggerRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                       internal_zTriggerConfigID: cstring): void		17536
nim	fireTrigger	wrapper.html#fireTrigger,ptr.struct_orxOBJECT_t,cstring,ptr.cstring,orxU32_520095025	proc fireTrigger(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_zEvent: cstring; internal_azRefinementList: ptr cstring;\n            internal_u32Size: orxU32_520095025): orxSTATUS_520095067		17544
nim	fireTriggerRecursive	wrapper.html#fireTriggerRecursive,ptr.struct_orxOBJECT_t,cstring,ptr.cstring,orxU32_520095025	proc fireTriggerRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                     internal_zEvent: cstring;\n                     internal_azRefinementList: ptr cstring;\n                     internal_u32Size: orxU32_520095025): void		17553
nim	createNeighborList	wrapper.html#createNeighborList,ptr.orxOBOX_520095258,orxU64_520095023	proc createNeighborList(internal_pstCheckBox: ptr orxOBOX_520095258;\n                   internal_stGroupID: orxSTRINGID_520095047): ptr orxBANK_520095260		17569
nim	deleteNeighborList	wrapper.html#deleteNeighborList,ptr.struct_orxBANK_t	proc deleteNeighborList(internal_pstObjectList: ptr orxBANK_520095260): void		17577
nim	setSmoothingRecursive	wrapper.html#setSmoothingRecursive,ptr.struct_orxOBJECT_t,orxDISPLAY_SMOOTHING_520095300	proc setSmoothingRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                      internal_eSmoothing: orxDISPLAY_SMOOTHING_520095300): void		17591
nim	getWorkingTexture	wrapper.html#getWorkingTexture,ptr.struct_orxOBJECT_t	proc getWorkingTexture(internal_pstObject: ptr orxOBJECT_520095488): ptr orxTEXTURE_520095322		17605
nim	getWorkingGraphic	wrapper.html#getWorkingGraphic,ptr.struct_orxOBJECT_t	proc getWorkingGraphic(internal_pstObject: ptr orxOBJECT_520095488): ptr orxGRAPHIC_520095422		17612
nim	setColorRecursive	wrapper.html#setColorRecursive,ptr.struct_orxOBJECT_t,ptr.orxCOLOR_520095308	proc setColorRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                  internal_pstColor: ptr orxCOLOR_520095308): void		17626
nim	setRGB	wrapper.html#setRGB,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setRGB(internal_pstObject: ptr orxOBJECT_520095488;\n       internal_pvRGB: ptr orxVECTOR_520095097): orxSTATUS_520095067		17647
nim	setRGBRecursive	wrapper.html#setRGBRecursive,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc setRGBRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                internal_pvRGB: ptr orxVECTOR_520095097): void		17654
nim	getRGB	wrapper.html#getRGB,ptr.struct_orxOBJECT_t,ptr.orxVECTOR_520095097	proc getRGB(internal_pstObject: ptr orxOBJECT_520095488;\n       internal_pvRGB: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		17662
nim	setAlpha	wrapper.html#setAlpha,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setAlpha(internal_pstObject: ptr orxOBJECT_520095488;\n         internal_fAlpha: orxFLOAT_520095041): orxSTATUS_520095067		17669
nim	setAlphaRecursive	wrapper.html#setAlphaRecursive,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setAlphaRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                  internal_fAlpha: orxFLOAT_520095041): void		17676
nim	getAlpha	wrapper.html#getAlpha,ptr.struct_orxOBJECT_t	proc getAlpha(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17684
nim	setBlendModeRecursive	wrapper.html#setBlendModeRecursive,ptr.struct_orxOBJECT_t,orxDISPLAY_BLEND_MODE_520095304	proc setBlendModeRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                      internal_eBlendMode: orxDISPLAY_BLEND_MODE_520095304): void		17713
nim	setLiteralLifeTime	wrapper.html#setLiteralLifeTime,ptr.struct_orxOBJECT_t,cstring	proc setLiteralLifeTime(internal_pstObject: ptr orxOBJECT_520095488;\n                   internal_zLifeTime: cstring): orxSTATUS_520095067		17733
nim	setLifeTime	wrapper.html#setLifeTime,ptr.struct_orxOBJECT_t,orxFLOAT_520095041	proc setLifeTime(internal_pstObject: ptr orxOBJECT_520095488;\n            internal_fLifeTime: orxFLOAT_520095041): orxSTATUS_520095067		17741
nim	getLifeTime	wrapper.html#getLifeTime,ptr.struct_orxOBJECT_t	proc getLifeTime(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17748
nim	getActiveTime	wrapper.html#getActiveTime,ptr.struct_orxOBJECT_t	proc getActiveTime(internal_pstObject: ptr orxOBJECT_520095488): orxFLOAT_520095041		17754
nim	resetActiveTime	wrapper.html#resetActiveTime,ptr.struct_orxOBJECT_t	proc resetActiveTime(internal_pstObject: ptr orxOBJECT_520095488): orxSTATUS_520095067		17761
nim	resetActiveTimeRecursive	wrapper.html#resetActiveTimeRecursive,ptr.struct_orxOBJECT_t	proc resetActiveTimeRecursive(internal_pstObject: ptr orxOBJECT_520095488): void		17768
nim	getDefaultGroupID	wrapper.html#getDefaultGroupID	proc getDefaultGroupID(): orxSTRINGID_520095047		17775
nim	getGroupID	wrapper.html#getGroupID,ptr.struct_orxOBJECT_t	proc getGroupID(internal_pstObject: ptr orxOBJECT_520095488): orxSTRINGID_520095047		17782
nim	setGroupID	wrapper.html#setGroupID,ptr.struct_orxOBJECT_t,orxU64_520095023	proc setGroupID(internal_pstObject: ptr orxOBJECT_520095488;\n           internal_stGroupID: orxSTRINGID_520095047): orxSTATUS_520095067		17788
nim	setGroupIDRecursive	wrapper.html#setGroupIDRecursive,ptr.struct_orxOBJECT_t,orxU64_520095023	proc setGroupIDRecursive(internal_pstObject: ptr orxOBJECT_520095488;\n                    internal_stGroupID: orxSTRINGID_520095047): void		17795
nim	getNextEnabled	wrapper.html#getNextEnabled,ptr.struct_orxOBJECT_t,orxU64_520095023	proc getNextEnabled(internal_pstObject: ptr orxOBJECT_520095488;\n               internal_stGroupID: orxSTRINGID_520095047): ptr orxOBJECT_520095488		17810
nim	pick	wrapper.html#pick,ptr.orxVECTOR_520095097,orxU64_520095023	proc pick(internal_pvPosition: ptr orxVECTOR_520095097;\n     internal_stGroupID: orxSTRINGID_520095047): ptr orxOBJECT_520095488		17818
nim	boxPick	wrapper.html#boxPick,ptr.orxOBOX_520095258,orxU64_520095023	proc boxPick(internal_pstBox: ptr orxOBOX_520095258;\n        internal_stGroupID: orxSTRINGID_520095047): ptr orxOBJECT_520095488		17825
nim	fXSetup	wrapper.html#fXSetup	proc fXSetup(): void		17832
nim	fXInit	wrapper.html#fXInit	proc fXInit(): orxSTATUS_520095067		17837
nim	fXExit	wrapper.html#fXExit	proc fXExit(): void		17842
nim	fXCreate	wrapper.html#fXCreate	proc fXCreate(): ptr orxFX_520095502		17847
nim	fXCreateFromConfig	wrapper.html#fXCreateFromConfig,cstring	proc fXCreateFromConfig(internal_zConfigID: cstring): ptr orxFX_520095502		17852
nim	fXDelete	wrapper.html#fXDelete,ptr.struct_orxFX_t	proc fXDelete(internal_pstFX: ptr orxFX_520095502): orxSTATUS_520095067		17859
nim	orxFX_ClearCache	wrapper.html#orxFX_ClearCache	proc orxFX_ClearCache(): orxSTATUS_520095067		17865
nim	orxFX_Apply	wrapper.html#orxFX_Apply,ptr.struct_orxFX_t,ptr.struct_orxOBJECT_t,orxFLOAT_520095041,orxFLOAT_520095041	proc orxFX_Apply(internal_pstFX: ptr orxFX_520095502;\n            internal_pstObject: ptr orxOBJECT_520095488;\n            internal_fPreviousTime: orxFLOAT_520095041;\n            internal_fTime: orxFLOAT_520095041): orxSTATUS_520095067		17872
nim	orxFX_GetFloat	wrapper.html#orxFX_GetFloat,ptr.struct_orxFX_t,orxFLOAT_520095041,orxFLOAT_520095041	proc orxFX_GetFloat(internal_pstFX: ptr orxFX_520095502;\n               internal_fPreviousTime: orxFLOAT_520095041;\n               internal_fTime: orxFLOAT_520095041): orxFLOAT_520095041		17881
nim	orxFX_GetVector	wrapper.html#orxFX_GetVector,ptr.struct_orxFX_t,orxFLOAT_520095041,orxFLOAT_520095041,ptr.orxVECTOR_520095097	proc orxFX_GetVector(internal_pstFX: ptr orxFX_520095502;\n                internal_fPreviousTime: orxFLOAT_520095041;\n                internal_fTime: orxFLOAT_520095041;\n                internal_pvVector: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		17890
nim	orxFX_Enable	wrapper.html#orxFX_Enable,ptr.struct_orxFX_t,orxBOOL_520095039	proc orxFX_Enable(internal_pstFX: ptr orxFX_520095502;\n             internal_bEnable: orxBOOL_520095039): void		17900
nim	orxFX_IsEnabled	wrapper.html#orxFX_IsEnabled,ptr.struct_orxFX_t	proc orxFX_IsEnabled(internal_pstFX: ptr orxFX_520095502): orxBOOL_520095039		17907
nim	orxFX_AddSlot	wrapper.html#orxFX_AddSlot,ptr.struct_orxFX_t,orxFX_TYPE_520095492,orxFX_CURVE_520095496,ptr.orxFX_CURVE_PARAM_520095500,orxU32_520095025	proc orxFX_AddSlot(internal_pstFX: ptr orxFX_520095502;\n              internal_eType: orxFX_TYPE_520095492;\n              internal_eCurve: orxFX_CURVE_520095496;\n              internal_pstCurveParam: ptr orxFX_CURVE_PARAM_520095500;\n              internal_u32Flags: orxU32_520095025): orxSTATUS_520095067		17914
nim	orxFX_AddSlotFromConfig	wrapper.html#orxFX_AddSlotFromConfig,ptr.struct_orxFX_t,cstring	proc orxFX_AddSlotFromConfig(internal_pstFX: ptr orxFX_520095502;\n                        internal_zSlotID: cstring): orxSTATUS_520095067		17925
nim	orxFX_GetDuration	wrapper.html#orxFX_GetDuration,ptr.struct_orxFX_t	proc orxFX_GetDuration(internal_pstFX: ptr orxFX_520095502): orxFLOAT_520095041		17933
nim	orxFX_GetName	wrapper.html#orxFX_GetName,ptr.struct_orxFX_t	proc orxFX_GetName(internal_pstFX: ptr orxFX_520095502): cstring		17940
nim	orxFX_Loop	wrapper.html#orxFX_Loop,ptr.struct_orxFX_t,orxBOOL_520095039	proc orxFX_Loop(internal_pstFX: ptr orxFX_520095502;\n           internal_bLoop: orxBOOL_520095039): orxSTATUS_520095067		17947
nim	orxFX_IsLooping	wrapper.html#orxFX_IsLooping,ptr.struct_orxFX_t	proc orxFX_IsLooping(internal_pstFX: ptr orxFX_520095502): orxBOOL_520095039		17953
nim	orxFX_SetStagger	wrapper.html#orxFX_SetStagger,ptr.struct_orxFX_t,orxBOOL_520095039,orxFLOAT_520095041	proc orxFX_SetStagger(internal_pstFX: ptr orxFX_520095502;\n                 internal_bStagger: orxBOOL_520095039;\n                 internal_fOffset: orxFLOAT_520095041): orxSTATUS_520095067		17960
nim	orxFX_GetStagger	wrapper.html#orxFX_GetStagger,ptr.struct_orxFX_t,ptr.orxFLOAT_520095041	proc orxFX_GetStagger(internal_pstFX: ptr orxFX_520095502;\n                 internal_pfOffset: ptr orxFLOAT_520095041): orxBOOL_520095039		17969
nim	fXPointerSetup	wrapper.html#fXPointerSetup	proc fXPointerSetup(): void		17977
nim	fXPointerInit	wrapper.html#fXPointerInit	proc fXPointerInit(): orxSTATUS_520095067		17983
nim	fXPointerExit	wrapper.html#fXPointerExit	proc fXPointerExit(): void		17990
nim	fXPointerCreate	wrapper.html#fXPointerCreate	proc fXPointerCreate(): ptr orxFXPOINTER_520095512		17996
nim	fXPointerDelete	wrapper.html#fXPointerDelete,ptr.struct_orxFXPOINTER_t	proc fXPointerDelete(internal_pstFXPointer: ptr orxFXPOINTER_520095512): orxSTATUS_520095067		18003
nim	orxFXPointer_Enable	wrapper.html#orxFXPointer_Enable,ptr.struct_orxFXPOINTER_t,orxBOOL_520095039	proc orxFXPointer_Enable(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                    internal_bEnable: orxBOOL_520095039): void		18010
nim	orxFXPointer_IsEnabled	wrapper.html#orxFXPointer_IsEnabled,ptr.struct_orxFXPOINTER_t	proc orxFXPointer_IsEnabled(internal_pstFXPointer: ptr orxFXPOINTER_520095512): orxBOOL_520095039		18018
nim	orxFXPointer_AddFX	wrapper.html#orxFXPointer_AddFX,ptr.struct_orxFXPOINTER_t,ptr.struct_orxFX_t	proc orxFXPointer_AddFX(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                   internal_pstFX: ptr orxFX_520095502): orxSTATUS_520095067		18025
nim	orxFXPointer_AddDelayedFX	wrapper.html#orxFXPointer_AddDelayedFX,ptr.struct_orxFXPOINTER_t,ptr.struct_orxFX_t,orxFLOAT_520095041	proc orxFXPointer_AddDelayedFX(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                          internal_pstFX: ptr orxFX_520095502;\n                          internal_fDelay: orxFLOAT_520095041): orxSTATUS_520095067		18033
nim	orxFXPointer_RemoveFX	wrapper.html#orxFXPointer_RemoveFX,ptr.struct_orxFXPOINTER_t,ptr.struct_orxFX_t	proc orxFXPointer_RemoveFX(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                      internal_pstFX: ptr orxFX_520095502): orxSTATUS_520095067		18042
nim	orxFXPointer_RemoveAllFXs	wrapper.html#orxFXPointer_RemoveAllFXs,ptr.struct_orxFXPOINTER_t	proc orxFXPointer_RemoveAllFXs(internal_pstFXPointer: ptr orxFXPOINTER_520095512): orxSTATUS_520095067		18050
nim	orxFXPointer_AddFXFromConfig	wrapper.html#orxFXPointer_AddFXFromConfig,ptr.struct_orxFXPOINTER_t,cstring	proc orxFXPointer_AddFXFromConfig(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                             internal_zFXConfigID: cstring): orxSTATUS_520095067		18057
nim	orxFXPointer_AddUniqueFXFromConfig	wrapper.html#orxFXPointer_AddUniqueFXFromConfig,ptr.struct_orxFXPOINTER_t,cstring	proc orxFXPointer_AddUniqueFXFromConfig(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                                   internal_zFXConfigID: cstring): orxSTATUS_520095067		18065
nim	orxFXPointer_AddDelayedFXFromConfig	wrapper.html#orxFXPointer_AddDelayedFXFromConfig,ptr.struct_orxFXPOINTER_t,cstring,orxFLOAT_520095041	proc orxFXPointer_AddDelayedFXFromConfig(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                                    internal_zFXConfigID: cstring;\n                                    internal_fDelay: orxFLOAT_520095041): orxSTATUS_520095067		18074
nim	orxFXPointer_AddUniqueDelayedFXFromConfig	wrapper.html#orxFXPointer_AddUniqueDelayedFXFromConfig,ptr.struct_orxFXPOINTER_t,cstring,orxFLOAT_520095041	proc orxFXPointer_AddUniqueDelayedFXFromConfig(\n    internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n    internal_zFXConfigID: cstring; internal_fDelay: orxFLOAT_520095041): orxSTATUS_520095067		18083
nim	orxFXPointer_RemoveFXFromConfig	wrapper.html#orxFXPointer_RemoveFXFromConfig,ptr.struct_orxFXPOINTER_t,cstring	proc orxFXPointer_RemoveFXFromConfig(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                                internal_zFXConfigID: cstring): orxSTATUS_520095067		18092
nim	orxFXPointer_Synchronize	wrapper.html#orxFXPointer_Synchronize,ptr.struct_orxFXPOINTER_t,ptr.struct_orxFXPOINTER_t	proc orxFXPointer_Synchronize(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                         internal_pstModel: ptr orxFXPOINTER_520095512): orxSTATUS_520095067		18100
nim	orxFXPointer_GetTime	wrapper.html#orxFXPointer_GetTime,ptr.struct_orxFXPOINTER_t	proc orxFXPointer_GetTime(internal_pstFXPointer: ptr orxFXPOINTER_520095512): orxFLOAT_520095041		18108
nim	orxFXPointer_GetCount	wrapper.html#orxFXPointer_GetCount,ptr.struct_orxFXPOINTER_t	proc orxFXPointer_GetCount(internal_pstFXPointer: ptr orxFXPOINTER_520095512): orxU32_520095025		18115
nim	orxFXPointer_GetFrequency	wrapper.html#orxFXPointer_GetFrequency,ptr.struct_orxFXPOINTER_t	proc orxFXPointer_GetFrequency(internal_pstFXPointer: ptr orxFXPOINTER_520095512): orxFLOAT_520095041		18122
nim	orxFXPointer_SetTime	wrapper.html#orxFXPointer_SetTime,ptr.struct_orxFXPOINTER_t,orxFLOAT_520095041	proc orxFXPointer_SetTime(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                     internal_fTime: orxFLOAT_520095041): orxSTATUS_520095067		18129
nim	orxFXPointer_SetFrequency	wrapper.html#orxFXPointer_SetFrequency,ptr.struct_orxFXPOINTER_t,orxFLOAT_520095041	proc orxFXPointer_SetFrequency(internal_pstFXPointer: ptr orxFXPOINTER_520095512;\n                          internal_fFrequency: orxFLOAT_520095041): orxSTATUS_520095067		18137
nim	getIgnoreFlagValues	wrapper.html#getIgnoreFlagValues,cstring	proc getIgnoreFlagValues(internal_zFlags: cstring): orxU32_520095025		18145
nim	getIgnoreFlagNames	wrapper.html#getIgnoreFlagNames,orxU32_520095025	proc getIgnoreFlagNames(internal_u32Flags: orxU32_520095025): cstring		18152
nim	frameSetup	wrapper.html#frameSetup	proc frameSetup(): void		18159
nim	frameInit	wrapper.html#frameInit	proc frameInit(): orxSTATUS_520095067		18164
nim	frameExit	wrapper.html#frameExit	proc frameExit(): void		18169
nim	frameCreate	wrapper.html#frameCreate,orxU32_520095025	proc frameCreate(internal_u32Flags: orxU32_520095025): ptr orxFRAME_520095518		18174
nim	frameDelete	wrapper.html#frameDelete,ptr.struct_orxFRAME_t	proc frameDelete(internal_pstFrame: ptr orxFRAME_520095518): orxSTATUS_520095067		18180
nim	isRootChild	wrapper.html#isRootChild,ptr.struct_orxFRAME_t	proc isRootChild(internal_pstFrame: ptr orxFRAME_520095518): orxBOOL_520095039		18211
nim	transformPosition	wrapper.html#transformPosition,ptr.struct_orxFRAME_t,orxFRAME_SPACE_520095516,ptr.orxVECTOR_520095097	proc transformPosition(internal_pstFrame: ptr orxFRAME_520095518;\n                  internal_eSpace: orxFRAME_SPACE_520095516;\n                  internal_pvPos: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		18264
nim	transformRotation	wrapper.html#transformRotation,ptr.struct_orxFRAME_t,orxFRAME_SPACE_520095516,orxFLOAT_520095041	proc transformRotation(internal_pstFrame: ptr orxFRAME_520095518;\n                  internal_eSpace: orxFRAME_SPACE_520095516;\n                  internal_fRotation: orxFLOAT_520095041): orxFLOAT_520095041		18273
nim	transformScale	wrapper.html#transformScale,ptr.struct_orxFRAME_t,orxFRAME_SPACE_520095516,ptr.orxVECTOR_520095097	proc transformScale(internal_pstFrame: ptr orxFRAME_520095518;\n               internal_eSpace: orxFRAME_SPACE_520095516;\n               internal_pvScale: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		18282
nim	spawnerSetup	wrapper.html#spawnerSetup	proc spawnerSetup(): void		18291
nim	spawnerInit	wrapper.html#spawnerInit	proc spawnerInit(): orxSTATUS_520095067		18296
nim	spawnerExit	wrapper.html#spawnerExit	proc spawnerExit(): void		18301
nim	spawnerCreate	wrapper.html#spawnerCreate	proc spawnerCreate(): ptr orxSPAWNER_520095524		18306
nim	spawnerCreateFromConfig	wrapper.html#spawnerCreateFromConfig,cstring	proc spawnerCreateFromConfig(internal_zConfigID: cstring): ptr orxSPAWNER_520095524		18313
nim	spawnerDelete	wrapper.html#spawnerDelete,ptr.struct_orxSPAWNER_t	proc spawnerDelete(internal_pstSpawner: ptr orxSPAWNER_520095524): orxSTATUS_520095067		18320
nim	setTotalObjectLimit	wrapper.html#setTotalObjectLimit,ptr.struct_orxSPAWNER_t,orxU32_520095025	proc setTotalObjectLimit(internal_pstSpawner: ptr orxSPAWNER_520095524;\n                    internal_u32TotalObjectLimit: orxU32_520095025): orxSTATUS_520095067		18346
nim	setActiveObjectLimit	wrapper.html#setActiveObjectLimit,ptr.struct_orxSPAWNER_t,orxU32_520095025	proc setActiveObjectLimit(internal_pstSpawner: ptr orxSPAWNER_520095524;\n                     internal_u32ActiveObjectLimit: orxU32_520095025): orxSTATUS_520095067		18354
nim	getTotalObjectLimit	wrapper.html#getTotalObjectLimit,ptr.struct_orxSPAWNER_t	proc getTotalObjectLimit(internal_pstSpawner: ptr orxSPAWNER_520095524): orxU32_520095025		18362
nim	getActiveObjectLimit	wrapper.html#getActiveObjectLimit,ptr.struct_orxSPAWNER_t	proc getActiveObjectLimit(internal_pstSpawner: ptr orxSPAWNER_520095524): orxU32_520095025		18369
nim	getTotalObjectCount	wrapper.html#getTotalObjectCount,ptr.struct_orxSPAWNER_t	proc getTotalObjectCount(internal_pstSpawner: ptr orxSPAWNER_520095524): orxU32_520095025		18376
nim	getActiveObjectCount	wrapper.html#getActiveObjectCount,ptr.struct_orxSPAWNER_t	proc getActiveObjectCount(internal_pstSpawner: ptr orxSPAWNER_520095524): orxU32_520095025		18383
nim	setWaveSize	wrapper.html#setWaveSize,ptr.struct_orxSPAWNER_t,orxU32_520095025	proc setWaveSize(internal_pstSpawner: ptr orxSPAWNER_520095524;\n            internal_u32WaveSize: orxU32_520095025): orxSTATUS_520095067		18390
nim	setWaveDelay	wrapper.html#setWaveDelay,ptr.struct_orxSPAWNER_t,orxFLOAT_520095041	proc setWaveDelay(internal_pstSpawner: ptr orxSPAWNER_520095524;\n             internal_fWaveDelay: orxFLOAT_520095041): orxSTATUS_520095067		18397
nim	setNextWaveDelay	wrapper.html#setNextWaveDelay,ptr.struct_orxSPAWNER_t,orxFLOAT_520095041	proc setNextWaveDelay(internal_pstSpawner: ptr orxSPAWNER_520095524;\n                 internal_fWaveDelay: orxFLOAT_520095041): orxSTATUS_520095067		18404
nim	getWaveSize	wrapper.html#getWaveSize,ptr.struct_orxSPAWNER_t	proc getWaveSize(internal_pstSpawner: ptr orxSPAWNER_520095524): orxU32_520095025		18412
nim	getWaveDelay	wrapper.html#getWaveDelay,ptr.struct_orxSPAWNER_t	proc getWaveDelay(internal_pstSpawner: ptr orxSPAWNER_520095524): orxFLOAT_520095041		18418
nim	getNextWaveDelay	wrapper.html#getNextWaveDelay,ptr.struct_orxSPAWNER_t	proc getNextWaveDelay(internal_pstSpawner: ptr orxSPAWNER_520095524): orxFLOAT_520095041		18424
nim	setObjectSpeed	wrapper.html#setObjectSpeed,ptr.struct_orxSPAWNER_t,ptr.orxVECTOR_520095097	proc setObjectSpeed(internal_pstSpawner: ptr orxSPAWNER_520095524;\n               internal_pvObjectSpeed: ptr orxVECTOR_520095097): orxSTATUS_520095067		18431
nim	getObjectSpeed	wrapper.html#getObjectSpeed,ptr.struct_orxSPAWNER_t,ptr.orxVECTOR_520095097	proc getObjectSpeed(internal_pstSpawner: ptr orxSPAWNER_520095524;\n               internal_pvObjectSpeed: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		18439
nim	spawn	wrapper.html#spawn,ptr.struct_orxSPAWNER_t,orxU32_520095025	proc spawn(internal_pstSpawner: ptr orxSPAWNER_520095524;\n      internal_u32Number: orxU32_520095025): orxU32_520095025		18447
nim	timeLineSetup	wrapper.html#timeLineSetup	proc timeLineSetup(): void		18543
nim	timeLineInit	wrapper.html#timeLineInit	proc timeLineInit(): orxSTATUS_520095067		18549
nim	timeLineExit	wrapper.html#timeLineExit	proc timeLineExit(): void		18554
nim	timeLineCreate	wrapper.html#timeLineCreate	proc timeLineCreate(): ptr orxTIMELINE_520095526		18559
nim	timeLineDelete	wrapper.html#timeLineDelete,ptr.struct_orxTIMELINE_t	proc timeLineDelete(internal_pstTimeLine: ptr orxTIMELINE_520095526): orxSTATUS_520095067		18566
nim	orxTimeLine_ClearCache	wrapper.html#orxTimeLine_ClearCache	proc orxTimeLine_ClearCache(): orxSTATUS_520095067		18573
nim	orxTimeLine_Enable	wrapper.html#orxTimeLine_Enable,ptr.struct_orxTIMELINE_t,orxBOOL_520095039	proc orxTimeLine_Enable(internal_pstTimeLine: ptr orxTIMELINE_520095526;\n                   internal_bEnable: orxBOOL_520095039): void		18580
nim	orxTimeLine_IsEnabled	wrapper.html#orxTimeLine_IsEnabled,ptr.struct_orxTIMELINE_t	proc orxTimeLine_IsEnabled(internal_pstTimeLine: ptr orxTIMELINE_520095526): orxBOOL_520095039		18588
nim	orxTimeLine_AddTrackFromConfig	wrapper.html#orxTimeLine_AddTrackFromConfig,ptr.struct_orxTIMELINE_t,cstring	proc orxTimeLine_AddTrackFromConfig(internal_pstTimeLine: ptr orxTIMELINE_520095526;\n                               internal_zTrackID: cstring): orxSTATUS_520095067		18595
nim	orxTimeLine_RemoveTrackFromConfig	wrapper.html#orxTimeLine_RemoveTrackFromConfig,ptr.struct_orxTIMELINE_t,cstring	proc orxTimeLine_RemoveTrackFromConfig(internal_pstTimeLine: ptr orxTIMELINE_520095526;\n                                  internal_zTrackID: cstring): orxSTATUS_520095067		18603
nim	orxTimeLine_GetCount	wrapper.html#orxTimeLine_GetCount,ptr.struct_orxTIMELINE_t	proc orxTimeLine_GetCount(internal_pstTimeLine: ptr orxTIMELINE_520095526): orxU32_520095025		18611
nim	orxTimeLine_GetTrackDuration	wrapper.html#orxTimeLine_GetTrackDuration,cstring	proc orxTimeLine_GetTrackDuration(internal_zTrackID: cstring): orxFLOAT_520095041		18618
nim	triggerSetup	wrapper.html#triggerSetup	proc triggerSetup(): void		18625
nim	triggerInit	wrapper.html#triggerInit	proc triggerInit(): orxSTATUS_520095067		18630
nim	triggerExit	wrapper.html#triggerExit	proc triggerExit(): void		18635
nim	triggerCreate	wrapper.html#triggerCreate	proc triggerCreate(): ptr orxTRIGGER_520095536		18640
nim	triggerDelete	wrapper.html#triggerDelete,ptr.struct_orxTRIGGER_t	proc triggerDelete(internal_pstTrigger: ptr orxTRIGGER_520095536): orxSTATUS_520095067		18647
nim	addSetFromConfig	wrapper.html#addSetFromConfig,ptr.struct_orxTRIGGER_t,cstring	proc addSetFromConfig(internal_pstTrigger: ptr orxTRIGGER_520095536;\n                 internal_zConfigID: cstring): orxSTATUS_520095067		18673
nim	removeSetFromConfig	wrapper.html#removeSetFromConfig,ptr.struct_orxTRIGGER_t,cstring	proc removeSetFromConfig(internal_pstTrigger: ptr orxTRIGGER_520095536;\n                    internal_zConfigID: cstring): orxSTATUS_520095067		18681
nim	fire	wrapper.html#fire,ptr.struct_orxTRIGGER_t,cstring,ptr.cstring,orxU32_520095025	proc fire(internal_pstTrigger: ptr orxTRIGGER_520095536; internal_zEvent: cstring;\n     internal_azRefinementList: ptr cstring; internal_u32Size: orxU32_520095025): orxSTATUS_520095067		18695
nim	pluginSetup	wrapper.html#pluginSetup	proc pluginSetup(): void		18703
nim	pluginInit	wrapper.html#pluginInit	proc pluginInit(): orxSTATUS_520095067		18708
nim	pluginExit	wrapper.html#pluginExit	proc pluginExit(): void		18713
nim	loadUsingExt	wrapper.html#loadUsingExt,cstring,cstring	proc loadUsingExt(internal_zPluginFileName: cstring; internal_zPluginName: cstring): orxHANDLE_520095051		18724
nim	unload	wrapper.html#unload,orxHANDLE_520095051	proc unload(internal_hPluginHandle: orxHANDLE_520095051): orxSTATUS_520095067		18731
nim	getFunction	wrapper.html#getFunction,orxHANDLE_520095051,cstring	proc getFunction(internal_hPluginHandle: orxHANDLE_520095051;\n            internal_zFunctionName: cstring): orxPLUGIN_FUNCTION_520095212		18737
nim	getHandle	wrapper.html#getHandle,cstring	proc getHandle(internal_zPluginName: cstring): orxHANDLE_520095051		18744
nim	physicsSetup	wrapper.html#physicsSetup	proc physicsSetup(): void		18756
nim	getCollisionFlagName	wrapper.html#getCollisionFlagName,orxU32_520095025	proc getCollisionFlagName(internal_u32Flag: orxU32_520095025): cstring		18761
nim	getCollisionFlagValue	wrapper.html#getCollisionFlagValue,cstring	proc getCollisionFlagValue(internal_zFlag: cstring): orxU32_520095025		18768
nim	physicsInit	wrapper.html#physicsInit	proc physicsInit(): orxSTATUS_520095067		18775
nim	physicsExit	wrapper.html#physicsExit	proc physicsExit(): void		18780
nim	setGravity	wrapper.html#setGravity,ptr.orxVECTOR_520095097	proc setGravity(internal_pvGravity: ptr orxVECTOR_520095097): orxSTATUS_520095067		18785
nim	getGravity	wrapper.html#getGravity,ptr.orxVECTOR_520095097	proc getGravity(internal_pvGravity: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		18791
nim	createBody	wrapper.html#createBody,orxHANDLE_520095051,ptr.orxBODY_DEF_520095548	proc createBody(internal_hUserData: orxHANDLE_520095051;\n           internal_pstBodyDef: ptr orxBODY_DEF_520095548): ptr orxPHYSICS_BODY_520095566		18797
nim	deleteBody	wrapper.html#deleteBody,ptr.struct_orxPHYSICS_BODY_t	proc deleteBody(internal_pstBody: ptr orxPHYSICS_BODY_520095566): void		18804
nim	createPart	wrapper.html#createPart,ptr.struct_orxPHYSICS_BODY_t,orxHANDLE_520095051,ptr.orxBODY_PART_DEF_520095552	proc createPart(internal_pstBody: ptr orxPHYSICS_BODY_520095566;\n           internal_hUserData: orxHANDLE_520095051;\n           internal_pstBodyPartDef: ptr orxBODY_PART_DEF_520095552): ptr orxPHYSICS_BODY_PART_520095568		18810
nim	deletePart	wrapper.html#deletePart,ptr.struct_orxPHYSICS_BODY_PART_t	proc deletePart(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568): void		18818
nim	createJoint	wrapper.html#createJoint,ptr.struct_orxPHYSICS_BODY_t,ptr.struct_orxPHYSICS_BODY_t,orxHANDLE_520095051,ptr.orxBODY_JOINT_DEF_520095556	proc createJoint(internal_pstSrcBody: ptr orxPHYSICS_BODY_520095566;\n            internal_pstDstBody: ptr orxPHYSICS_BODY_520095566;\n            internal_hUserData: orxHANDLE_520095051;\n            internal_pstBodyJointDef: ptr orxBODY_JOINT_DEF_520095556): ptr orxPHYSICS_BODY_JOINT_520095570		18824
nim	deleteJoint	wrapper.html#deleteJoint,ptr.struct_orxPHYSICS_BODY_JOINT_t	proc deleteJoint(internal_pstBodyJoint: ptr orxPHYSICS_BODY_JOINT_520095570): void		18833
nim	setFixedRotation	wrapper.html#setFixedRotation,ptr.struct_orxPHYSICS_BODY_t,orxBOOL_520095039	proc setFixedRotation(internal_pstBody: ptr orxPHYSICS_BODY_520095566;\n                 internal_bFixed: orxBOOL_520095039): orxSTATUS_520095067		18876
nim	setDynamic	wrapper.html#setDynamic,ptr.struct_orxPHYSICS_BODY_t,orxBOOL_520095039	proc setDynamic(internal_pstBody: ptr orxPHYSICS_BODY_520095566;\n           internal_bDynamic: orxBOOL_520095039): orxSTATUS_520095067		18884
nim	setAllowMoving	wrapper.html#setAllowMoving,ptr.struct_orxPHYSICS_BODY_t,orxBOOL_520095039	proc setAllowMoving(internal_pstBody: ptr orxPHYSICS_BODY_520095566;\n               internal_bAllowMoving: orxBOOL_520095039): orxSTATUS_520095067		18891
nim	getSpeedAtWorldPosition	wrapper.html#getSpeedAtWorldPosition,ptr.struct_orxPHYSICS_BODY_t,ptr.orxVECTOR_520095097,ptr.orxVECTOR_520095097	proc getSpeedAtWorldPosition(internal_pstBody: ptr orxPHYSICS_BODY_520095566;\n                        internal_pvPosition: ptr orxVECTOR_520095097;\n                        internal_pvSpeed: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		18919
nim	isFixedRotation	wrapper.html#isFixedRotation,ptr.struct_orxPHYSICS_BODY_t	proc isFixedRotation(internal_pstBody: ptr orxPHYSICS_BODY_520095566): orxBOOL_520095039		18943
nim	setLinearDamping	wrapper.html#setLinearDamping,ptr.struct_orxPHYSICS_BODY_t,orxFLOAT_520095041	proc setLinearDamping(internal_pstBody: ptr orxPHYSICS_BODY_520095566;\n                 internal_fDamping: orxFLOAT_520095041): orxSTATUS_520095067		18964
nim	setAngularDamping	wrapper.html#setAngularDamping,ptr.struct_orxPHYSICS_BODY_t,orxFLOAT_520095041	proc setAngularDamping(internal_pstBody: ptr orxPHYSICS_BODY_520095566;\n                  internal_fDamping: orxFLOAT_520095041): orxSTATUS_520095067		18972
nim	getLinearDamping	wrapper.html#getLinearDamping,ptr.struct_orxPHYSICS_BODY_t	proc getLinearDamping(internal_pstBody: ptr orxPHYSICS_BODY_520095566): orxFLOAT_520095041		18980
nim	getAngularDamping	wrapper.html#getAngularDamping,ptr.struct_orxPHYSICS_BODY_t	proc getAngularDamping(internal_pstBody: ptr orxPHYSICS_BODY_520095566): orxFLOAT_520095041		18987
nim	setPartSelfFlags	wrapper.html#setPartSelfFlags,ptr.struct_orxPHYSICS_BODY_PART_t,orxU16_520095027	proc setPartSelfFlags(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568;\n                 internal_u16SelfFlags: orxU16_520095027): orxSTATUS_520095067		19017
nim	setPartCheckMask	wrapper.html#setPartCheckMask,ptr.struct_orxPHYSICS_BODY_PART_t,orxU16_520095027	proc setPartCheckMask(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568;\n                 internal_u16CheckMask: orxU16_520095027): orxSTATUS_520095067		19025
nim	getPartSelfFlags	wrapper.html#getPartSelfFlags,ptr.struct_orxPHYSICS_BODY_PART_t	proc getPartSelfFlags(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568): orxU16_520095027		19033
nim	getPartCheckMask	wrapper.html#getPartCheckMask,ptr.struct_orxPHYSICS_BODY_PART_t	proc getPartCheckMask(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568): orxU16_520095027		19040
nim	setPartSolid	wrapper.html#setPartSolid,ptr.struct_orxPHYSICS_BODY_PART_t,orxBOOL_520095039	proc setPartSolid(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568;\n             internal_bSolid: orxBOOL_520095039): orxSTATUS_520095067		19047
nim	isPartSolid	wrapper.html#isPartSolid,ptr.struct_orxPHYSICS_BODY_PART_t	proc isPartSolid(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568): orxBOOL_520095039		19054
nim	setPartFriction	wrapper.html#setPartFriction,ptr.struct_orxPHYSICS_BODY_PART_t,orxFLOAT_520095041	proc setPartFriction(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568;\n                internal_fFriction: orxFLOAT_520095041): orxSTATUS_520095067		19060
nim	getPartFriction	wrapper.html#getPartFriction,ptr.struct_orxPHYSICS_BODY_PART_t	proc getPartFriction(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568): orxFLOAT_520095041		19068
nim	setPartRestitution	wrapper.html#setPartRestitution,ptr.struct_orxPHYSICS_BODY_PART_t,orxFLOAT_520095041	proc setPartRestitution(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568;\n                   internal_fRestitution: orxFLOAT_520095041): orxSTATUS_520095067		19075
nim	getPartRestitution	wrapper.html#getPartRestitution,ptr.struct_orxPHYSICS_BODY_PART_t	proc getPartRestitution(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568): orxFLOAT_520095041		19083
nim	setPartDensity	wrapper.html#setPartDensity,ptr.struct_orxPHYSICS_BODY_PART_t,orxFLOAT_520095041	proc setPartDensity(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568;\n               internal_fDensity: orxFLOAT_520095041): orxSTATUS_520095067		19090
nim	getPartDensity	wrapper.html#getPartDensity,ptr.struct_orxPHYSICS_BODY_PART_t	proc getPartDensity(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568): orxFLOAT_520095041		19098
nim	isInsidePart	wrapper.html#isInsidePart,ptr.struct_orxPHYSICS_BODY_PART_t,ptr.orxVECTOR_520095097	proc isInsidePart(internal_pstBodyPart: ptr orxPHYSICS_BODY_PART_520095568;\n             internal_pvPosition: ptr orxVECTOR_520095097): orxBOOL_520095039		19105
nim	enableMotor	wrapper.html#enableMotor,ptr.struct_orxPHYSICS_BODY_JOINT_t,orxBOOL_520095039	proc enableMotor(internal_pstBodyJoint: ptr orxPHYSICS_BODY_JOINT_520095570;\n            internal_bEnable: orxBOOL_520095039): void		19112
nim	setJointMotorSpeed	wrapper.html#setJointMotorSpeed,ptr.struct_orxPHYSICS_BODY_JOINT_t,orxFLOAT_520095041	proc setJointMotorSpeed(internal_pstBodyJoint: ptr orxPHYSICS_BODY_JOINT_520095570;\n                   internal_fSpeed: orxFLOAT_520095041): void		19119
nim	setJointMaxMotorTorque	wrapper.html#setJointMaxMotorTorque,ptr.struct_orxPHYSICS_BODY_JOINT_t,orxFLOAT_520095041	proc setJointMaxMotorTorque(internal_pstBodyJoint: ptr orxPHYSICS_BODY_JOINT_520095570;\n                       internal_fMaxTorque: orxFLOAT_520095041): void		19127
nim	getJointReactionForce	wrapper.html#getJointReactionForce,ptr.struct_orxPHYSICS_BODY_JOINT_t,ptr.orxVECTOR_520095097	proc getJointReactionForce(internal_pstBodyJoint: ptr orxPHYSICS_BODY_JOINT_520095570;\n                      internal_pvForce: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		19135
nim	getJointReactionTorque	wrapper.html#getJointReactionTorque,ptr.struct_orxPHYSICS_BODY_JOINT_t	proc getJointReactionTorque(internal_pstBodyJoint: ptr orxPHYSICS_BODY_JOINT_520095570): orxFLOAT_520095041		19143
nim	enableSimulation	wrapper.html#enableSimulation,orxBOOL_520095039	proc enableSimulation(internal_bEnable: orxBOOL_520095039): void		19172
nim	bodySetup	wrapper.html#bodySetup	proc bodySetup(): void		19179
nim	bodyInit	wrapper.html#bodyInit	proc bodyInit(): orxSTATUS_520095067		19184
nim	bodyExit	wrapper.html#bodyExit	proc bodyExit(): void		19189
nim	bodyCreate	wrapper.html#bodyCreate,ptr.orxSTRUCTURE_520095160,ptr.orxBODY_DEF_520095548	proc bodyCreate(internal_pstOwner: ptr orxSTRUCTURE_520095160;\n           internal_pstBodyDef: ptr orxBODY_DEF_520095548): ptr orxBODY_520095572		19194
nim	bodyCreateFromConfig	wrapper.html#bodyCreateFromConfig,ptr.orxSTRUCTURE_520095160,cstring	proc bodyCreateFromConfig(internal_pstOwner: ptr orxSTRUCTURE_520095160;\n                     internal_zConfigID: cstring): ptr orxBODY_520095572		19201
nim	bodyDelete	wrapper.html#bodyDelete,ptr.struct_orxBODY_t	proc bodyDelete(internal_pstBody: ptr orxBODY_520095572): orxSTATUS_520095067		19209
nim	testDefFlags	wrapper.html#testDefFlags,ptr.struct_orxBODY_t,orxU32_520095025	proc testDefFlags(internal_pstBody: ptr orxBODY_520095572;\n             internal_u32Flags: orxU32_520095025): orxBOOL_520095039		19221
nim	testAllDefFlags	wrapper.html#testAllDefFlags,ptr.struct_orxBODY_t,orxU32_520095025	proc testAllDefFlags(internal_pstBody: ptr orxBODY_520095572;\n                internal_u32Flags: orxU32_520095025): orxBOOL_520095039		19228
nim	getDefFlags	wrapper.html#getDefFlags,ptr.struct_orxBODY_t,orxU32_520095025	proc getDefFlags(internal_pstBody: ptr orxBODY_520095572;\n            internal_u32Mask: orxU32_520095025): orxU32_520095025		19236
nim	addPart	wrapper.html#addPart,ptr.struct_orxBODY_t,ptr.orxBODY_PART_DEF_520095552	proc addPart(internal_pstBody: ptr orxBODY_520095572;\n        internal_pstBodyPartDef: ptr orxBODY_PART_DEF_520095552): ptr orxBODY_PART_520095574		19243
nim	addPartFromConfig	wrapper.html#addPartFromConfig,ptr.struct_orxBODY_t,cstring	proc addPartFromConfig(internal_pstBody: ptr orxBODY_520095572;\n                  internal_zConfigID: cstring): ptr orxBODY_PART_520095574		19250
nim	removePartFromConfig	wrapper.html#removePartFromConfig,ptr.struct_orxBODY_t,cstring	proc removePartFromConfig(internal_pstBody: ptr orxBODY_520095572;\n                     internal_zConfigID: cstring): orxSTATUS_520095067		19258
nim	getNextPart	wrapper.html#getNextPart,ptr.struct_orxBODY_t,ptr.struct_orxBODY_PART_t	proc getNextPart(internal_pstBody: ptr orxBODY_520095572;\n            internal_pstBodyPart: ptr orxBODY_PART_520095574): ptr orxBODY_PART_520095574		19266
nim	getPartName	wrapper.html#getPartName,ptr.struct_orxBODY_PART_t	proc getPartName(internal_pstBodyPart: ptr orxBODY_PART_520095574): cstring		19273
nim	getPartDef	wrapper.html#getPartDef,ptr.struct_orxBODY_PART_t	proc getPartDef(internal_pstBodyPart: ptr orxBODY_PART_520095574): ptr orxBODY_PART_DEF_520095552		19279
nim	getPartBody	wrapper.html#getPartBody,ptr.struct_orxBODY_PART_t	proc getPartBody(internal_pstBodyPart: ptr orxBODY_PART_520095574): ptr orxBODY_520095572		19285
nim	removePart	wrapper.html#removePart,ptr.struct_orxBODY_PART_t	proc removePart(internal_pstBodyPart: ptr orxBODY_PART_520095574): orxSTATUS_520095067		19291
nim	addJoint	wrapper.html#addJoint,ptr.struct_orxBODY_t,ptr.struct_orxBODY_t,ptr.orxBODY_JOINT_DEF_520095556	proc addJoint(internal_pstSrcBody: ptr orxBODY_520095572;\n         internal_pstDstBody: ptr orxBODY_520095572;\n         internal_pstBodyJointDef: ptr orxBODY_JOINT_DEF_520095556): ptr orxBODY_JOINT_520095576		19297
nim	addJointFromConfig	wrapper.html#addJointFromConfig,ptr.struct_orxBODY_t,ptr.struct_orxBODY_t,cstring	proc addJointFromConfig(internal_pstSrcBody: ptr orxBODY_520095572;\n                   internal_pstDstBody: ptr orxBODY_520095572;\n                   internal_zConfigID: cstring): ptr orxBODY_JOINT_520095576		19305
nim	getNextJoint	wrapper.html#getNextJoint,ptr.struct_orxBODY_t,ptr.struct_orxBODY_JOINT_t	proc getNextJoint(internal_pstBody: ptr orxBODY_520095572;\n             internal_pstBodyJoint: ptr orxBODY_JOINT_520095576): ptr orxBODY_JOINT_520095576		19314
nim	getJointName	wrapper.html#getJointName,ptr.struct_orxBODY_JOINT_t	proc getJointName(internal_pstBodyJoint: ptr orxBODY_JOINT_520095576): cstring		19321
nim	removeJoint	wrapper.html#removeJoint,ptr.struct_orxBODY_JOINT_t	proc removeJoint(internal_pstBodyJoint: ptr orxBODY_JOINT_520095576): orxSTATUS_520095067		19327
nim	isDynamic	wrapper.html#isDynamic,ptr.struct_orxBODY_t	proc isDynamic(internal_pstBody: ptr orxBODY_520095572): orxBOOL_520095039		19451
nim	getAllowMoving	wrapper.html#getAllowMoving,ptr.struct_orxBODY_t	proc getAllowMoving(internal_pstBody: ptr orxBODY_520095572): orxBOOL_520095039		19457
nim	isInside	wrapper.html#isInside,ptr.struct_orxBODY_t,ptr.orxVECTOR_520095097	proc isInside(internal_pstBody: ptr orxBODY_520095572;\n         internal_pvPosition: ptr orxVECTOR_520095097): orxBOOL_520095039		19508
nim	cameraSetup	wrapper.html#cameraSetup	proc cameraSetup(): void		19693
nim	cameraInit	wrapper.html#cameraInit	proc cameraInit(): orxSTATUS_520095067		19698
nim	cameraExit	wrapper.html#cameraExit	proc cameraExit(): void		19703
nim	cameraCreate	wrapper.html#cameraCreate,orxU32_520095025	proc cameraCreate(internal_u32Flags: orxU32_520095025): ptr orxCAMERA_520095578		19708
nim	cameraCreateFromConfig	wrapper.html#cameraCreateFromConfig,cstring	proc cameraCreateFromConfig(internal_zConfigID: cstring): ptr orxCAMERA_520095578		19714
nim	cameraDelete	wrapper.html#cameraDelete,ptr.struct_orxCAMERA_t	proc cameraDelete(internal_pstCamera: ptr orxCAMERA_520095578): orxSTATUS_520095067		19721
nim	addGroupID	wrapper.html#addGroupID,ptr.struct_orxCAMERA_t,orxU64_520095023,orxBOOL_520095039	proc addGroupID(internal_pstCamera: ptr orxCAMERA_520095578;\n           internal_stGroupID: orxSTRINGID_520095047;\n           internal_bAddFirst: orxBOOL_520095039): orxSTATUS_520095067		19727
nim	removeGroupID	wrapper.html#removeGroupID,ptr.struct_orxCAMERA_t,orxU64_520095023	proc removeGroupID(internal_pstCamera: ptr orxCAMERA_520095578;\n              internal_stGroupID: orxSTRINGID_520095047): orxSTATUS_520095067		19735
nim	getGroupIDCount	wrapper.html#getGroupIDCount,ptr.struct_orxCAMERA_t	proc getGroupIDCount(internal_pstCamera: ptr orxCAMERA_520095578): orxU32_520095025		19743
nim	enableGroupIDSorting	wrapper.html#enableGroupIDSorting,ptr.struct_orxCAMERA_t,orxU32_520095025,orxBOOL_520095039	proc enableGroupIDSorting(internal_pstCamera: ptr orxCAMERA_520095578;\n                     internal_u32Index: orxU32_520095025;\n                     internal_bEnable: orxBOOL_520095039): orxSTATUS_520095067		19757
nim	isGroupIDSortingEnabled	wrapper.html#isGroupIDSortingEnabled,ptr.struct_orxCAMERA_t,orxU32_520095025	proc isGroupIDSortingEnabled(internal_pstCamera: ptr orxCAMERA_520095578;\n                        internal_u32Index: orxU32_520095025): orxBOOL_520095039		19766
nim	setFrustum	wrapper.html#setFrustum,ptr.struct_orxCAMERA_t,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041,orxFLOAT_520095041	proc setFrustum(internal_pstCamera: ptr orxCAMERA_520095578;\n           internal_fWidth: orxFLOAT_520095041;\n           internal_fHeight: orxFLOAT_520095041;\n           internal_fNear: orxFLOAT_520095041; internal_fFar: orxFLOAT_520095041): orxSTATUS_520095067		19774
nim	setZoom	wrapper.html#setZoom,ptr.struct_orxCAMERA_t,orxFLOAT_520095041	proc setZoom(internal_pstCamera: ptr orxCAMERA_520095578;\n        internal_fZoom: orxFLOAT_520095041): orxSTATUS_520095067		19797
nim	getFrustum	wrapper.html#getFrustum,ptr.struct_orxCAMERA_t,ptr.orxAABOX_520095420	proc getFrustum(internal_pstCamera: ptr orxCAMERA_520095578;\n           internal_pstFrustum: ptr orxAABOX_520095420): ptr orxAABOX_520095420		19804
nim	getZoom	wrapper.html#getZoom,ptr.struct_orxCAMERA_t	proc getZoom(internal_pstCamera: ptr orxCAMERA_520095578): orxFLOAT_520095041		19824
nim	cameraGet	wrapper.html#cameraGet,cstring	proc cameraGet(internal_zName: cstring): ptr orxCAMERA_520095578		19836
nim	shaderSetup	wrapper.html#shaderSetup	proc shaderSetup(): void		19861
nim	shaderInit	wrapper.html#shaderInit	proc shaderInit(): orxSTATUS_520095067		19866
nim	shaderExit	wrapper.html#shaderExit	proc shaderExit(): void		19871
nim	shaderCreate	wrapper.html#shaderCreate	proc shaderCreate(): ptr orxSHADER_520095588		19876
nim	shaderCreateFromConfig	wrapper.html#shaderCreateFromConfig,cstring	proc shaderCreateFromConfig(internal_zConfigID: cstring): ptr orxSHADER_520095588		19882
nim	shaderDelete	wrapper.html#shaderDelete,ptr.struct_orxSHADER_t	proc shaderDelete(internal_pstShader: ptr orxSHADER_520095588): orxSTATUS_520095067		19889
nim	addFloatParam	wrapper.html#addFloatParam,ptr.struct_orxSHADER_t,cstring,orxU32_520095025,ptr.orxFLOAT_520095041	proc addFloatParam(internal_pstShader: ptr orxSHADER_520095588;\n              internal_zName: cstring; internal_u32ArraySize: orxU32_520095025;\n              internal_afValueList: ptr orxFLOAT_520095041): orxSTATUS_520095067		19914
nim	addTextureParam	wrapper.html#addTextureParam,ptr.struct_orxSHADER_t,cstring,orxU32_520095025,ptr.ptr.struct_orxTEXTURE_t	proc addTextureParam(internal_pstShader: ptr orxSHADER_520095588;\n                internal_zName: cstring;\n                internal_u32ArraySize: orxU32_520095025;\n                internal_apstValueList: ptr ptr orxTEXTURE_520095322): orxSTATUS_520095067		19923
nim	addVectorParam	wrapper.html#addVectorParam,ptr.struct_orxSHADER_t,cstring,orxU32_520095025,ptr.orxVECTOR_520095097	proc addVectorParam(internal_pstShader: ptr orxSHADER_520095588;\n               internal_zName: cstring; internal_u32ArraySize: orxU32_520095025;\n               internal_avValueList: ptr orxVECTOR_520095097): orxSTATUS_520095067		19932
nim	addTimeParam	wrapper.html#addTimeParam,ptr.struct_orxSHADER_t,cstring,orxFLOAT_520095041,cstring	proc addTimeParam(internal_pstShader: ptr orxSHADER_520095588;\n             internal_zName: cstring; internal_fWrap: orxFLOAT_520095041;\n             internal_zFXName: cstring): orxSTATUS_520095067		19941
nim	setFloatParam	wrapper.html#setFloatParam,ptr.struct_orxSHADER_t,cstring,orxU32_520095025,ptr.orxFLOAT_520095041	proc setFloatParam(internal_pstShader: ptr orxSHADER_520095588;\n              internal_zName: cstring; internal_u32ArraySize: orxU32_520095025;\n              internal_afValueList: ptr orxFLOAT_520095041): orxSTATUS_520095067		19949
nim	setTextureParam	wrapper.html#setTextureParam,ptr.struct_orxSHADER_t,cstring,orxU32_520095025,ptr.ptr.struct_orxTEXTURE_t	proc setTextureParam(internal_pstShader: ptr orxSHADER_520095588;\n                internal_zName: cstring;\n                internal_u32ArraySize: orxU32_520095025;\n                internal_apstValueList: ptr ptr orxTEXTURE_520095322): orxSTATUS_520095067		19958
nim	setVectorParam	wrapper.html#setVectorParam,ptr.struct_orxSHADER_t,cstring,orxU32_520095025,ptr.orxVECTOR_520095097	proc setVectorParam(internal_pstShader: ptr orxSHADER_520095588;\n               internal_zName: cstring; internal_u32ArraySize: orxU32_520095025;\n               internal_avValueList: ptr orxVECTOR_520095097): orxSTATUS_520095067		19967
nim	compileCode	wrapper.html#compileCode,ptr.struct_orxSHADER_t,ptr.cstring,orxU32_520095025	proc compileCode(internal_pstShader: ptr orxSHADER_520095588;\n            internal_azCodeList: ptr cstring; internal_u32Size: orxU32_520095025): orxSTATUS_520095067		19976
nim	shaderPointerSetup	wrapper.html#shaderPointerSetup	proc shaderPointerSetup(): void		20008
nim	shaderPointerInit	wrapper.html#shaderPointerInit	proc shaderPointerInit(): orxSTATUS_520095067		20014
nim	shaderPointerExit	wrapper.html#shaderPointerExit	proc shaderPointerExit(): void		20021
nim	shaderPointerCreate	wrapper.html#shaderPointerCreate	proc shaderPointerCreate(): ptr orxSHADERPOINTER_520095598		20027
nim	shaderPointerDelete	wrapper.html#shaderPointerDelete,ptr.struct_orxSHADERPOINTER_t	proc shaderPointerDelete(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598): orxSTATUS_520095067		20034
nim	orxShaderPointer_Start	wrapper.html#orxShaderPointer_Start,ptr.struct_orxSHADERPOINTER_t	proc orxShaderPointer_Start(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598): orxSTATUS_520095067		20041
nim	orxShaderPointer_Stop	wrapper.html#orxShaderPointer_Stop,ptr.struct_orxSHADERPOINTER_t	proc orxShaderPointer_Stop(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598): orxSTATUS_520095067		20048
nim	orxShaderPointer_Enable	wrapper.html#orxShaderPointer_Enable,ptr.struct_orxSHADERPOINTER_t,orxBOOL_520095039	proc orxShaderPointer_Enable(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598;\n                        internal_bEnable: orxBOOL_520095039): void		20055
nim	orxShaderPointer_IsEnabled	wrapper.html#orxShaderPointer_IsEnabled,ptr.struct_orxSHADERPOINTER_t	proc orxShaderPointer_IsEnabled(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598): orxBOOL_520095039		20063
nim	orxShaderPointer_AddShader	wrapper.html#orxShaderPointer_AddShader,ptr.struct_orxSHADERPOINTER_t,ptr.struct_orxSHADER_t	proc orxShaderPointer_AddShader(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598;\n                           internal_pstShader: ptr orxSHADER_520095588): orxSTATUS_520095067		20070
nim	orxShaderPointer_RemoveShader	wrapper.html#orxShaderPointer_RemoveShader,ptr.struct_orxSHADERPOINTER_t,ptr.struct_orxSHADER_t	proc orxShaderPointer_RemoveShader(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598;\n                              internal_pstShader: ptr orxSHADER_520095588): orxSTATUS_520095067		20078
nim	orxShaderPointer_GetShader	wrapper.html#orxShaderPointer_GetShader,ptr.struct_orxSHADERPOINTER_t,orxU32_520095025	proc orxShaderPointer_GetShader(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598;\n                           internal_u32Index: orxU32_520095025): ptr orxSHADER_520095588		20086
nim	orxShaderPointer_AddShaderFromConfig	wrapper.html#orxShaderPointer_AddShaderFromConfig,ptr.struct_orxSHADERPOINTER_t,cstring	proc orxShaderPointer_AddShaderFromConfig(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598;\n                                     internal_zShaderConfigID: cstring): orxSTATUS_520095067		20094
nim	orxShaderPointer_RemoveShaderFromConfig	wrapper.html#orxShaderPointer_RemoveShaderFromConfig,ptr.struct_orxSHADERPOINTER_t,cstring	proc orxShaderPointer_RemoveShaderFromConfig(internal_pstShaderPointer: ptr orxSHADERPOINTER_520095598;\n                                        internal_zShaderConfigID: cstring): orxSTATUS_520095067		20103
nim	viewportSetup	wrapper.html#viewportSetup	proc viewportSetup(): void		20112
nim	viewportInit	wrapper.html#viewportInit	proc viewportInit(): orxSTATUS_520095067		20118
nim	viewportExit	wrapper.html#viewportExit	proc viewportExit(): void		20123
nim	viewportCreate	wrapper.html#viewportCreate	proc viewportCreate(): ptr orxVIEWPORT_520095600		20128
nim	viewportCreateFromConfig	wrapper.html#viewportCreateFromConfig,cstring	proc viewportCreateFromConfig(internal_zConfigID: cstring): ptr orxVIEWPORT_520095600		20135
nim	viewportDelete	wrapper.html#viewportDelete,ptr.struct_orxVIEWPORT_t	proc viewportDelete(internal_pstViewport: ptr orxVIEWPORT_520095600): orxSTATUS_520095067		20142
nim	setTextureList	wrapper.html#setTextureList,ptr.struct_orxVIEWPORT_t,orxU32_520095025,ptr.ptr.struct_orxTEXTURE_t	proc setTextureList(internal_pstViewport: ptr orxVIEWPORT_520095600;\n               internal_u32TextureNumber: orxU32_520095025;\n               internal_apstTextureList: ptr ptr orxTEXTURE_520095322): void		20149
nim	getTextureList	wrapper.html#getTextureList,ptr.struct_orxVIEWPORT_t,orxU32_520095025,ptr.ptr.struct_orxTEXTURE_t	proc getTextureList(internal_pstViewport: ptr orxVIEWPORT_520095600;\n               internal_u32TextureNumber: orxU32_520095025;\n               internal_apstTextureList: ptr ptr orxTEXTURE_520095322): orxSTATUS_520095067		20158
nim	getTextureCount	wrapper.html#getTextureCount,ptr.struct_orxVIEWPORT_t	proc getTextureCount(internal_pstViewport: ptr orxVIEWPORT_520095600): orxU32_520095025		20167
nim	setBackgroundColor	wrapper.html#setBackgroundColor,ptr.struct_orxVIEWPORT_t,ptr.orxCOLOR_520095308	proc setBackgroundColor(internal_pstViewport: ptr orxVIEWPORT_520095600;\n                   internal_pstColor: ptr orxCOLOR_520095308): orxSTATUS_520095067		20174
nim	clearBackgroundColor	wrapper.html#clearBackgroundColor,ptr.struct_orxVIEWPORT_t	proc clearBackgroundColor(internal_pstViewport: ptr orxVIEWPORT_520095600): orxSTATUS_520095067		20182
nim	hasBackgroundColor	wrapper.html#hasBackgroundColor,ptr.struct_orxVIEWPORT_t	proc hasBackgroundColor(internal_pstViewport: ptr orxVIEWPORT_520095600): orxBOOL_520095039		20189
nim	getBackgroundColor	wrapper.html#getBackgroundColor,ptr.struct_orxVIEWPORT_t,ptr.orxCOLOR_520095308	proc getBackgroundColor(internal_pstViewport: ptr orxVIEWPORT_520095600;\n                   internal_pstColor: ptr orxCOLOR_520095308): ptr orxCOLOR_520095308		20196
nim	setCamera	wrapper.html#setCamera,ptr.struct_orxVIEWPORT_t,ptr.struct_orxCAMERA_t	proc setCamera(internal_pstViewport: ptr orxVIEWPORT_520095600;\n          internal_pstCamera: ptr orxCAMERA_520095578): void		20217
nim	getCamera	wrapper.html#getCamera,ptr.struct_orxVIEWPORT_t	proc getCamera(internal_pstViewport: ptr orxVIEWPORT_520095600): ptr orxCAMERA_520095578		20224
nim	getShaderPointer	wrapper.html#getShaderPointer,ptr.struct_orxVIEWPORT_t	proc getShaderPointer(internal_pstViewport: ptr orxVIEWPORT_520095600): ptr orxSHADERPOINTER_520095598		20258
nim	setRelativePosition	wrapper.html#setRelativePosition,ptr.struct_orxVIEWPORT_t,orxU32_520095025	proc setRelativePosition(internal_pstViewport: ptr orxVIEWPORT_520095600;\n                    internal_u32AlignFlags: orxU32_520095025): orxSTATUS_520095067		20285
nim	setRelativeSize	wrapper.html#setRelativeSize,ptr.struct_orxVIEWPORT_t,orxFLOAT_520095041,orxFLOAT_520095041	proc setRelativeSize(internal_pstViewport: ptr orxVIEWPORT_520095600;\n                internal_fWidth: orxFLOAT_520095041;\n                internal_fHeight: orxFLOAT_520095041): orxSTATUS_520095067		20308
nim	getRelativeSize	wrapper.html#getRelativeSize,ptr.struct_orxVIEWPORT_t,ptr.orxFLOAT_520095041,ptr.orxFLOAT_520095041	proc getRelativeSize(internal_pstViewport: ptr orxVIEWPORT_520095600;\n                internal_pfWidth: ptr orxFLOAT_520095041;\n                internal_pfHeight: ptr orxFLOAT_520095041): void		20325
nim	getBox	wrapper.html#getBox,ptr.struct_orxVIEWPORT_t,ptr.orxAABOX_520095420	proc getBox(internal_pstViewport: ptr orxVIEWPORT_520095600;\n       internal_pstBox: ptr orxAABOX_520095420): ptr orxAABOX_520095420		20334
nim	getCorrectionRatio	wrapper.html#getCorrectionRatio,ptr.struct_orxVIEWPORT_t	proc getCorrectionRatio(internal_pstViewport: ptr orxVIEWPORT_520095600): orxFLOAT_520095041		20341
nim	viewportGet	wrapper.html#viewportGet,cstring	proc viewportGet(internal_zName: cstring): ptr orxVIEWPORT_520095600		20354
nim	renderSetup	wrapper.html#renderSetup	proc renderSetup(): void		20360
nim	renderInit	wrapper.html#renderInit	proc renderInit(): orxSTATUS_520095067		20365
nim	renderExit	wrapper.html#renderExit	proc renderExit(): void		20370
nim	getScreenPosition	wrapper.html#getScreenPosition,ptr.orxVECTOR_520095097,ptr.struct_orxVIEWPORT_t,ptr.orxVECTOR_520095097	proc getScreenPosition(internal_pvWorldPosition: ptr orxVECTOR_520095097;\n                  internal_pstViewport: ptr orxVIEWPORT_520095600;\n                  internal_pvScreenPosition: ptr orxVECTOR_520095097): ptr orxVECTOR_520095097		20384
nim	soundPointerSetup	wrapper.html#soundPointerSetup	proc soundPointerSetup(): void		20393
nim	soundPointerInit	wrapper.html#soundPointerInit	proc soundPointerInit(): orxSTATUS_520095067		20399
nim	soundPointerExit	wrapper.html#soundPointerExit	proc soundPointerExit(): void		20406
nim	soundPointerCreate	wrapper.html#soundPointerCreate	proc soundPointerCreate(): ptr orxSOUNDPOINTER_520095614		20412
nim	soundPointerDelete	wrapper.html#soundPointerDelete,ptr.struct_orxSOUNDPOINTER_t	proc soundPointerDelete(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxSTATUS_520095067		20419
nim	orxSoundPointer_Enable	wrapper.html#orxSoundPointer_Enable,ptr.struct_orxSOUNDPOINTER_t,orxBOOL_520095039	proc orxSoundPointer_Enable(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                       internal_bEnable: orxBOOL_520095039): void		20426
nim	orxSoundPointer_IsEnabled	wrapper.html#orxSoundPointer_IsEnabled,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_IsEnabled(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxBOOL_520095039		20434
nim	orxSoundPointer_SetVolume	wrapper.html#orxSoundPointer_SetVolume,ptr.struct_orxSOUNDPOINTER_t,orxFLOAT_520095041	proc orxSoundPointer_SetVolume(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                          internal_fVolume: orxFLOAT_520095041): orxSTATUS_520095067		20441
nim	orxSoundPointer_SetPitch	wrapper.html#orxSoundPointer_SetPitch,ptr.struct_orxSOUNDPOINTER_t,orxFLOAT_520095041	proc orxSoundPointer_SetPitch(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                         internal_fPitch: orxFLOAT_520095041): orxSTATUS_520095067		20449
nim	orxSoundPointer_SetPanning	wrapper.html#orxSoundPointer_SetPanning,ptr.struct_orxSOUNDPOINTER_t,orxFLOAT_520095041,orxBOOL_520095039	proc orxSoundPointer_SetPanning(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                           internal_fPanning: orxFLOAT_520095041;\n                           internal_bMix: orxBOOL_520095039): orxSTATUS_520095067		20457
nim	orxSoundPointer_Play	wrapper.html#orxSoundPointer_Play,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_Play(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxSTATUS_520095067		20466
nim	orxSoundPointer_Pause	wrapper.html#orxSoundPointer_Pause,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_Pause(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxSTATUS_520095067		20473
nim	orxSoundPointer_Stop	wrapper.html#orxSoundPointer_Stop,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_Stop(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxSTATUS_520095067		20480
nim	orxSoundPointer_AddSound	wrapper.html#orxSoundPointer_AddSound,ptr.struct_orxSOUNDPOINTER_t,ptr.struct_orxSOUND_t	proc orxSoundPointer_AddSound(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                         internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		20487
nim	orxSoundPointer_RemoveSound	wrapper.html#orxSoundPointer_RemoveSound,ptr.struct_orxSOUNDPOINTER_t,ptr.struct_orxSOUND_t	proc orxSoundPointer_RemoveSound(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                            internal_pstSound: ptr orxSOUND_520095464): orxSTATUS_520095067		20495
nim	orxSoundPointer_RemoveAllSounds	wrapper.html#orxSoundPointer_RemoveAllSounds,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_RemoveAllSounds(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxSTATUS_520095067		20503
nim	orxSoundPointer_AddSoundFromConfig	wrapper.html#orxSoundPointer_AddSoundFromConfig,ptr.struct_orxSOUNDPOINTER_t,cstring	proc orxSoundPointer_AddSoundFromConfig(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                                   internal_zSoundConfigID: cstring): orxSTATUS_520095067		20510
nim	orxSoundPointer_RemoveSoundFromConfig	wrapper.html#orxSoundPointer_RemoveSoundFromConfig,ptr.struct_orxSOUNDPOINTER_t,cstring	proc orxSoundPointer_RemoveSoundFromConfig(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                                      internal_zSoundConfigID: cstring): orxSTATUS_520095067		20519
nim	orxSoundPointer_GetLastAddedSound	wrapper.html#orxSoundPointer_GetLastAddedSound,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_GetLastAddedSound(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): ptr orxSOUND_520095464		20528
nim	orxSoundPointer_AddFilter	wrapper.html#orxSoundPointer_AddFilter,ptr.struct_orxSOUNDPOINTER_t,ptr.orxSOUND_FILTER_DATA_520095458,orxBOOL_520095039	proc orxSoundPointer_AddFilter(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n    internal_pstFilterData: ptr orxSOUND_FILTER_DATA_520095458;\n                          internal_bUseCustomParam: orxBOOL_520095039): orxSTATUS_520095067		20536
nim	orxSoundPointer_RemoveLastFilter	wrapper.html#orxSoundPointer_RemoveLastFilter,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_RemoveLastFilter(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxSTATUS_520095067		20545
nim	orxSoundPointer_RemoveAllFilters	wrapper.html#orxSoundPointer_RemoveAllFilters,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_RemoveAllFilters(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxSTATUS_520095067		20553
nim	orxSoundPointer_AddFilterFromConfig	wrapper.html#orxSoundPointer_AddFilterFromConfig,ptr.struct_orxSOUNDPOINTER_t,cstring	proc orxSoundPointer_AddFilterFromConfig(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614;\n                                    internal_zFilterConfigID: cstring): orxSTATUS_520095067		20561
nim	orxSoundPointer_GetCount	wrapper.html#orxSoundPointer_GetCount,ptr.struct_orxSOUNDPOINTER_t	proc orxSoundPointer_GetCount(internal_pstSoundPointer: ptr orxSOUNDPOINTER_520095614): orxU32_520095025		20570
nim	sbStopByEvent	wrapper.html#sbStopByEvent	var sbStopByEvent		20577
nim	orx_DefaultEventHandler	wrapper.html#orx_DefaultEventHandler,ptr.orxEVENT_520095368	proc orx_DefaultEventHandler(internal_pstEvent: ptr orxEVENT_520095368): orxSTATUS_520095067		20583
nim	orx_MainSetup	wrapper.html#orx_MainSetup	proc orx_MainSetup(): void		20590
